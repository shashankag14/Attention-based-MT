PHP Manual
Prev
Appendix K.
About the manual
Next
This manual is written in XML using the DocBook XML DTD, using DSSSL (Document Style and Semantics Specification Language) for formatting, and experimentally the XSLT (Extensible Stylesheet Language Transformations) for maintenance and formatting.
Using XML as a source format gives us the ability to generate many output formats from the source files, while only maintaining one source document for all formats.
The tools used for formatting HTML and TeX versions are Jade, written by James Clark and The Modular DocBook Stylesheets written by Norman Walsh.
We use Microsoft HTML Help Workshop to generate the Windows HTML Help format of the manual, and of course PHP itself to do some additional conversions and formatting.
You can download the manual in various languages and formats, including plain text, plain HTML, PDF, PalmPilot DOC, PalmPilot iSilo and Windows HTML Help, from http: / /www.php.net / docs.php.
The manuals are updated automatically as the text is updated.
You can find more information about downloading the XML source code of this documentation at http: / /cvs.php.net /.
The documentation is stored in the phpdoc module.
Prev
Home
Next
How to help improve the documentation
Up
Translations
PHP Manual
Prev
Appendix K.
About the manual
Next
There are three ways you can help to improve this documentation.
If you find errors in this manual, in any language, please report them using the bug system at http: / /bugs.php.net /.
Classify the bug as "Documentation Problem".
Note:
Please don 't abuse the bug system by submitting requests for help.
Use the mailing lists or community sites mentioned earlier, instead.
By contributing notes, you can provide additional examples, caveats, and clarifications for other readers.
You can read more about annotations in the 'About user notes' section of this appendix.
If you know English and some foreign language, you may also help out in the translations.
If you would like to start a new translation, or help in a translation project, please read http: / /cvs.php.net / co.php / phpdoc / howto / howto.html.tar.gz.
Prev
Home
Next
How to find more information about PHP
Up
How we generate the formats
PHP Manual
Prev
Next
The PHP manual is provided in several formats.
These formats can be divided into two groups: online readable formats, and downloadable packages.
Note:
We cannot recommend any of those, as they tend to become out-of-date very quickly.
For best performance, you should choose the mirror site closest to you.
You can view the manual in either its plain (print-friendly) HTML format or an HTML format that integrates the manual into the look and feel of the PHP website itself.
An advantage of the online manual over most of the offline formats is the integration of user-contributed notes.
An obvious disadvantage is that you have to be online to view the manual in the online formats.
There are several offline formats of the manual, and the most appropriate format for you depends on what operating system you use and your personal reading style.
For information on how the manual is generated in so many formats, read the 'How we generate the formats' section of this appendix.
The most cross-platform formats of the manual are the HTML and plain-text versions.
The HTML format is provided both as a single HTML file and as a package of individual files for each section (which results in a collection of several thousand files).
The HTML and plaintext formats are provided as tar files compressed using the bzip2 archiver.
Another popular cross-platform format, and the format most suited to printing, is PDF (also known as Adobe Acrobat).
But before you rush to download this format and hit the Print button, be warned that the manual is nearly 2000 pages long, and constantly being revised.
Note:
If you do not already have a program capable of viewing PDF format files, you may need to download Adobe Acrobat Reader.
For owners of Palm-compatible handhelds, the Palm document and iSilo formats are ideal for this platform.
You can bring your handheld with you on your daily commute and use a DOC or iSilo reader to brush up on your PHP knowledge, or just use it as a quick reference.
For Windows platforms, the Windows HTML Help version of the manual soups up the HTML format for use with the Windows HTML Help application.
Many popular Windows PHP development environments also integrate with this version of the documentation to provide easy access.
Prev
Home
Next
Up
About user notes
PHP Manual
Prev
Appendix K.
About the manual
Next
This manual does not attempt to provide instruction about general programming practices.
If you are a first-time, or even just a beginning, programmer, you may find it difficult to learn how to program in PHP using just this manual.
You may want to seek out a text more oriented towards beginners.
You can find a list of PHP-related books at http: / /www.php.net / books.php.
There are a number of active mailing lists for discussion of all aspects of programming with PHP.
If you find yourself stuck on a problem for which you can 't find your own solution, you may be able to get help from someone on these lists.
You can find a list of the mailing lists at http: / /www.php.net / support.php, as well as links to the mailing list archives and other online support resources.
Furthermore, at http: / /www.php.net / links.php there is a list of websites devoted to PHP articles, forums, and code galleries.
Prev
Home
Next
PHP versions documented in this manual
Up
How to help improve the documentation
PHP Manual
Prev
Appendix K.
About the manual
Next
The user-contributed notes play an important role in the development of this manual.
And until the notes have been incorporated, they can be viewed in their submitted form online and in some of the offline formats.
The user-contributed notes are not moderated before they appear online, so the quality of the writing or code examples, and even the veracity of the contribution, cannot be guaranteed. (Not that there is any guarantee of the quality or accuracy of the manual text itself.)
Note:
For more details see the Manual 's Copyright page.
Prev
Home
Next
About the manual
Up
How to read a function definition (prototype)
PHP Manual
Prev
Next
Here is the aliases list.
All aliases are listed here.
It is usually a bad idea to use aliases, as they may be bound to obsolescence or renaming, which will lead to unportable script.
This list is provided to help those who want to upgrade their old scripts to newer syntax.
However, some functions simply have two names, and there is no real preference. (For example, is_int() and is_integer() are equally good)
For an alias list that updates daily, have a look here.
Table F-1.
Aliases
Extension used
gettext()
Miscellaneous functions
Base syntax
Filesystem
Base syntax
Base syntax
Base syntax
Base syntax
Base syntax
Base syntax
Base syntax
Base syntax
Multi-bytes Strings
Multi-bytes Strings
Multi-bytes Strings
Multi-bytes Strings
Multi-bytes Strings
msql_createdb
msql_create_db()
odbc_field_precision
odbc_field_len()
OCI8
output
swfmovie_output()
Ming (flash)
parent
domxml_parent()
DOM XML
pdf_add_outline
pdf_add_bookmark()
PDF
pg_clientencoding
pg_client_encoding()
PostgreSQL
Base syntax
Base syntax
strchr
swfbitmap_init()
Ming (flash)
Ming (flash)
swftextfield
swftextfield_init()
Ming (flash)
domxml_unlink_node()
xptr_new_context
Next
Reporting Errors
List of Reserved Words
PHP Manual
Prev
Next
Prev
Home
Next
Miscellaneous Questions
History of PHP and related projects
PHP Manual
Prev
Appendix E.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Example 2.
Prev
Home
Next
COM support functions for Windows
Up
PHP Manual
Prev
Next
The given directory is opened.
The handle property can be used with other directory functions such as readdir(), rewinddir() and closedir().
The path property is set to path the directory that was opened.
Please note the fashion in which dir() 's return value is checked in the example below.
Example 1. dir() example
Note:
Note:
For a full list of predefined classes in PHP, please see Predefined Classes.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 4.
Next
Note:
Example 4-2.
Note:
Table 4-1.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 4.
Next
Table 4-2.
Table 4-3.
Note:
Note:
Table 4-4.
Table 4-5.
Note:
Note:
Note:
Table 4-6.
Example 4-3.
Example 4-4.
Note:
Note:
Table 4-7.
Table 4-8.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Example 4-1. php.ini example
Prev
Home
Next
Up
PHP Manual
Prev
Control Structures
Next
PHP offers an alternative syntax for some of its control structures; namely, if, while, for, foreach, and switch.
In each case, the basic form of the alternate syntax is to change the opening brace to a colon (:) and the closing brace to endif;, endwhile;, endfor;, endforeach;, or endswitch;, respectively.
A is equal to 5 ?php endif;?
In the above example, the HTML block "A is equal to 5" is nested within an if statement written in the alternative syntax.
The HTML block would be displayed only if $a is equal to 5.
The alternative syntax applies to else and elseif as well.
The following is an if structure with elseif and else in the alternative format:
if ($a == 5): print "a equals 5"; print ".. ."; elseif ($a == 6): print "a equals 6"; print "!! !"; else: print "a is neither 5 nor 6"; endif;
See also while, for, and if for further examples.
Prev
Home
Next
Up
PHP Manual
Prev
Control Structures
Next
break ends execution of the current for, foreach while, do..while or switch structure.
break accepts an optional numeric argument which tells it how many nested enclosing structures are to be broken out of.
$arr = array ('one', 'two', 'three', 'four', 'stop', 'five'); while (list (, $val) = each ($arr)) {if ($val == 'stop') {break; / * You could also write'break 1; 'here. * /} echo "$val br \n";} / * Using the optional argument. * / $i = 0; while (++$i) {switch ($i) {case 5: echo "At 5 br \n"; break 1; / * Exit only the switch. * / case 10: echo "At 10; quitting br \n"; break 2; / * Exit the switch and the while. * / default: break;}}
Prev
Home
Next
Up
PHP Manual
Prev
Control Structures
Next
continue is used within looping structures to skip the rest of the current loop iteration and continue execution at the beginning of the next iteration.
continue accepts an optional numeric argument which tells it how many levels of enclosing loops it should skip to the end of.
while (list ($key, $value) = each ($arr)) {if (!($key% 2)) {/ / skip odd members continue;} do_something_odd ($value);} $i = 0; while ($i+ + 5) {echo "Outer br \n"; while (1) {echo "nbsp; nbsp;Middle br \n"; while (1) {echo" nbsp; nbsp;Inner br \n"; continue 3;} echo "This never gets output. br \n";} echo "Neither does this. br \n";}
Prev
Home
Next
Up
PHP Manual
Prev
Control Structures
Next
The declare construct is used to set execution directives for a block of code.
The syntax of declare is similar to the syntax of other flow control constructs:
The directive section allows the behavior of the declare block to be set.
Currently only one directive is recognized: the ticks directive. (See below for more information on the ticks directive)
The statement part of the declare block will be executed - - how it is executed and what side effects occur during execution may depend on the directive set in the directive block.
A tick is an event that occurs for every N low-level statements executed by the parser within the declare A tick is an event that occurs for every N low-level statements executed by the parser within the declare block.
The value for N is specified using ticks= N within the declare blocks' s directive section.
The event( s) that occur on each tick are specified using the register_tick_function().
See the example below for more details.
Note that more than one event can occur for each tick.
Example 12-1.
?php / / A function that records the time when it is called function profile ($dump = FALSE) {static $profile; / / Return the times stored in profile, then erase it if ($dump) {$temp = $profile; unset ($profile); return ($temp);} $profile[] = microtime ();} / / Set up a tick handler register_tick_function("profile"); / / Initialize the function before the declare block profile (); / / Run a block of code, throw a tick every 2nd statement declare (ticks=2) {for ($x = 1; $x 50; ++$x) {echo similar_text (md5($x), md5($x*$x)), "br / ;";}} / / Display the data stored in the profiler print_r (profile (TRUE));?
Prev
Home
Next
Up
PHP Manual
Prev
Control Structures
Next
do..while loops are very similar to while loops, except the truth expression is checked at the end of each iteration instead of in the beginning.
The main difference from regular while loops is that the first iteration of a do..while loop is guaranteed to run (the truth expression is only checked at the end of the iteration), whereas it's may not necessarily run with a regular while loop (the truth expression is checked at the beginning of each iteration, if it evaluates to FALSE right from the beginning, the loop execution would end immediately).
There is just one syntax for do..while loops:
The above loop would run one time exactly, since after the first iteration, when truth expression is checked, it evaluates to FALSE ($i is not bigger than 0) and the loop execution ends.
Advanced C users may be familiar with a different usage of the do..while loop, to allow stopping execution in the middle of code blocks, by encapsulating them with do..while (0), and using the break statement.
The following code fragment demonstrates this:
do {if ($i 5) {print "i is not big enough"; break;} $i *= $factor; if ($i $minimum_limit) {break;} print "i is ok"; ...process i...} while(0);
Don' t worry if you don't understand this right away or at all.
You can code scripts and even powerful scripts without using this' feature '.
Prev
Home
Next
Up
PHP Manual
Prev
Control Structures
Next
Often you 'd want to execute a statement if a certain condition is met, and a different statement if the condition is not met.
This is what else is for. else extends an if statement to execute a statement in case the expression in the if statement evaluates to FALSE.
For example, the following code would display a is bigger than b if $a is bigger than $b, and a is NOT bigger than b otherwise:
if ($a $b) {print "a is bigger than b";} else {print "a is NOT bigger than b";}
Prev
Home
Next
Control Structures
Up
PHP Manual
Prev
Control Structures
Next
elseif, as its name suggests, is a combination of if and else.
Like else, it extends an if statement to execute a different statement in case the original if expression evaluates to FALSE.
However, unlike else, it will execute that alternative expression only if the elseif conditional expression evaluates to TRUE.
For example, the following code would display a is bigger than b, a equal to b or a is smaller than b:
if ($a $b) {print "a is bigger than b";} elseif ($a == $b) {print "a is equal to b";} else {print "a is smaller than b";}
There may be several elseif s within the same if statement.
The first elseif expression (if any) that evaluates to TRUE would be executed.
In PHP, you can also write 'else if' (in two words) and the behavior would be identical to the one of'elseif '(in a single word).
The syntactic meaning is slightly different (if you're familiar with C, this is the same behavior) but the bottom line is that both would result in exactly the same behavior.
The elseif statement is only executed if the preceding if expression and any preceding elseif expressions evaluated to FALSE, and the current elseif expression evaluated to TRUE.
Prev
Home
Next
Up
Alternative syntax for control structures
PHP Manual
Prev
Control Structures
Next
PHP 4 (not PHP 3) includes a foreach construct, much like Perl and some other languages.
There are two syntaxes; the second is a minor but useful extension of the first:
The first form loops over the array given by array_expression.
On each loop, the value of the current element is assigned to $value and the internal array pointer is advanced by one (so on the next loop, you'll be looking at the next element).
The second form does the same thing, except that the current element 's key will be assigned to the variable $key on each loop.
Note:
When foreach first starts executing, the internal array pointer is automatically reset to the first element of the array.
This means that you do not need to call reset() before a foreach loop.
Note:
Assuming the foreach loop runs to completion, the array 's internal pointer will be at the end of the array.
You may have noticed that the following are functionally identical:
reset ($arr); while (list(, $value) = each ($arr)) {echo "Value: $value br \n";} foreach ($arr as $value) {echo "Value: $value br \n";}
reset ($arr); while (list($key, $value) = each ($arr)) {echo "Key: $key; Value: $value br \n";} foreach ($arr as $key = $value) {echo "Key: $key; Value: $value br \n";}
Some more examples to demonstrate usages:
/* foreach example 1: value only * / $a = array (1, 2, 3, 17); foreach ($a as $v) {print "Current value of \$a: $v.\n";} / * foreach example 2: value (with key printed for illustration) * / $a = array (1, 2, 3, 17); $i = 0; / * for illustrative purposes only * / foreach($a as $v) {print "\$a[$i] = $v.\n"; $i++;} / * foreach example 3: key and value * / $a = array ("one "= 1, "two" = 2, "three "= 3, "seventeen" = 17); foreach($a as $k = $v) {print "\$a[$k] = $v.\n";} / * foreach example 4: multi-dimensional arrays * / $a[0][0] = "a"; $a[0][1] = "b"; $a[1][0] = "y"; $a[1][1] = "z"; foreach($a as $v1) {foreach ($v1 as $v2) {print "$v2\n";}} / * foreach example 5: dynamic arrays * / foreach(array(1, 2, 3, 4, 5) as $v) {print "$v\n";}
Prev
Home
Next
Up
PHP Manual
Prev
Control Structures
Next
for loops are the most complex loops in PHP.
They behave like their C counterparts.
The syntax of a for loop is:
The first expression (expr1) is evaluated (executed) once unconditionally at the beginning of the loop.
In the beginning of each iteration, expr2 is evaluated.
If it evaluates to TRUE, the loop continues and the nested statement( s) are executed.
If it evaluates to FALSE, the execution of the loop ends.
At the end of each iteration, expr3 is evaluated (executed).
Each of the expressions can be empty. expr2 being empty means the loop should be run indefinitely (PHP implicitly considers it as TRUE, like C).
This may not be as useless as you might think, since often you 'd want to end the loop using a conditional break statement instead of using the for truth expression.
Consider the following examples.
All of them display numbers from 1 to 10:
/* example 1 * / for ($i = 1; $i = 10; $i++) {print $i;} / * example 2 * / for ($i = 1;;$i++) {if ($i 10) {break;} print $i;} / * example 3 * / $i = 1; for (;;) {if ($i 10) {break;} print $i; $i++;} / * example 4 * / for ($i = 1; $i = 10; print $i, $i++);
Of course, the first example appears to be the nicest one (or perhaps the fourth), but you may find that being able to use empty expressions in for loops comes in handy in many occasions.
PHP also supports the alternate "colon syntax" for for loops.
Other languages have a foreach Other languages have a foreach statement to traverse an array or hash.
PHP 3 has no such construct; PHP 4 does (see foreach).
In PHP 3, you can combine while with the list() and each() functions to achieve the same effect.
See the documentation for these functions for an example.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Any PHP script is built out of a series of statements.
A statement can be an assignment, a function call, a loop, a conditional statement of even a statement that does nothing (an empty statement).
Statements usually end with a semicolon.
In addition, statements can be grouped into a statement-group by encapsulating a group of statements with curly braces.
A statement-group is a statement by itself as well.
The various statement types are described in this chapter.
The if construct is one of the most important features of many languages, PHP included.
It allows for conditional execution of code fragments.
PHP features an if structure that is similar to that of C:
As described in the section about expressions, expr is evaluated to its Boolean value.
If expr evaluates to TRUE, PHP will execute statement, and if it evaluates to FALSE - it 'll ignore it.
More information about what values evaluate to FALSE can be found in the 'Converting to boolean' section.
The following example would display a is bigger than b if $a is bigger than $b:
if ($a $b) print "a is bigger than b";
Often you 'd want to have more than one statement to be executed conditionally.
Of course, there 's no need to wrap each statement with an if clause.
Instead, you can group several statements into a statement group.
For example, this code would display a is bigger than b if $a is bigger than $b, and would then assign the value of $a into $b:
if ($a $b) {print "a is bigger than b"; $b = $a;}
If statements can be nested indefinitely within other if statements, which provides you with complete flexibility for conditional execution of the various parts of your program.
Prev
Home
Next
Array Operators
Up
PHP Manual
Prev
Control Structures
Next
The switch statement is similar to a series of IF statements on the same expression.
In many occasions, you may want to compare the same variable (or expression) with many different values, and execute a different piece of code depending on which value it equals to.
This is exactly what the switch statement is for.
The following two examples are two different ways to write the same thing, one using a series of if statements, and the other using the switch statement:
if ($i == 0) {print "i equals 0";} if ($i == 1) {print "i equals 1";} if ($i == 2) {print "i equals 2";} switch ($i) {case 0: print "i equals 0"; break; case 1: print "i equals 1"; break; case 2: print "i equals 2"; break;}
It is important to understand how the switch statement is executed in order to avoid mistakes.
The switch statement executes line by line (actually, statement by statement).
In the beginning, no code is executed.
Only when a case statement is found with a value that matches the value of the switch Only when a case statement is found with a value that matches the value of the switch expression does PHP begin to execute the statements.
PHP continues to execute the statements until the end of the switch block, or the first time it sees a break statement.
If you don' t write a break statement at the end of a case's statement list, PHP will go on executing the statements of the following case.
For example:
switch ($i) {case 0: print "i equals 0"; case 1: print "i equals 1"; case 2: print "i equals 2";}
Here, if $i is equal to 0, PHP would execute all of the print statements!
You would get the expected behavior ('i equals 2 'would be displayed) only if $i is equal to 2.
Thus, it is important not to forget break statements (even though you may want to avoid supplying them on purpose under certain circumstances).
In a switch statement, the condition is evaluated only once and the result is compared to each case statement.
In an elseif statement, the condition is evaluated again.
If your condition is more complicated than a simple compare and / or is in a tight loop, a switch may be faster.
The statement list for a case can also be empty, which simply passes control into the statement list for the next case.
switch ($i) {case 0: case 1: case 2: print "i is less than 3 but not negative"; break; case 3: print "i is 3";}
A special case is the default case.
This case matches anything that wasn 't matched by the other cases, and should be the last case statement.
For example:
switch ($i) {case 0: print "i equals 0"; break; case 1: print "i equals 1"; break; case 2: print "i equals 2"; break; default: print "i is not equal to 0, 1 or 2";}
The case expression may be any expression that evaluates to a simple type, that is, integer or floating-point numbers and strings.
Arrays or objects cannot be used here unless they are dereferenced to a simple type.
The alternative syntax for control structures is supported with switches.
For more information, see Alternative syntax for control structures.
switch ($i): case 0: print "i equals 0"; break; case 1: print "i equals 1"; break; case 2: print "i equals 2"; break; default: print "i is not equal to 0, 1 or 2"; endswitch;
Prev
Home
Next
Up
PHP Manual
Prev
Control Structures
Next
while loops are the simplest type of loop in PHP.
They behave just like their C counterparts.
The basic form of a while statement is:
It tells PHP to execute the nested statement( s) repeatedly, as long as the while expression evaluates to TRUE.
The value of the expression is checked each time at the beginning of the loop, so even if this value changes during the execution of the nested statement( s), execution will not stop until the end of the iteration (each time PHP runs the statements in the loop is one iteration).
Sometimes, if the while expression evaluates to FALSE from the very beginning, the nested statement( s) won't even be run once.
Like with the if statement, you can group multiple statements within the same while loop by surrounding a group of statements with curly braces, or by using the alternate syntax:
The following examples are identical, and both print numbers from 1 to 10:
/* example 1 * / $i = 1; while ($i = 10) {print $i++; / * the printed value would be $i before the increment (post-increment) * /} / * example 2 * / $i = 1; while ($i = 10): print $i; $i++; endwhile;
Prev
Home
Next
Alternative syntax for control structures
Up
PHP Manual
This manual is © Copyright 1997 - 2003 by the PHP Documentation Group.
The members of this group are listed on the front page of this manual.
This manual can be redistributed under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
The 'Extending PHP 4.0' section of this manual is copyright © 2000 by Zend Technologies, Ltd.
This material may be distributed only subject to the terms and conditions set forth in the Open Publication License, v1.0 or later (the latest version is presently available at http: / /www.opencontent.org / openpub /).
Home
PHP Manual
Prev
Next
PHP 3 includes support for a network-based debugger.
PHP 4 does not have an internal debugging facility.
You can use one of the external debuggers though.
The Zend IDE includes a debugger, and there are also some free debugger extensions like DBG at http: / /dd.cron.ru / dbg /, the Advanced PHP Debugger (APD) or Xdebug which even has a compatible debugger interface as PHP 3's debugging functionality as is described in this section.
Prev
Home
Next
Other incompatibilities
Up
Using the Debugger
PHP Manual
Prev
Appendix D.
Debugging PHP
Next
The PHP 3 debugger protocol is line-based.
Each line has a type, and several lines compose a message.
Each message starts with a line of the type start and terminates with a line of the type end.
PHP 3 may send lines for different messages simultaneously.
A line has this format:
Date in ISO 8601 format (yyyy - mm - dd)
Time including microseconds: hh: mm: uuuuuu
DNS name or IP address of the host where the script error was generated.
PID (process id) on host of the process with the PHP 3 script that generated this error.
Tells the receiving program about what it should treat the following data as:
Table D-1.
Debugger Line Types
Name
Meaning
Tells the receiving program that a debugger message starts here.
The contents of data will be the type of error message, listed below.
The PHP 3 error message.
File name and line number where the error occurred.
There will always be a location line after message and after every function.
Number of frames in the following stack dump.
If there are four frames, expect information about four levels of called functions.
If no "frames" line is given, the depth should be assumed to be 0 (the error occurred at top-level).
Name of function where the error occurred.
Will be repeated once for every level in the function call stack.
Tells the receiving program that a debugger message ends here.
Line data.
Table D-2.
Debugger Error Types
(any other)
Example D-1.
Example Debugger Message
Prev
Home
Next
Using the Debugger
Up
PHP Manual
Prev
Appendix D.
Debugging PHP
Next
The internal debugger in PHP 3 is useful for tracking down evasive bugs.
The debugger works by connecting to a TCP port for every time PHP 3 starts up.
All error messages from that request will be sent to this TCP connection.
This information is intended for "debugging server" that can run inside an IDE or programmable editor (such as Emacs).
How to set up the debugger:
Set up a TCP port for the debugger in the configuration file (debugger.port) and enable it (debugger.enabled).
Set up a TCP listener on that port somewhere (for example socket -l -s 1400 on UNIX).
In your code, run "debugger_on (host)", where host is the IP number or name of the host running the TCP listener.
Prev
Home
Next
Debugging PHP
Up
Debugger Protocol
PHP Manual
Prev
Next
This section gathers most common errors that occur at build time.
I got the latest version of PHP using the anonymous CVS service, but there 's no configure script!
You have to have the GNU autoconf package installed so you can generate the configure script from configure.in.
One symptom of this is finding things like @VARIABLE@ in your Makefile after configure or config.status is run.)
I 'm having problems configuring PHP to work with Apache.
You need to tell the configure / setup script the location of the top-level of your Apache source tree.
3.
checking lex output file root.... / configure: lex: command not found configure: error: cannot find output from lex; giving up
Depending on your setup you will install bison and flex from either source or a package, such as a RPM.
fatal: relocation error: file / path / to / libphp4.so: symbol ap_block_alarms: referenced symbol not found
Try to reconfigure apache, making sure to use at least the following flags:
You can make the configure script looks for header files and libraries in non-standard locations by specifying additional flags to pass to the C preprocessor and linker, such as:
CPPFLAGS=-I / path / to / include LDFLAGS=-L / path / to / library. / configure
env CPPFLAGS=-I / path / to / include LDFLAGS=-L / path / to / library. / configure
You need to update your version of Bison.
7.
When I run make, it seems to run fine but then fails when it tries to link the final application complaining that it can 't find some files.
Some old versions of make that don 't correctly put the compiled versions of the files in the functions directory into that same directory.
8.
Take a look at the link line and make sure that all of the appropriate libraries are being included at the end.
If you' re linking with Apache 1.2.x, did you remember to add the appropriate information to the EXTRA_LIBS line of the Configuration file and re-rerun Apache's Configure script?
See the INSTALL file that comes with the distribution for more information.
Some people have also reported that they had to add '-ldl' immediately following libphp4.a when linking with Apache.
I can 't figure out how to build PHP with Apache 1.3.
This is actually quite easy.
Follow these steps carefully:
Grab the latest Apache 1.3 distribution from http: / /www.apache.org / dist /.
Ungzip and untar it somewhere, for example / usr / local / src / apache-1.3.
Compile PHP by first running. / configure --with-apache= / path / apache-1.3 (substitute path for the actual path to your apache-1.3 directory.
Type make followed by make install to build PHP and copy the necessary files to the Apache distribution tree.
Change directories into to your / path / apache-1.3 / src directory and edit the Configuration file.
Add to the file:
Type:. / Configure followed by make.
You should now have a PHP-enabled httpd binary!
Note:
You can also use the new Apache. / configure script.
See the instructions in the README.configure file which is part of your Apache distribution.
Also have a look at the INSTALL file in the PHP distribution.
I have followed all the steps to install the Apache module version on UNIX, and my PHP scripts show up in my browser or I am being asked to save the file.
This means that the PHP module is not getting invoked for some reason.
Three things to check before asking for further help:
Make sure that the httpd binary you are running is the actual new httpd binary you just built.
To do this, try running: / path / to / binary / httpd -l
If you don 't see mod_php4.c listed then you are not running the right binary.
Find and install the correct binary.
Make sure you have added the correct Mime Type to one of your Apache .conf files.
It should be:
AddType application / x-httpd-php3 .php3 (for PHP 3)
or AddType application / x-httpd-php .php (for PHP 4)
Also make sure that this AddType line is not hidden away inside a Virtualhost or Directory block which would prevent it from applying to the location of your test script.
Finally, the default location of the Apache configuration files changed between Apache 1.2 and Apache 1.3.
You should check to make sure that the configuration file you are adding the AddType line to is actually being read.
You can put an obvious syntax error into your httpd.conf file or some other obvious change that will tell you if the file is being read correctly.
It says to use: --activate-module=src / modules / php4 / libphp4.a, but that file doesn' t exist, so I changed it to --activate-module=src / modules / php4 / libmodphp4.a It says to use: --activate-module=src / modules / php4 / libphp4.a, but that file doesn't exist, so I changed it to --activate-module=src / modules / php4 / libmodphp4.a and it doesn't work!?
What 's going on?
Note that the libphp4.a Note that the libphp4.a file is not supposed to exist.
The apache process will create it!
When I try to build Apache with PHP as a static module using --activate-module=src / modules / php4 / libphp4.a it tells me that my compiler is not ANSI compliant.
This is a misleading error message from Apache that has been fixed in more recent versions.
When I try to build PHP using --with-apxs I get strange error messages.
There are three things to check here.
First, for some reason when Apache builds the apxs Perl script, it sometimes ends up getting built without the proper compiler and flags variables.
Find your apxs script (try the command which apxs, it's sometimes found in / usr / local / apache / bin / apxs or / usr / sbin / apxs.
Open it and check for lines similar to these:
my $CFG_CFLAGS_SHLIB = ''; # substituted via Makefile.tmpl my $CFG_LD_SHLIB = ''; # substituted via Makefile.tmpl my $CFG_LDFLAGS_SHLIB = ''; # substituted via Makefile.tmpl
my $CFG_CFLAGS_SHLIB = '-fpic -DSHARED_MODULE'; # substituted via Makefile.tmpl my $CFG_LD_SHLIB = 'gcc'; # substituted via Makefile.tmpl my $CFG_LDFLAGS_SHLIB = q(-shared); # substituted via Makefile.tmpl
my $CFG_LIBEXECDIR = 'modules'; # substituted via APACI install
my $CFG_LIBEXECDIR = '/ usr / lib / apache'; # substituted via APACI install
During make, I get errors in microtime, and a lot of RUSAGE_ stuff.
During the make portion of installation, if you encounter problems that look similar to this:
Your system is broken.
You need to fix your / usr / include files by installing a glibc-devel package that matches your glibc.
This has absolutely nothing to do with PHP.
To prove this to yourself, try this simple test:
Where can I find the. / configure line that was used to build my current PHP installation?
?php phpinfo();?
When building PHP with the GD library it either gives strange compile errors or segfaults on execution.
Make sure your GD library and PHP are linked against the same depending libraries (e.g. libpng).
Prev
Home
Next
Installation
Up
Using PHP
PHP Manual
Prev
Next
PHP can be used to access COM and DCOM objects on Win32 platforms.
I have built a DLL to calculate something.
Is there any way to run this DLL under PHP?
If this is a simple DLL there is no way yet to run it from PHP.
If the DLL contains a COM server you may be able to access it if it implements the IDispatch interface.
What does' Unsupported variant type: xxxx (0xxxxx) 'mean?
There are dozens of VARIANT types and combinations of them.
Most of them are already supported but a few still have to be implemented.
Arrays are not completely supported.
Only single dimensional indexed only arrays can be passed between PHP and COM.
If you find other types that aren' t supported, please report them as a bug (if not already reported) and provide as much information as available.
Is it possible manipulate visual objects in PHP?
Generally it is, but as PHP is mostly used as a web scripting language it runs in the web servers context, thus visual objects will never appear on the servers desktop.
If you use PHP for application scripting e.g. in conjunction with PHP-GTK there is no limitation in accessing and manipulating visual objects through COM.
Can I store a COM object in a session?
No, you can 't.
COM instances are treated as resources and therefore they are only available in a single script 's context.
How can I trap COM errors?
Currently it' s not possible to trap COM errors beside the ways provided by PHP itself (@, track_errors,..), but we are thinking of a way to implement this.
Can I generate DLL files from PHP scripts like i can in Perl?
No, unfortunately there is no such tool available for PHP.
What does' Unable to obtain IDispatch interface for CLSID {xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx} 'mean?
This error can have multiple reasons:
the CLSID is wrong
the requested DLL is missing
the requested component doesn 't implement the IDispatch interface
How can I run COM object from remote server?
Exactly like you run local objects.
You only have to pass the IP of the remote machine as second parameter to the COM constructor.
Make sure that you have set com.allow_dcom=true in your php.ini.
I get 'DCOM is disabled in C:\path...\scriptname.php on line 6', what can I do?
Edit your php.ini and set com.allow_dcom=true.
Is it possible to load / manipulate an ActiveX object in a page with PHP?
This has nothing to do with PHP.
ActiveX objects are loaded on client side if they are requested by the HTML document.
There is no relation to the PHP script and therefore there is no direct server side interaction possible.
Is it possible to get a running instance of a component?
This is possible with the help of monikers.
If you want to get multiple references to the same word instance you can create that instance like shown:
12.
You can use com_print_typeinfo() to have PHP generate a skeleton for the event sink class.
Example 52-1.
I 'm having problems when trying to invoke a method of a COM object which exposes more than one interface.
What can I do?
The answer is as simple as unsatisfying.
I don 't know exactly but i think you can do nothing.
If someone has specific information about this, please let me know:)
So PHP works with COM, how about COM +?
COM + extends COM by a framework for managing components through MTS and MSMQ but there is nothing special that PHP has to support to use such components.
If PHP can manipulate COM objects, can we imagine to use MTS to manage components resources, in conjunction with PHP?
PHP itself doesn 't handle transactions yet.
Thus if an error occurs no rollback is initiated.
If you use components that support transactions you will have to implement the transaction management yourself.
Prev
Home
Next
PHP and HTML
Up
PHP and other languages
PHP Manual
Prev
Next
This section holds common questions about relation between PHP and databases.
Yes, PHP can access virtually any database available today.
I heard it 's possible to access Microsoft SQL Server from PHP.
How?
On Windows machines, you can simply use the included ODBC support and the correct ODBC driver.
On Unix machines, you can use the Sybase-CT driver to access Microsoft SQL Servers because they are (at least mostly) protocol-compatible.
Sybase has made a free version of the necessary libraries for Linux systems.
For other Unix operating systems, you need to contact Sybase for the correct libraries.
Also see the answer to the next question.
Can I access Microsoft Access databases?
Yes.
You already have all the tools you need if you are running entirely under Windows 9x / Me, or NT / 2000, where you can use ODBC and Microsoft 's ODBC drivers for Microsoft Access databases.
If you are running PHP on a Unix box and want to talk to MS Access on a Windows box you will need Unix ODBC drivers.
OpenLink Software has Unix-based ODBC drivers that can do this.
There is a free pilot program where you can download an evaluation copy that doesn 't expire and prices start at $675 for the commercial supported version.
Another alternative is to use an SQL server that has Windows ODBC drivers and use that to store the data, which you can then access from Microsoft Access (using ODBC) and PHP (using the built in drivers), or to use an intermediary file format that Access and PHP both understand, such as flat files or dBase databases.
On this point Tim Hayes from OpenLink software writes:
Using another database as an intermediary is not a good idea, when you can use ODBC from PHP straight to your database - i.e. with OpenLink 's drivers.
If you do need to use an intermediary file format, OpenLink have now released Virtuoso (a virtual database engine) for NT, Linux and other unix platforms.
Please visit our website for a free download.
One option that has proven successful is to use MySQL and its MyODBC drivers on Windows and synchronizing the databases.
Steve Lawrence writes:
Install MySQL on your platform according to instructions with MySQL.
Latest available from www.mysql.com (get it from your mirror!).
No special configuration required except when you set up a database, and configure the user account, you should put% in the host field, or the host name of the Windows computer you wish to access MySQL with.
Make a note of your server name, username, and password.
Download the MyODBC for Windows driver from the MySQL site.
Latest release is myodbc-2_50_19-win95.zip (NT available too, as well as source code).
Install it on your Windows machine.
You can test the operation with the utilities included with this program.
Create a user or system dsn in your ODBC administrator, located in the control panel.
Make up a dsn name, enter your hostname, user name, password, port, etc for you MySQL database configured in step 1.
Install Access with a full install, this makes sure you get the proper add-ins.. at the least you will need ODBC support and the linked table manager.
Now the fun part!
Create a new access database.
In the table window right click and select Link Tables, or under the file menu option, select Get External Data and then Link Tables.
When the file browser box comes up, select files of type:
Select System dsn and the name of your dsn created in step 3.
Select the table to link, press OK, and presto!
You can now open the table and add / delete / edit data on your MySQL server!
You can also build queries, import / export tables to MySQL, build forms and reports, etc.
Tips and Tricks:
You can construct your tables in Access and export them to MySQL, then link them back in.
That makes table creation quick.
When creating tables in Access, you must have a primary key defined in order to have write access to the table in access.
Make sure you create a primary key in MySQL before linking in access
If you change a table in MySQL, you have to re-link it in Access.
Go to tools add-ins linked table manager, cruise to your ODBC DSN, and select the table to re-link from there. you can also move your dsn source around there, just hit the always prompt for new location checkbox before pressing OK.
I upgraded to PHP 4, and now mysql keeps telling me "Warning:
What 's up?
Most likely what has happened is, PHP 4 was compiled with the '--with-mysql' option, without specifying the path to MySQL.
This means PHP is using its built-in MySQL client library.
If your system is running applications, such as PHP 3 as a concurrent Apache module, or auth-mysql, that use other versions of MySQL clients, then there is a conflict between the two differing versions of those clients.
Recompiling PHP 4, and adding the path to MySQL to the flag, '--with-mysql= / your / path / to / mysql' usually solves the problem.
After installing shared MySQL support, Apache dumps core as soon as libphp4.so is loaded.
Can this be fixed?
If your MySQL libs are linked against pthreads this will happen.
Check using ldd.
If they are, grab the MySQL tarball and compile from source, or recompile from the source rpm and remove the switch in the spec file that turns on the threaded client code.
Either of these suggestions will fix this.
Then recompile PHP with the new MySQL libs.
Why do I get an error that looks something like this: "Warning:
0 is not a MySQL result index in file on line x "or "Warning:
You are trying to use a result identifier that is 0.
The 0 indicates that your query failed for some reason.
You need to check for errors after submitting a query and before you attempt to use the returned result identifier.
The proper way to do this is with code similar to the following:
Prev
Home
Next
Obtaining PHP
Up
Installation
PHP Manual
Prev
Next
This section holds the most general questions about PHP: what it is and what it does.
What is PHP?
From the preface of the manual:
PHP is an HTML-embedded scripting language.
Much of its syntax is borrowed from C, Java and Perl with a couple of unique PHP-specific features thrown in.
The goal of the language is to allow web developers to write dynamically generated pages quickly.
A nice introduction to PHP by Stig Sæther Bakken can be found here on the Zend website.
Also, much of the PHP Conference Material is freely available.
What does PHP stand for?
PHP stands for PHP: Hypertext Preprocessor
This confuses many people because the first word of the acronym is the acronym.
This type of acronym is called a recursive acronym.
The curious can visit Free On-Line Dictionary of Computing for more information on recursive acronyms.
What is the relation between the versions?
PHP 3 is the successor to PHP / FI 2.0 and is a lot nicer.
PHP 4 is the current generation of PHP, which uses the Zend engine under the hood.
PHP 5 is experimental.
Can I run several versions of PHP at the same time?
Yes.
See the INSTALL file that is included in the PHP 4 source distribution.
Also, read the related appendix.
What are the differences between PHP 3 and PHP 4?
There are a couple of articles written on this by the authors of PHP 4.
Here 's a list of some of the more important new features:
Extended API module
Generalized build process under UNIX
Generic web server interface that also supports multi-threaded web servers
Improved syntax highlighter
Native HTTP session support
Output buffering support
More powerful configuration system
I think I found a bug!
Who should I tell?
You should go to the PHP Bug Database and make sure the bug isn 't a known bug.
If you don 't see it in the database, use the reporting form to report the bug.
It is important to use the bug database instead of just sending an email to one of the mailing lists because the bug will have a tracking number assigned and it will then be possible for you to go back later and check on the status of the bug.
The bug database can be found at http: / /bugs.php.net /.
Home
Next
FAQ:
Frequently Asked Questions
Up
Mailing lists
PHP Manual
Prev
Next
Prev
Home
Next
General Information
PHP Manual
Prev
Next
Before reading these faqs, it 's important you learn how to retrieve variables from outside of PHP.
Pay close attention to what register_globals means to you too.
What encoding / decoding do I need when I pass a value through a form / URL?
There are several stages for which encoding is important.
Assuming that you have a string $data, which contains the string you want to pass on in a non-encoded way, these are the relevant stages:
HTML interpretation.
In order to specify a random string, you must include it in double quotes, and htmlspecialchars() the whole value.
A URL consists of several parts.
If you want your data to be interpreted as one item, you must encode it with urlencode().
Example 51-1.
A hidden HTML form element
Note:
It is wrong to urlencode() $data, because it's the browsers responsibility to urlencode() the data.
All popular browsers do that correctly.
Note that this will happen regardless of the method (i.e., GET or POST).
You 'll only notice this in case of GET request though, because POST requests are usually hidden.
Example 51-2.
Data to be edited by the user
Note:
The data is shown in the browser as intended, because the browser will interpret the HTML escaped symbols.
Upon submitting, either via GET or POST, the data will be urlencoded by the browser for transferring, and directly urldecoded by PHP.
So in the end, you don 't need to do any urlencoding / urldecoding yourself, everything is handled automagically.
Example 51-3.
In an URL
?php echo "a href=\"". htmlspecialchars(" / nextpage.php?stage=23 data= ". urlencode($data)). "\" \n";?
Note:
In fact you are faking a HTML GET request, therefore it' s necessary to manually urlencode() the data.
Note:
You need to htmlspecialchars() the whole URL, because the URL occurs as value of an HTML-attribute.
In this case, the browser will first un - htmlspecialchars() the value, and then pass the URL on.
PHP will understand the URL correctly, because you urlencoded() the data.
You' ll notice that the in the URL is replaced by amp;.
Although most browsers will recover if you forget this, this isn 't always possible.
So even if your URL is not dynamic, you need to htmlspecialchars() the URL.
I' m trying to use an input type="image "tag, but the $foo.x and $foo.y variables aren't available. $_GET['foo.x'] isn't existing either.
Where are they?
When submitting a form, it is possible to use an image instead of the standard submit button with a tag like:
That is, the periods are replaced with underscores.
For example, $_GET[ 'foo_x'].
How do I create arrays in a HTML form?
To get your form result sent as an array to your PHP script you name the input, select or textarea elements like this:
Note:
Specifying an arrays key is optional in HTML.
If you do not specify the keys, the array gets filled in the order the elements appear in the form.
Our first example will contain keys 0, 1, 2 and 3.
See also Array Functions and Variables from outside PHP.
How do I get all the results from a select multiple HTML tag?
The select multiple tag in an HTML construct allows users to select multiple items from a list.
These items are then passed to the action handler for the form.
The problem is that they are all passed with the same widget name. ie.
Note that if you are using JavaScript the [] on the element name might cause you problems when you try to refer to the element by name.
Use it 's numerical form element ID instead, or enclose the variable name in single quotes and use that as the index to the elements array, for example:
Prev
Home
Next
Using PHP
Up
PHP and COM
PHP Manual
Prev
Next
This section holds common questions about the way to install PHP.
PHP is available for almost any OS (except maybe for MacOS before OSX), and almost any web server.
To install PHP, follow the instructions in the INSTALL file located in the distribution.
Windows users should also read the install.txt file.
There are also some helpful hints for Windows users here.
Where should my php.ini file be located?
By default on UNIX it should be in / usr / local / lib which is install-path / lib.
Most people will want to change this at compile-time with the --with-config-file-path flag.
You would, for example, set it with something like:
On Windows the default path for the php.ini file is the Windows directory.
If you 're using the Apache webserver, php.ini is first searched in the Apaches install directory, e.g. c:\program files\apache group\apache.
See also the chapter about the configuration file.
Unix:
I installed PHP, but every time I load a document, I get the message 'Document Contains No Data'!
This probably means that PHP is having some sort of problem and is core-dumping.
Look in your server error log to see if this is the case, and then try to reproduce the problem with a small test case.
If you know how to use 'gdb', it is very helpful when you can provide a backtrace with your bug report to help the developers pinpoint the problem.
If you are using PHP as an Apache module try something like:
Stop your httpd processes
Stop your httpd processes
Then fetch the URL causing the problem with your browser
If you are getting a core dump, gdb should inform you of this now
type: bt
You should include your backtrace in your bug report.
This should be submitted to http: / /bugs.php.net /
If your script uses the regular expression functions (ereg() and friends), you should make sure that you compiled PHP and Apache with the same regular expression package.
This should happen automatically with PHP and Apache 1.3.x
Unix:
I installed PHP using RPMS, but Apache isn 't processing the PHP pages!
What 's going on here?
Assuming you installed both Apache and PHP from RPM packages, you need to uncomment or add some or all of the following lines in your http.conf file:
# Extra Modules AddModule mod_php.c AddModule mod_php3.c AddModule mod_perl.c # Extra Modules LoadModule php_module modules / mod_php.so LoadModule php3_module modules / libphp3.so / * for PHP 3 * / LoadModule php4_module modules / libphp4.so / * for PHP 4 * / LoadModule perl_module modules / libperl.so
AddType application / x-httpd-php3 .php3 / * for PHP 3 * / AddType application / x-httpd-php .php / * for PHP 4 * /
Unix:
I installed PHP 3 using RPMS, but it doesn 't compile with the database support I need!
What 's going on here?
Due to the way PHP 3 built, it is not easy to build a complete flexible PHP RPM.
This issue is addressed in PHP 4.
For PHP 3, we currently suggest you use the mechanism described in the INSTALL.REDHAT file in the PHP distribution.
If you insist on using an RPM version of PHP 3, read on...
The RPM packagers are setting up the RPMS to install without database support to simplify installations and because RPMS use / usr / instead of the standard / usr / local / directory for files.
You need to tell the RPM spec file which databases to support and the location of the top-level of your database server.
This example will explain the process of adding support for the popular MySQL database server, using the mod installation for Apache.
Of course all of this information can be adjusted for any database server that PHP supports.
We will assume you installed MySQL and Apache completely with RPMS for this example as well.
First remove mod_php3:
Then get the source rpm and INSTALL it, NOT --rebuild
Then edit the / usr / src / redhat / SPECS / mod_php3.spec file
In the %build section add the database support you want, and the path.
For MySQL you would add
Once this modification is made then build the binary rpm as follows:
Then install the rpm
Unix:
I patched Apache with the FrontPage extensions patch, and suddenly PHP stopped working.
Is PHP incompatible with the Apache FrontPage extensions?
No, PHP works fine with the FrontPage extensions.
The problem is that the FrontPage patch modifies several Apache structures, that PHP relies on.
Recompiling PHP (using'make clean; make') after the FP patch is applied would solve the problem.
Unix / Windows:
I have installed PHP, but when I try to access a PHP script file via my browser, I get a blank screen.
Do a 'view source' in the web browser and you will probably find that you can see the source code of your PHP script.
This means that the web server did not send the script to PHP for interpretation.
Something is wrong with the server configuration - double check the server configuration against the PHP installation instructions.
Unix / Windows:
I have installed PHP, but when try to access a PHP script file via my browser, I get a server 500 error.
Something went wrong when the server tried to run PHP.
To get to see a sensible error message, from the command line, change to the directory containing the PHP executable (php.exe on Windows) and run php -i.
If PHP has any problems running, then a suitable error message will be displayed which will give you a clue as to what needs to be done next.
8.
I have installed PHP without errors, but when I try to start apache I get undefined symbol errors:
[mybox:user / src / php4] root# apachectl configtest apachectl: / usr / local / apache / bin / httpd Undefined symbols: _compress _uncompress
9.
I have installed PHP, but when I to access a PHP script file via my browser, I get the error:
The specified CGI application misbehaved by not returning a complete set of HTTP headers.
To get to see a sensible error message, from the command line, change to the directory containing the PHP executable (php.exe on Windows) and run php -i.
Once PHP is working at the command line, try accessing the script via the browser again.
File permissions on your PHP script, php.exe, php4ts.dll, php.ini or any PHP extensions you are trying to load are such that the anonymous internet user ISUR_ machinename cannot access them.
Note that for IIS you can trap this error by ticking the 'check file exists' box when setting up the script mappings in the Internet Services Manager.
If a script file does not exist then the server will return a 404 error instead.
There is also the additional benefit that IIS will do any authentication required for you based on the NTLanMan permissions on your script file.
Windows:
Make sure any user who needs to run a PHP script has the rights to run php.exe!
This user needs rights to php.exe.
And for IIS4 you need to tell it that PHP is a script engine.
11.
Security Alert!
Read this faq for details.
How do I know if my php.ini is being found and read?
To be sure your php.ini is being read by PHP, make a call to phpinfo() and near the top will be a listing called Configuration File (php.ini).
This will tell you where PHP is looking for php.ini and whether or not it 's being read.
If php.ini is included within the PATH than it is being read.
If php.ini is being read and you 're running PHP as a module then be sure to restart PHP after making changes to php.ini
Prev
Home
Next
Database issues
Up
Build Problems
PHP Manual
Prev
Next
PHP is the best language for web programing, but what about other languages?
ASP is not really a language in itself, it 's an acronym for Active Server Pages, the actual language used to program ASP with is Visual Basic Script or JScript.
The biggest drawback of ASP is that it' s a proprietary system that is natively used only on Microsoft Internet Information Server (IIS).
This limits it 's availability to Win32 based servers.
There are a couple of projects in the works that allows ASP to run in other environments and webservers:
InstantASP from Halcyon (commercial), Chili!Soft ASP from Chili!Soft (commercial) and OpenASP from ActiveScripting.org (free).
ASP is said to be a slower and more cumbersome language than PHP, less stable as well.
Some of the pros of ASP is that since it primarily uses VBScript it' s relatively easy to pick up the language if you're already know how to program in Visual Basic.
ASP support is also enabled by default in the IIS server making it easy to get up and running.
The components built in ASP are really limited, so if you need to use "advanced" features like interacting with FTP servers, you need to buy additional components.
Is there an ASP to PHP converter?
Yes, asp2php is the one most often referred to.
PHP is commonly said to be faster and more efficient for complex programming tasks and trying out new ideas.
PHP is generally referred to as more stable and less resource intensive as well.
Cold Fusion has better error handling, database abstraction and date parsing although database abstraction is addressed in PHP 4.
Another thing that is listed as one of Cold Fusion 's strengths is its excellent search engine, but it has been mentioned that a search engine is not something that should be included in a web scripting language.
PHP runs on almost every platform there is; Cold Fusion is only available on Win32, Solaris, Linux and HP / UX.
Cold Fusion has a good IDE and is generally easier to get started with, whereas PHP initially requires more programming knowledge.
Cold Fusion is designed with non-programmers in mind, while PHP is focused on programmers.
A great summary by Michael J Sheldon on this topic has been posted to the PHP mailing list.
A copy can be found here.
The biggest advantage of PHP over Perl is that PHP was designed for scripting for the web where Perl was designed to do a lot more and can because of this get very complicated.
The flexibility / complexity of Perl makes it easier to write code that another author / coder has a hard time reading.
PHP has a less confusing and stricter format without losing flexibility.
PHP is easier to integrate into existing HTML than Perl.
PHP has pretty much all the 'good' functionality of Perl: constructs, syntax and so on, without making it as complicated as Perl can be.
Perl is a very tried and true language, it 's been around since the late eighties, but PHP is maturing very quickly.
Prev
Home
Next
PHP and COM
Up
Migrating from PHP 2 to PHP 3
PHP Manual
Prev
Next
This section holds questions about how to get in touch with the PHP community.
The best way is the mailing lists.
1.
Are there any PHP mailing lists?
There are many mailing lists for several subjects.
A whole list of mailing lists can be found on our Support page.
The most general mailing list is php-general.
To subscribe, send mail to php-general-subscribe@lists.php.net.
You don 't need to include anything special in the subject or body of the message.
To unsubscribe, send mail to php-general-unsubscribe@lists.php.net.
You can also subscribe and unsubscribe using the web interface on our Support page.
Are there any other communities?
There are countless of them around the world.
We have links for example to some IRC servers and foreign language mailing lists on our Support page.
Help!
I can 't seem to subscribe / unsubscribe to / from one of the mailing lists!
If you have problems subscribing to or unsubscribing from the php-general mailing list, it may be because the mailing list software can 't figure out the correct mailing address to use.
If your email address was joeblow@example.com, you can send your subscription request to php-general-subscribe-joeblow=example.com@lists.php.net, or your unsubscription request to php-general-unsubscribe-joeblow=example.com@lists.php.net.
Use similar addresses for the other mailing lists.
Is there an archive of the mailing lists anywhere?
Yes, you will find a list of archive sites on the Support page.
The mailing list articles are also archived as news messages.
You can access the news server at news: / /news.php.net / with a news client.
There is also an experimental web interface for the news server at http: / /news.php.net /
What can I ask the mailing list?
Since PHP is growing more and more popular by the day the traffic has increased on the php-general mailing list and as of now the list gets about 150 to 200 posts a day.
Because of this it is in everyones interest that you use the list as a last resort when you have looked everywhere else.
Before you post to the list please have a look in this FAQ and the manual to see if you can find the help there.
If there is nothing to be found there try out the mailing list archives (see above).
If you still can' t find any information that helps you out you're more than welcome to use the mailing list.
Before asking questions, you may want to read the paper on How To Ask Questions The Smart Way as this is a good idea for everyone.
What information should I include when posting to the mailing list?
Posts like "I can't get PHP up and running!
Help me!
What is wrong? "are of absolutely no use to anyone.
If you' re having problems getting PHP up and running you must include what operating system you are running on, what version of PHP you're trying to set up, how you got it (pre-compiled, CVS, RPMs and so on), what you have done so far, where you got stuck and the exact error message.
This goes for any other problem as well.
You have to include information on what you have done, where you got stuck, what you 're trying to do and, if applicable, exact error messages.
If you' re having problems with your source code you need to include the part of the code that isn't working.
Do not include more code than necessary though!
It makes the post hard to read and a lot of people might just skip it all together because of this.
If you' re unsure about how much information to include in the mail it's better that you include to much than to little.
A subject like "HELP MEEEE!!!" or "What is the problem here? "will be ignored by the majority of the readers.
And lastly, you 're encouraged to read the paper on How To Ask Questions The Smart Way as this will be a great help for everyone, especially yourself.
Prev
Home
Next
General Information
Up
Obtaining PHP
PHP Manual
Prev
Next
PHP has already a long history behind him:
Legendary PHP 1.0, PHP / FI, PHP 3.0 and PHP 4.0.
Migrating from PHP3 to PHP4
PHP 4 was designed to be as compatible with earlier versions of PHP as possible and very little functionality was broken in the process.
If you 're really unsure about compatibility you should install PHP 4 in a test environment and run your scripts there.
Also see the appropriate migration appendix of this manual.
Incompatible functions?
Since PHP 4 is basically a rewrite of the entire PHP engine there was very few functions that were altered and only then some of the more exotic ones.
Prev
Home
Next
Migrating from PHP 2 to PHP 3
Up
Miscellaneous Questions
PHP Manual
Prev
Next
PHP has already a long history behind him:
Legendary PHP 1.0, PHP / FI, PHP 3.0 and PHP 4.0.
Migrating from PHP 2 to PHP 3?
PHP / FI 2.0 is no longer supported.
Please see appropriate manual section for information about migration from PHP / FI 2.0.
If you are still working with PHP 2, we strongly recommend you to upgrade straight to PHP 4.
Prev
Home
Next
PHP and other languages
Up
Migrating from PHP 3 to PHP 4
PHP Manual
Prev
Next
There can be some questions we can 't put into other categories.
Here you can find them.
Where did the pop-ups go on the website?
Can I have the code for that?
The yellow pop-up windows on the old site were pretty cool, but were very difficult to maintain (since some companies seem to enjoy changing the way their browsers work with every new release).
All the code for previous versions of the website is still available through CVS.
Specifically, the last version of shared.inc (that had all the Javascript and DHTML to do the popups) is available here.
How can I handle the bz2 compressed manuals on Windows?
If you don' t have an archiver-tool to handle bz2 files download the commandline tool from Redhat (please find further information below).
If you would not like to use a command line tool, you can try free tools like Stuffit Expander, UltimateZip, 7-Zip, or Quick Zip.
If you have tools like WinRAR or Power Archiver, you can easily decompress the bz2 files with it.
If you use Windows Commander, a bz2 plugin for that program is available freely from the Windows Commander site.
The bzip2 commandline tool from Redhat:
Win2k Sp2 users grab the latest version 1.0.2, all other Windows user should grab version 1.00.
After downloading rename the executable to bzip2.exe.
For convenience put it into a directory in your path, e.g.
C:\Windows where C represents your windows installation drive.
Note: lang stands for your language and x for the desired format, e.g.: pdf.
open a command prompt window
cd to the folder where you stored the downloaded php_manual_lang.x.bz2
invoke bzip2 -d php_manual_lang.x.bz2, extracting php_manual_lang.x in the same folder
In case you downloaded the php_manual_lang.tar.bz2 with many html-files in it, the procedure is the same.
The only difference is that you got a file php_manual_lang.tar.
WinZip.
Prev
Home
Next
Migrating from PHP 3 to PHP 4
Up
Appendixes
PHP Manual
Prev
Next
This section has details about PHP download locations, and OS issues.
Where can I obtain PHP?
You can download PHP from any of the members of the PHP network of sites.
These can be found at http: / /www.php.net /.
You can also use anonymous CVS to get the absolute latest version of the source.
For more information, go to http: / /cvs.php.net /.
Are pre-compiled binary versions available?
We only distribute precompiled binaries for Windows systems, as we are not able to compile PHP for every major Linux / Unix platform with every extension combination.
Also note, that many Linux distributions come with PHP built in these days.
Windows binaries can be downloaded from our Downloads page, for Linux binaries, please visit your distributions website.
Where can I get libraries needed to compile some of the optional PHP extensions?
Note:
Those marked with * are not thread-safe libraries, and should not be used with PHP as a server module in the multi-threaded Windows web servers (IIS, Netscape).
This does not matter in Unix environments, yet.
LDAP (Unix).
LDAP* (Unix).
LDAP (Unix / Win):
How do I get these libraries to work?
You will need to follow instructions provided with the library.
Some of these libraries are detected automatically when you run the 'configure' script of PHP (such as the GD library), and others you will have to enable using '--with-EXTENSION' options to 'configure'.
Run 'configure --help' for a listing of these.
I got the latest version of the PHP source code from the CVS repository on my Windows machine, what do I need to compile it?
First, you will need Microsoft Visual C+ + v6 (v5 may do it also, but we do it with v6), and you will need some support files.
See the manual section about building PHP from source on Windows.
Where do I find the Browser Capabilities File?
You can find a browscap.ini file at http: / /www.garykeith.com / browsers / downloads.asp.
Prev
Home
Next
Mailing lists
Up
Database issues
PHP Manual
Prev
Next
This section gathers most common errors you can face, while writing PHP scripts.
pre ?php echo "This should be the first line .";? ?php echo "This should show up after the new line above .";? / pre
I would like to write a generic PHP script that can handle data coming from any form.
How do I know which POST method variables are available?
Since PHP 4.0.3, this feature is always on.
When track_vars is on, it creates some associative arrays, the most important here is: $_POST (this used to be called $HTTP_POST_VARS in PHP versions prior 4.1.0).
So, to write a generic script to handle POST method variables you would need something similar to the following:
foreach ($_POST as $var = $value) {echo "$var = $value br \n";}
I need to convert all single-quotes (') to a backslash followed by a single-quote.
How can I do this with a regular expression?
First off, take a look at the addslashes() function.
It will do exactly what you want.
You should also have a look at the magic_quotes_gpc directive in your php.ini file.
When I do the following, the output is printed in the wrong order:
To be able to use the results of your function in an expression (such as concatenating it with other strings in the example above), you need to return() the value, not echo() it.
Hey, what happened to my newlines?
pre ?php echo "This should be the first line .";? ?php echo "This should show up after the new line above .";? / pre
In PHP, the ending for a block of code is either "?" or "? \n" (where \n means a newline).
So in the example above, the echoed sentences will be on one line, because PHP omits the newlines after the block ending.
This means that you need to insert an extra newline after each block of PHP code to make it print out one newline.
Why does PHP do this?
Because when formatting normal HTML, this usually makes your life easier because you don' t want that newline, but you'd have to create extremely long lines or otherwise make the raw page source unreadable to achieve that effect.
I get the message 'Warning:
Cannot send session cookie - headers already sent.. .' or'Cannot add header information - headers already sent... '.
The functions header(), setcookie() and the session functions need to add headers to the output stream.
But headers can only be sent before all other content, check if your script is sending headers after having already sent content.
I need to access information in the request header directly.
How can I do this?
The getallheaders() function will do this if you are running PHP as an Apache module.
So, the following bit of code will show you all the request headers:
When I try to use authentication with IIS I get 'No Input file specified'.
The security model of IIS is at fault here.
A workaround is to create a plain HTML file (not parsed by PHP) as the entry page into an authenticated directory.
Then use a META tag to redirect to the PHP page, or have a link to the PHP page.
PHP will then recognize the authentication correctly.
With the ISAPI module, this is not a problem.
This should not effect other NT web servers.
For more information, see: http: / /support.microsoft.com / support / kb / articles / q160 / 4/22.asp.
My PHP script works on IE and Lynx, but on Netscape some of my output is missing.
When I do a "View Source" I see the content in IE but not in Netscape.
Netscape is more strict regarding html tags (such as tables) then IE.
Running your html output through a html validator, such as validator.w3.org, might be helpful.
For example, a missing / table might cause this.
Also, both IE and Lynx ignore any NULs (\0) in the HTML stream, Netscape does not.
The best way to check for this is to compile the command line The best way to check for this is to compile the command line version of PHP (also known as the CGI version) and run your script from the command line.
In *nix, pipe it through od -c and look for any \0 characters.
If you are on Windows you need to find an editor or some other program that lets you look at binary files.
When Netscape sees a NUL in a file it will typically not output anything else on that line whereas both IE and Lynx will.
How am I supposed to mix XML and PHP?
It complains about my ?xml tags!
You need to turn off the short tags by setting short_tags to 0 in your php.ini file, or by using the appropriate Apache directive.
You could even use a File section to do this selectively.
How can I use PHP with FrontPage or some other HTML editor that insists on moving my code around?
One of the easiest things to do is to enable using ASP tags in your PHP code.
This allows you to use the ASP-style% and% code delimiters.
Some of the popular HTML editors handle those more intelligently (for now).
To enable the ASP-style tags, you need to set the asp_tags php.ini variable, or use the appropriate Apache directive.
The best way is to stick a ?php phpinfo();? part on a page and load it up.
This will show you all sorts of information about your PHP setup, including a list of both environment variables and also special variables set by your web server.
12.
I' m trying to access one of the standard CGI variables (such as $DOCUMENT_ROOT or $HTTP_REFERER) in a user-defined function, and it can't seem to find it.
Environment variables are normal global variables, so you must either declare them as global variables in your function (by using "global $DOCUMENT_ROOT;", for example) or by using the global variable array (ie, "$GLOBALS["DOCUMENT_ROOT"]").
Note:
For example, you can now use $_SERVER[ "DOCUMENT_ROOT"] instead of $DOCUMENT_ROOT.
Prev
Home
Next
Build Problems
Up
PHP and HTML
PHP Manual
Prev
Next
Note:
Table 23-1.
Note:
Table 23-2.
Note:
Note:
Table 23-3.
Note:
Note:
Note:
Note:
Example 23-1.
Example 23-2.
Prev
Home
Next
Functions restricted / disabled by safe mode
Up
Function Reference
PHP Manual
Prev
Next
Note:
The following applies to 3.0.7 and later.
Internally in PHP a connection status is maintained.
There are 3 possible states:
0 - NORMAL
1 - ABORTED
2 - TIMEOUT
When a PHP script is running normally the NORMAL state, is active.
If the remote client disconnects the ABORTED state flag is turned on.
A remote client disconnect is usually caused by the user hitting his STOP button.
If the PHP-imposed time limit (see set_time_limit()) is hit, the TIMEOUT state flag is turned on.
You can decide whether or not you want a client disconnect to cause your script to be aborted.
Sometimes it is handy to always have your scripts run to completion even if there is no remote browser receiving the output.
The default behaviour is however for your script to be aborted when the remote client disconnects.
This behaviour can be set via the ignore_user_abort php.ini directive as well as through the corresponding "php_value ignore_user_abort" Apache .conf directive or with the ignore_user_abort() function.
If you do not tell PHP to ignore a user abort and the user aborts, your script will terminate.
The one exception is if you have registered a shutdown function using register_shutdown_function().
With a shutdown function, when the remote user hits his STOP button, the next time your script tries to output something PHP will detect that the connection has been aborted and the shutdown function is called.
This shutdown function will also get called at the end of your script terminating normally, so to do something different in case of a client disconnect you can use the connection_aborted() function.
This function will return TRUE if the connection was aborted.
Your script can also be terminated by the built-in script timer.
The default timeout is 30 seconds.
It can be changed using the max_execution_time php.ini directive or the corresponding "php_value max_execution_time" Apache .conf directive as well as with the set_time_limit() function.
When the timer expires the script will be aborted and as with the above client disconnect case, if a shutdown function has been registered it will be called.
Within this shutdown function you can check to see if a timeout caused the shutdown function to be called by calling the connection_timeout() function.
This function will return TRUE if a timeout caused the shutdown function to be called.
One thing to note is that both the ABORTED and the TIMEOUT states can be active at the same time.
This is possible if you tell PHP to ignore user aborts.
PHP will still note the fact that a user may have broken the connection, but the script will keep running.
If it then hits the time limit it will be aborted and your shutdown function, if any, will be called.
At this point you will find that connection_timeout() and connection_aborted() return TRUE.
You can also check both states in a single call by using the connection_status().
This function returns a bitfield of the active states.
So, if both states are active it would return 3, for example.
Prev
Home
Next
Using remote files
Up
Persistent Database Connections
PHP Manual
Prev
Next
PHP transparently supports HTTP cookies.
You can set cookies using the setcookie() function.
Cookies are part of the HTTP header, so setcookie() must be called before any output is sent to the browser.
You can use the output buffering functions to delay the script output until you have decided whether or not to set any cookies or send any headers.
If you wish to assign multiple values to a single cookie, just add [] to the cookie name.
In PHP 4.1.0 and later, the $_COOKIE auto-global array will always be set with any cookies sent from the client. $HTTP_COOKIE_VARS is also set in earlier versions of PHP when the track_vars configuration variable is set.
For more details, including notes on browser bugs, see the setcookie() function.
Prev
Home
Next
HTTP authentication with PHP
Up
Handling file uploads
PHP Manual
Prev
Chapter 18.
Handling file uploads
Next
The MAX_FILE_SIZE item cannot specify a file size greater than the file size that has been set in the upload_max_filesize ini-setting.
The default is 2 Megabytes.
If memory limit is enabled, larger memory_limit may be needed.
Make sure to set memory_limit large enough.
Make sure to set max_execution_time large enough.
If post_max_size set too small, large files cannot be uploaded.
Not validating which file you operate on may mean that users can access sensitive information in other directories.
Please note that the CERN httpd seems to strip off everything starting at the first whitespace in the content-type mime header it gets from the client.
Due to the large amount of directory listing styles we cannot guarantee that files with exotic names (like containing spaces) are handled properly.
Prev
Home
Next
Error Messages Explained
Up
Uploading multiple files
PHP Manual
Prev
Next
PHP is capable of receiving file uploads from any RFC-1867 compliant browser (which includes Netscape Navigator 3 or later, Microsoft Internet Explorer 3 with a patch from Microsoft, or later without a patch).
With PHP 's authentication and file manipulation functions, you have full control over who is allowed to upload and what is to be done with the file once it has been uploaded.
See also the file_uploads, upload_max_filesize, upload_tmp_dir, and post_max_size directives in php.ini
Note that PHP also supports PUT-method file uploads as used by Netscape Composer and W3C 's Amaya clients.
See the PUT Method Support for more details.
A file upload screen can be built by creating a special form which looks something like this:
Example 18-1.
File Upload Form
form enctype=" multipart / form-data "action="_URL_" method="post "input type="hidden" name="MAX_FILE_SIZE "value="30000" Send this file: input name="userfile "type="file" input type="submit "value="Send File" / form
Warning
The MAX_FILE_SIZE is advisory to the browser.
It is easy to circumvent this maximum.
So don 't count on it that the browser obeys your wish!
The PHP-settings for maximum-size, however, cannot be fooled.
The Variables defined for uploaded files differs depending on the PHP version and configuration.
The autoglobal $_FILES exists as of PHP 4.1.0 The $HTTP_POST_FILES array has existed since PHP 4.0.0.
Using $_FILES is preferred.
If the PHP directive register_globals is on, related variable names will also exist. register_globals defaults to off as of PHP 4.2.0.
Note that this assumes the use of the file upload name userfile, as used in the example script above.
The original name of the file on the client machine.
An example would be "image / gif".
The size, in bytes, of the uploaded file.
The temporary filename of the file in which the uploaded file was stored on the server.
The error code associated with this file upload. ['error'] was added in PHP 4.2.0
Note:
In PHP versions prior 4.1.0 this was named $HTTP_POST_FILES and it 's not an autoglobal variable like $_FILES is.
PHP 3 does not support $HTTP_POST_FILES.
For example, $userfile_name will equal $_FILES[ 'userfile']['name'], $userfile_type will equal $_FILES['userfile']['type'], etc.
Keep in mind that as of PHP 4.2.0, register_globals defaults to off.
It 's preferred to not rely on this directive.
Files will by default be stored in the server 's default temporary directory, unless another location has been given with the upload_tmp_dir directive in php.ini.
The server 's default directory can be changed by setting the environment variable TMPDIR in the environment in which PHP runs.
Setting it using putenv() from within a PHP script will not work.
This environment variable can also be used to make sure that other operations are working on uploaded files, as well.
Validating file uploads
See also the function entries for is_uploaded_file() and move_uploaded_file() for further information.
The following example will process the file upload that came from a form.
Here' s some more debugging info:\n"; print_r($_FILES);} else {print "Possible file upload attack!
The PHP script which receives the uploaded file should implement whatever logic is necessary for determining what should be done with the uploaded file.
You can for example use the $_FILES[ 'userfile']['size'] variable to throw away any files that are either too small or too big.
You could use the $_FILES[ 'userfile']['type'] You could use the $_FILES['userfile']['type'] variable to throw away any files that didn't match a certain type criteria.
As of PHP 4.2.0, you could use $_FILES[ 'userfile']['error'] and plan your logic according to the error codes.
Whatever the logic, you should either delete the file from the temporary directory or move it elsewhere.
The file will be deleted from the temporary directory at the end of the request if it has not been moved away or renamed.
Prev
Home
Next
Up
Error Messages Explained
PHP Manual
Prev
Chapter 18.
Handling file uploads
Next
Multiple files can be uploaded using different name for input.
It is also possible to upload multiple files simultaneously and have the information organized automatically in arrays for you.
To do so, you need to use the same array submission syntax in the HTML form as you do with multiple selects and checkboxes:
Note:
Support for multiple file uploads was added in version 3.0.10.
Example 18-3.
Uploading multiple files
When the above form is submitted, the arrays $_FILES[ 'userfile'], $_FILES['userfile']['name'], and $_FILES['userfile']['size'] will be initialized (as well as in $HTTP_POST_FILES for PHP version prior 4.1.0).
When register_globals is on, globals for uploaded files are also initialized.
Each of these will be a numerically indexed array of the appropriate values for the submitted files.
For instance, assume that the filenames / home / test / review.html and / home / test / xwp.out are submitted.
In this case, $_FILES[ 'userfile']['name'][0] would contain the value review.html, and $_FILES['userfile']['name'][1] would contain the value xwp.out.
Similarly, $_FILES[ 'userfile']['size'][0] would contain review.html's filesize, and so forth.
$_FILES[ 'userfile']['name'][0], $_FILES['userfile']['tmp_name'][0], $_FILES['userfile']['size'][0], and $_FILES['userfile']['type'][0] are also set.
Prev
Home
Next
Common Pitfalls
Up
PUT method support
PHP Manual
Prev
Chapter 18.
Handling file uploads
Next
PUT method support has changed between PHP 3 and PHP 4.
Example 18-4.
Note:
PHP provides support for the HTTP PUT method used by clients such as Netscape Composer and W3C Amaya.
PUT requests are much simpler than a file upload and they look something like this:
This would normally mean that the remote client would like to save the content that follows as: / path / filename.html in your web tree.
It is obviously not a good idea for Apache or PHP to automatically let everybody overwrite any files in your web tree.
So, to handle such a request you have to first tell your web server that you want a certain PHP script to handle the request.
It can be placed almost anywhere in your Apache configuration file.
A common place is inside a Directory block or perhaps inside a Virtualhost block.
This tells Apache to send all PUT requests for URIs that match the context in which you put this line to the put.php script.
Inside your put.php file you would then do something like this:
This would copy the file to the location requested by the remote client.
You would probably want to perform some checks and / or authenticate the user before performing this file copy.
When the request ends, this temporary file is deleted.
The filename of this temporary file is in the $PHP_PUT_FILENAME variable, and you can see the suggested destination filename in the $REQUEST_URI (may vary on non-Apache web servers).
This destination filename is the one that the remote client specified.
You do not have to listen to this client.
You could, for example, copy all uploaded files to a special uploads directory.
Prev
Home
Next
Uploading multiple files
Up
Using remote files
PHP Manual
Prev
Next
Prev
Home
Next
Spotting References
HTTP authentication with PHP
PHP Manual
Prev
Next
In an Apache module PHP script, it is possible to use the header() function to send an "Authentication Required "message to the client browser causing it to pop up a Username / Password input window.
Once the user has filled in a username and a password, the URL containing the PHP script will be called again with the predefined variables PHP_AUTH_USER, PHP_AUTH_PW, and PHP_AUTH_TYPE Once the user has filled in a username and a password, the URL containing the PHP script will be called again with the predefined variables PHP_AUTH_USER, PHP_AUTH_PW, and PHP_AUTH_TYPE set to the user name, password and authentication type respectively.
Only "Basic" authentication is supported.
PHP Version Note:
An example script fragment which would force client authentication on a page is as follows:
Example 16-1.
HTTP Authentication example
?php if (!isset($_SERVER['PHP_AUTH_USER'])) {header( 'WWW-Authenticate:
Compatibility Note:
Please be careful when coding the HTTP header lines.
In order to guarantee maximum compatibility with all clients, the keyword "Basic" should be written with an uppercase "B", the realm string must be enclosed in double (not single) quotes, and exactly one space should precede the 401 code in the HTTP / 1.0 401 header line.
Instead of simply printing out PHP_AUTH_USER and PHP_AUTH_PW, as done in the above example, you may want to check the username and password for validity.
Perhaps by sending a query to a database, or by looking up the user in a dbm file.
They seem very picky about the order of the headers.
Sending the WWW-Authenticate header before the HTTP / 1.0 401 header seems to do the trick for now.
As of PHP 4.3.0, in order to prevent someone from writing a script which reveals the password for a page that was authenticated through a traditional external mechanism, the PHP_AUTH variables will not be set if external authentication is enabled for that particular page and safe mode is enabled.
So, you can use $_SERVER[ 'REMOTE_USER'].
PHP uses the presence of an AuthType directive to determine whether external authentication is in effect.
Note, however, that the above does not prevent someone who controls a non-authenticated URL from stealing passwords from authenticated URLs on the same server.
Both Netscape Navigator and Internet Explorer will clear the local browser window 's authentication cache for the realm upon receiving a server response of 401.
Some people use this to "time out" logins, or provide a "log-out "button.
Example 16-2.
HTTP Authentication example forcing a new name / password
?php function authenticate() {header( 'WWW-Authenticate:
This behavior is not required by the HTTP Basic authentication standard, so you should never depend on this.
Testing with Lynx has shown that Lynx does not clear the authentication credentials with a 401 server response, so pressing back and then forward again will open the resource as long as the credential requirements haven 't changed.
Also note that this does not work using Microsoft 's IIS server and the CGI version of PHP due to a limitation of IIS.
If safe mode is enabled, the uid of the script is added to the realm part of the WWW-Authenticate header.
Prev
Home
Next
Features
Up
PHP Manual
Prev
Next
Persistent connections are SQL links that do not close when the execution of your script ends.
When a persistent connection is requested, PHP checks if there' s already an identical persistent connection (that remained open from earlier) - and if it exists, it uses it.
An 'identical' connection is a connection that was opened to the same host, with the same username and the same password (where applicable).
Note:
There are other extensions that provide persistent connections, such as the IMAP extension.
People who aren' t thoroughly familiar with the way web servers work and distribute the load may mistake persistent connects for what they're not.
In particular, they do not give you an ability to open 'user sessions' on the same SQL link, they do not In particular, they do not give you an ability to open'user sessions' on the same SQL link, they do not give you an ability to build up a transaction efficiently, and they don't do a whole lot of other things.
In fact, to be extremely clear about the subject, persistent connections don' t give you any functionality that wasn't possible with their non-persistent brothers.
Why?
This has to do with the way web servers work.
There are three ways in which your web server can utilize PHP to generate web pages.
The first method is to use PHP as a CGI "wrapper".
When run this way, an instance of the PHP interpreter is created and destroyed for every page request (for a PHP page) to your web server.
Because it is destroyed after every request, any resources that it acquires (such as a link to an SQL database server) are closed when it is destroyed.
In this case, you do not gain anything from trying to use persistent connections - - they simply don 't persist.
The second, and most popular, method is to run PHP as a module in a multiprocess web server, which currently only includes Apache.
A multiprocess server typically has one process (the parent) which coordinates a set of processes (its children) who actually do the work of serving up web pages.
When each request comes in from a client, it is handed off to one of the children that is not already serving another client.
This means that when the same client makes a second request to the server, it may be serviced by a different child process than the first time.
What a persistent connection does for you in this case it make it so each child process only needs to connect to your SQL server the first time that it serves a page that makes use of such a connection.
When another page then requires a connection to the SQL server, it can reuse the connection that child established earlier.
The last method is to use PHP as a plug-in for a multithreaded web server.
Currently PHP 4 has support for ISAPI, WSAPI, and NSAPI (on Windows), which all allow PHP to be used as a plug-in on multithreaded servers like Netscape FastTrack (iPlanet), Microsoft's Internet Information Server (IIS), and O'Reilly's WebSite Pro.
The behavior is essentially the same as for the multiprocess model described before.
Note that SAPI support is not available in PHP 3.
If persistent connections don 't have any added functionality, what are they good for?
The answer here is extremely simple - - efficiency.
Persistent connections are good if the overhead to create a link to your SQL server is high.
Whether or not this overhead is really high depends on many factors.
Like, what kind of database it is, whether or not it sits on the same computer on which your web server sits, how loaded the machine the SQL server sits on is and so forth.
The bottom line is that if that connection overhead is high, persistent connections help you considerably.
They cause the child process to simply connect only once for its entire lifespan, instead of every time it processes a page that requires connecting to the SQL server.
This means that for every child that opened a persistent connection will have its own open persistent connection to the server.
For example, if you had 20 different child processes that ran a script that made a persistent connection to your SQL server, you 'd have 20 different connections to the SQL server, one from each child.
Note, however, that this can have some drawbacks if you are using a database with connection limits that are exceeded by persistent child connections.
If your database has a limit of 16 simultaneous connections, and in the course of a busy server session, 17 child threads attempt to connect, one will not be able to.
If there are bugs in your scripts which do not allow the connections to shut down (such as infinite loops), the database with only 16 connections may be rapidly swamped.
Check your database documentation for information on handling abandoned or idle connections.
Warning
There are a couple of additional caveats to keep in mind when using persistent connections.
One is that when using table locking on a persistent connection, if the script for whatever reason cannot release the lock, then subsequent scripts using the same connection will block indefinitely and may require that you either restart the httpd server or the database server.
Another is that when using transactions, a transaction block will also carry over to the next script which uses that connection if script execution ends before the transaction block does.
In either case, you can use register_shutdown_function() to register a simple cleanup function to unlock your tables or roll back your transactions.
Better yet, avoid the problem entirely by not using persistent connections in scripts which use table locks or transactions (you can still use them elsewhere).
An important summary.
Persistent connections were designed to have one-to-one mapping to regular connections.
That means that you should always be able to replace persistent connections with non-persistent connections, and it won 't change the way your script behaves.
It may (and probably will) change the efficiency of the script, but not its behavior!
See also fbsql_pconnect(), ibase_pconnect(), ifx_pconnect(), imap_popen(), ingres_pconnect(), msql_pconnect(), mssql_pconnect(), mysql_pconnect(), OCIPLogon(), odbc_pconnect(), Ora_pLogon(), pfsockopen(), pg_pconnect(), and sybase_pconnect().
Prev
Home
Next
Connection handling
Up
Safe Mode
PHP Manual
Prev
Next
In addition, URLs can be used with the include(), include_once(), require() and require_once() statements.
Note:
Note:
For example, you can use this to open a file on a remote web server, parse the output for the data you want, and then use that data in a database query, or simply to output it in a style matching the rest of your website.
Example 19-1.
?php $file = fopen ("http: / /www.example.com / ", "r"); if (!$file) {echo" p Unable to open remote file.\n"; exit;} while (!feof ($file)) {$line = fgets ($file, 1024); / * This only works if the title and its tags are on one line * / if (eregi ("title (.*) / title", $line, $out)) {$title = $out[1]; break;}} fclose($file);?
You can also write to files on an FTP server (provided that you have connected as a user with the correct access rights).
To connect as a user other than 'anonymous', you need to specify the username (and possibly password) within the URL, such as'ftp: / /user:password@ftp.example.com / path / to / file'. (You can use the same sort of syntax to access files via HTTP when they require Basic authentication.)
Example 19-2.
Storing data on a remote server
?php $file = fopen ("ftp: / /ftp.example.com / incoming / outputfile", "w"); if (!$file) {echo "p Unable to open remote file for writing.\n"; exit;} / * Write the data here. * / fputs ($file, $_SERVER['HTTP_USER_AGENT']. "\n"); fclose ($file);?
Note:
Unfortunately that would not work because the fopen() call will fail if the remote file already exists.
To do distributed logging like that, you should take a look at syslog().
Prev
Home
Next
PUT method support
Up
Connection handling
PHP Manual
Prev
Next
The PHP safe mode is an attempt to solve the shared-server security problem.
It is architecturally incorrect to try to solve this problem at the PHP level, but since the alternatives at the web server and OS levels aren' t very realistic, many people, especially ISP's, use safe mode for now.
Table 22-1.
Name
Changeable
safe_mode
safe_mode_exec_dir
PHP_INI_SYSTEM
open_basedir
PHP_INI_SYSTEM
Read the Security and chapter for more information.
By default, Safe Mode does a UID compare check when opening files.
If you want to relax this to a GID compare, then turn on safe_mode_gid.
Whether to use UID (FALSE) or GID (TRUE) checking upon file access.
UID / GID checks are bypassed when including files from this directory and its subdirectories (directory must also be in include_path or full path must including).
As of PHP 4.2.0, this directive can take a semi-colon separated path in a similar fashion to the include_path directive, rather than just a single directory.
The restriction specified is actually a prefix, not a directory name.
This means that "safe_mode_include_dir = / dir / incl" also allows access to "/ dir / include" and "/ dir / incls" if they exist.
When you want to restrict access to only the specified directory, end with a slash.
For example: "safe_mode_include_dir = / dir / incl /"
If PHP is used in safe mode, system() and the other functions executing system programs refuse to start programs that are not in this directory.
This directive contains a comma-delimited list of prefixes.
In Safe Mode, the user may only alter environment variables whose names begin with the prefixes supplied here.
By default, users will only be able to set environment variables that begin with PHP_ (e.g.
PHP_FOO=BAR).
Note:
If this directive is empty, PHP will let the user modify ANY environment variable!
This directive contains a comma-delimited list of environment variables that the end user won' t be able to change using putenv().
These variables will be protected even if safe_mode_allowed_env_vars is set to allow to change them.
Limit the files that can be opened by PHP to the specified directory-tree, including the file itself.
This directive is NOT affected by whether Safe Mode is turned On or Off.
When a script tries to open a file with, for example, fopen or gzopen, the location of the file is checked.
When the file is outside the specified directory-tree, PHP will refuse to open it.
All symbolic links are resolved, so it 's not possible to avoid this restriction with a symlink.
The special value. indicates that the directory in which the script is stored will be used as base-directory.
Under Windows, separate the directories with a semicolon.
On all other systems, separate the directories with a colon.
As an Apache module, open_basedir paths from parent directories are now automatically inherited.
The restriction specified with open_basedir is actually a prefix, not a directory name.
This means that "open_basedir = / dir / incl" also allows access to "/ dir / include" and "/ dir / incls" if they exist.
For example: "open_basedir = / dir / incl /"
Note:
The default is to allow all files to be opened.
This directive allows you to disable certain functions for security This directive allows you to disable certain functions for security reasons.
It takes on a comma-dilimited list of function names. disable_functions is not affected by Safe Mode.
This directive must be set in php.ini For example, you cannot set this in httpd.conf.
See also: register_globals, display_errors, and log_errors
When safe_mode is on, PHP checks to see if the owner of the current script matches the owner of the file to be operated on by a file function.
For example:
-rw-rw-r- - 1 rasmus rasmus 33 Jul 1 19:20 script.php -rw-r--r- - 1 root root 1116 May 26 18:01 / etc / passwd
?php readfile( '/ etc / passwd');?
Warning:
The script whose uid is 500 is not allowed to access / etc / passwd owned by uid 0 in / docroot / script.php on line 2
However, there may be environments where a strict UID check is not appropriate and a relaxed GID check is sufficient.
This is supported by means of the safe_mode_gid switch.
Setting it to On performs the relaxed GID checking, setting it to Off (the default) performs UID checking.
If instead of safe_mode, you set an open_basedir directory then all file operations will be limited to files under the specified directory For example (Apache httpd.conf example):
Warning: open_basedir restriction in effect.
You can also disable individual functions.
Note that the disable_functions directive can not be used outside of the php.ini file which means that you cannot disable functions on a per-virtualhost or per-directory basis in your httpd.conf file.
disable_functions readfile,system
Warning: readfile() has been disabled for security reasons in / docroot / script.php on line 2
Prev
Home
Next
Persistent Database Connections
Up
Functions restricted / disabled by safe mode
PHP Manual
Prev
Next
Prev
Home
Next
Apache-specific Functions
PHP Manual
Prev
Next
Example 1. abs() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
This function is not implemented on Windows platforms.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns a string with backslashes before characters that are listed in charlist Returns a string with backslashes before characters that are listed in charlist parameter.
It escapes \n, \r etc. in C-like style, characters with ASCII code lower than 32 and higher than 126 are converted to octal representation.
They will be converted to \0, \a, \b, \f, \n, \r, \t and \v.
In PHP \0 (NULL), \r (carriage return), \n (newline) and \t (tab) are predefined escape sequences, while in C all of these are predefined escape sequences.
charlist like "\0..\37", which would escape all characters with ASCII code between 0 and 31.
Example 1. addcslashes() example
$escaped = addcslashes( $not_escaped, "\0..\37!@\177..\377");
When you define a sequence of characters in the charlist argument make sure that you know what characters come between the characters that you set as the start and end of the range.
echo addcslashes( 'foo []', 'A..z'); / / output: \f\o\o\ [\] / / All upper and lower-case letters will be escaped / /... but so will the [\ ]^_` and any tabs, line / / feeds, carriage returns, etc.
echo addcslashes( "zoo[' .']", 'z..A'); / / output: \zoo['\ .']
See also stripcslashes(), stripslashes(), htmlspecialchars(), and quotemeta().
Prev
Home
Next
String functions
Up
PHP Manual
Prev
Next
Returns a string with backslashes before characters that need to be quoted in database queries etc.
These characters are single quote ('), double quote ("), backslash (\) and NUL (the NULL byte).
See also stripslashes(), htmlspecialchars(), and quotemeta().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Apache-specific Functions
Up
PHP Manual
Prev
Next
This performs a partial request for a URI.
It goes just far enough to obtain all the important information about the given resource and returns this information in a class.
The properties of the returned class are:
Prev
Home
Next
Up
PHP Manual
Prev
Next
apache_note() is an Apache-specific function which gets and sets values in a request's notes table.
If called with one argument, it returns the current value of note note_name.
If called with two arguments, it sets the value of note note_name to note_value and returns the previous value of note note_name.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Example 1. apache_request_headers() Example
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. array_change_key_case() example
Prev
Home
Next
Array Functions
Up
PHP Manual
Prev
Next
Example 1. array_chunk() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
array_count_values() returns an array using the values of the input array as keys and their frequency in input as values.
Example 1. array_count_values() example
$array = array (1, "hello", 1, "world", "hello"); print_r(array_count_values ($array));
Array ([1] = 2 [hello] = 2 [world] = 1)
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. array_diff_assoc() example
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
$array1 = array ("a "= "green", "red", "blue", "red"); $array2 = array ("b" = "green", "yellow", "red"); $result = array_diff ($array1, $array2);
Multiple occurrences in $array1 are all treated the same way.
Two elements are considered equal if and only if (string) $elem1 === (string) $elem2.
Note:
Of course you can check deeper dimensions by using array_diff( $array1[0], $array2[0]);.
This was broken in PHP 4.0.4!
See also array_diff_assoc(), array_intersect() and array_intersect_assoc().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. array_fill() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. array_filter() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
A warning will be emitted if a value has the wrong type, and the key / value pair in question will not be flipped.
array_flip() returns FALSE if it fails.
$trans = array_flip ($trans); $original = strtr ($str, $trans);
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns an array of the parameters.
The parameters can be given an index with the = operator.
Syntax "index = values", separated by commas, define index and values. index may be of type string or numeric.
When index is omitted, a integer index is automatically generated, starting at 0.
If index is an integer, next generated index will be the biggest integer index + 1.
Note that when two identical index are defined, the last overwrite the first.
The following example demonstrates how to create a two-dimensional array, how to specify keys for associative arrays, and how to skip-and-continue numeric indices in normal arrays.
Example 1. array() example
Example 2.
Automatic index with array()
This example creates a 1-based array.
Example 3.
1-based index with array()
See also array_pad(), list(), and range().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. array_intersect_assoc() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note that keys are preserved.
$array1 = array ("a "= "green", "red", "blue"); $array2 = array ("b" = "green", "yellow", "red"); $result = array_intersect ($array1, $array2);
This makes $result have
Note:
This was broken in PHP 4.0.4!
See also array_intersect_assoc(), array_diff(), array_diff_assoc().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. array_key_exists() example
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
array_keys() returns the keys, numeric and string, from the input array.
If the optional search_value is specified, then only the keys for that value are returned.
Otherwise, all the keys from the input are returned.
Example 1. array_keys() example
The printout of the program above will be:
Array ([0] = 0 [1] = color) Array ([0] = 0 [1] = 3 [2] = 4) Array ([0] = color [1] = size)
This function was added to PHP 4, below is an implementation for those still using PHP 3.
Example 2.
Implementation of array_keys() for PHP 3 users
function array_keys ($arr, $term="") {$t = array(); while (list($k,$v) = each($arr)) {if ($term $v != $term) {continue;} $t[] = $k;} return $t;}
See also array_values().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. array_map() example
Example 2. array_map() - using more arrays
Example 3.
Prev
Home
Next
Up
PHP Manual
Prev
Next
It returns the resulting array.
If the input arrays have the same string keys, then the later value for that key will overwrite the previous one.
Example 1. array_merge() example
The $result will be:
Array ([color] = green [0] = 2 [1] = 4 [2] = a [3] = b [shape] = trapezoid [4] = 4)
Simple array_merge() example
Don 't forget that numeric keys will be renumbered!
$array1 = array(); $array2 = array(1 = "data"); $result = $array1 + $array2;
See also array_merge_recursive().
Prev
Home
Next
Up
PHP Manual
Prev
Next
array_merge_recursive() merges the elements of two or more arrays together so that the values of one are appended to the end of the previous one.
It returns the resulting array.
If the input arrays have the same string keys, then the values for these keys are merged together into an array, and this is done recursively, so that if one of the values is an array itself, the function will merge it with a corresponding entry in another array too.
If, however, the arrays have the same numeric key, the later value will not overwrite the original value, but will be appended.
Example 1. array_merge_recursive() example
The $result will be:
See also array_merge().
Prev
Home
Next
Up
PHP Manual
Prev
Next
array_multisort() can be used to sort several arrays at once or a multi-dimensional array according by one of more dimensions.
It maintains key association when sorting.
The input arrays are treated as columns of a table to be sorted by rows - this resembles the functionality of SQL ORDER BY clause.
The rows (values) in that array that compare the same are sorted by the next input array, and so on.
The argument structure of this function is a bit unusual, but flexible.
The very first argument has to be an array.
Subsequently, each argument can be either an array or a sorting flag from the following lists.
Sorting order flags:
SORT_ASC - sort in ascending order
SORT_DESC - sort in descending order
Sorting type flags:
SORT_REGULAR - compare items normally
SORT_NUMERIC - compare items numerically
SORT_STRING - compare items as strings
No two sorting flags of the same type can be specified after each array.
The sorting flags specified after an array argument apply only to that array - they are reset to default SORT_ASC and SORT_REGULAR before each new array argument.
Returns TRUE on success or FALSE on failure.
Example 1.
Sorting multiple arrays
In this example, after sorting, the first array will contain 10, "a", 100, 100.
The second array will contain 1, 1, "2", 3.
The entries in the second array corresponding to the identical entries in the first array (100 and 100) were sorted as well.
Example 2.
Sorting multi-dimensional array
In this example, after sorting, the first array will contain 10, 100, 100, "a" (it was sorted as strings in ascending order), and the second one will contain 1, 3, "2", 1 (sorted as numbers, in descending order).
Prev
Home
Next
Up
PHP Manual
Prev
Next
array_pad() returns a copy of the input padded to size specified by pad_size with value pad_value.
If pad_size is positive then the array is padded on the right, if it 's negative then on the left.
If the absolute value of pad_size is less than or equal to the length of the input then no padding takes place.
Example 1. array_pad() example
$input = array (12, 10, 9); $result = array_pad ($input, 5, 0); / / result is array (12, 10, 9, 0, 0) $result = array_pad ($input, -7, -1); / / result is array (-1, -1, -1, -1, 12, 10, 9) $result = array_pad ($input, 2, "noop"); / / not padded
Prev
Home
Next
Up
PHP Manual
Prev
Next
If array is empty (or is not an array), NULL will be returned.
Example 1. array_pop() example
$stack = array ("orange", "banana", "apple", "raspberry"); $fruit = array_pop ($stack);
Array ([0] = orange [1] = banana [2] = apple)
Please read the section on Booleans for more information.
See also array_push(), array_shift(), and array_unshift().
Prev
Home
Next
Up
PHP Manual
Prev
Next
array_push() treats array as a stack, and pushes the passed variables onto the end of array.
The length of array increases by the number of variables pushed.
Has the same effect as:
Returns the new number of elements in the array.
Example 1. array_push() example
$stack = array ("orange", "banana"); array_push ($stack, "apple", "raspberry");
This example would result in $stack having the following elements:
See also array_pop(), array_shift(), and array_unshift().
Prev
Home
Next
Up
PHP Manual
Prev
Next
array_rand() is rather useful when you want to pick one or more random entries out of an array.
It takes an input array and an optional argument num_req which specifies how many entries you want to pick - if not specified, it defaults to 1.
If you are picking only one entry, array_rand() returns the key for a random entry.
Otherwise, it returns an array of keys for the random entries.
This is done so that you can pick random keys as well as values out of the array.
Don' t forget to call srand() to seed the random number generator.
Example 1. array_rand() example
srand ((float) microtime() * 10000000); $input = array ("Neo", "Morpheus", "Trinity", "Cypher", "Tank"); $rand_keys = array_rand ($input, 2); print $input[$rand_keys[0]] ."\n"; print $input[$rand_keys[1]] ."\n";
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. array_reduce() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. array_reverse() example
$input = array ("php", 4.0, array ("green", "red")); $result = array_reverse ($input); $result_keyed = array_reverse ($input, TRUE);
This makes both $result and $result_keyed have the same elements, but note the difference between the keys.
The printout of $result and $result_keyed will be:
Array ([0] = Array ([0] = green [1] = red) [1] = 4 [2] = php) Array ([2] = Array ([0] = green [1] = red) [1] = 4 [0] = php)
The second parameter was added in PHP 4.0.3.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Warning
Please read the section on Booleans for more information.
Use the === operator for testing the return value of this function.
Prev
Home
Next
Up
PHP Manual
Prev
Next
All numerical array keys will be modified to start counting from zero while literal keys won 't be touched.
Example 1. array_shift() example
$stack = array ("orange", "banana", "apple", "raspberry"); $fruit = array_shift ($stack);
This would result in $stack having 3 elements left:
See also array_unshift(), array_push(), and array_pop().
Prev
Home
Next
Up
PHP Manual
Prev
Next
array_slice() returns the sequence of elements from the array array as specified by the offset and length parameters.
If offset is negative, the sequence will start that far from the end of the array.
If length is given and is positive, then the sequence will have that many elements in it.
If length is given and is negative then the sequence will stop that many elements from the end of the array.
If it is omitted, then the sequence will have everything from offset up until the end of the array.
Note that array_slice() will ignore array keys, and will calculate offsets and lengths based on the actual positions of elements within the array.
Example 1. array_slice() examples
See also array_splice().
Prev
Home
Next
Up
PHP Manual
Prev
Next
It returns an array containing the extracted elements.
If offset is positive then the start of removed portion is at that offset from the beginning of the input If offset is positive then the start of removed portion is at that offset from the beginning of the input array.
If offset is negative then it starts that far from the end of the input array.
If length is specified and is positive, then that many elements will be removed.
If length is specified and is negative then the end of the removed portion will be that many elements from the end of the array.
Tip: to remove everything from offset to the end of the array when replacement is also specified, use count( $input) for length.
If replacement array is specified, then the removed elements are replaced with elements from this array.
If offset and length are such that nothing is removed, then the elements from the replacement array are inserted in the place specified by the offset.
Tip: if the replacement is just one element it is not necessary to put array() around it, unless the element is an array itself.
The following equivalences hold:
array_push ($input, $x, $y) array_splice ($input, count ($input), 0, array ($x, $y)) array_pop ($input) array_splice ($input, -1) array_shift ($input) array_splice ($input, 0, 1) array_unshift ($input, $x, $y) array_splice ($input, 0, 0, array ($x, $y)) $input[$x] = $y array_splice ($input, $x, 1, $y)
Returns the array consisting of removed elements.
Example 1. array_splice() examples
$input = array ("red", "green", "blue", "yellow"); array_splice ($input, 2); / / $input is now array ("red", "green") $input = array ("red", "green", "blue", "yellow"); array_splice ($input, 1, -1); / / $input is now array ("red", "yellow") $input = array ("red", "green", "blue", "yellow"); array_splice ($input, 1, count($input), "orange"); / / $input is now array ("red", "orange") $input = array ("red", "green", "blue", "yellow"); array_splice ($input, -1, 1, array("black", "maroon")); / / $input is now array ("red", "green", / / "blue", "black", "maroon")
See also array_slice().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. array_sum() examples
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
It does not mean that the key of the first related value from the unsorted array will be kept.
Two elements are considered equal if and only if (string) $elem1 === (string) $elem2.
The first element will be used.
This was broken in PHP 4.0.4!
$input = array ("a "= "green", "red", "b" = "green", "blue", "red"); $result = array_unique ($input); print_r($result);
The printout of the program above will be (PHP 4.0.6):
Prev
Home
Next
Up
PHP Manual
Prev
Next
array_unshift() prepends passed elements to the front of the array.
All numerical array keys will be modified to start counting from zero while literal keys won 't be touched.
Returns the new number of elements in the array.
Example 1. array_unshift() example
$queue = array ("orange", "banana"); array_unshift ($queue, "apple", "raspberry");
This would result in $queue having the following elements:
See also array_shift(), array_push(), and array_pop().
Prev
Home
Next
Up
PHP Manual
Prev
Next
array_values() returns all the values from the input array.
Example 1. array_values() example
This will output:
Array ([0] = XL [1] = gold)
This function was added to PHP 4, below is an implementation for those still using PHP 3.
Example 2.
Implementation of array_values() for PHP 3 users
See also array_keys().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Applies the user-defined function function to each element of the array array.
The array parameter 's value being the first, and the key / index second.
If the optional userdata parameter is supplied, it will be passed as the third parameter to the callback function.
These warnings may be suppressed by prepending the PHP error operator @ to the array_walk() call, or by using error_reporting().
If function needs to be working with the actual values of the array, specify the first parameter of function as a reference.
Then, any changes made to those elements will be made in the original array itself.
Passing the key and userdata to function was added in 4.0.0
array_walk() is not affected by the internal array pointer of array. array_walk() will walk through the entire array regardless of pointer position.
To reset the pointer, use reset().
Users may not change the array itself from the callback function. e.g.
If the array that array_walk() is applied to is changed, the behavior of this function is undefined, and unpredictable.
Example 1. array_walk() example
The printout of the program above will be:
See also list(), foreach, each(), and call_user_func_array().
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function sorts an array such that array indices maintain their correlation with the array elements they are associated with.
This is used mainly when sorting associative arrays where the actual element order is significant.
Example 1. arsort() example
This example would display:
a = orange d = lemon b = banana c = apple
The fruits have been sorted in reverse alphabetical order, and the index associated with each element has been maintained.
You may modify the behavior of the sort using the optional parameter sort_flags, for details see sort().
See also asort(), rsort(), ksort(), and sort().
Prev
Home
Next
Up
PHP Manual
Prev
Next
ascii2ebcdic() is an Apache-specific function which is available only on EBCDIC based operating systems (OS / 390, BS2000).
It translates the ASCII encoded string ascii_str to its equivalent EBCDIC representation (binary safe), and returns the result.
See also the reverse function ebcdic2ascii()
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
This function is not implemented on Windows platforms.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function sorts an array such that array indices maintain their correlation with the array elements they are associated with.
This is used mainly when sorting associative arrays where the actual element order is significant.
Example 1. asort() example
This example would display:
c = apple b = banana d = lemon a = orange
The fruits have been sorted in alphabetical order, and the index associated with each element has been maintained.
You may modify the behavior of the sort using the optional parameter sort_flags, for details see sort().
See also arsort(), rsort(), ksort(), and sort().
Prev
Home
Next
Up
PHP Manual
Prev
Next
aspell_check() checks the spelling of a word and returns TRUE if the spelling is correct, FALSE if not.
Example 1. aspell_check()
$aspell_link = aspell_new( "english"); if (aspell_check($aspell_link, "testt")) {echo "This is a valid spelling";} else {echo "Sorry, wrong spelling";}
Prev
Home
Next
Up
PHP Manual
Prev
Next
aspell_check_raw() checks the spelling of a word, without changing its case or trying to trim it in any way and returns TRUE if the spelling is correct, FALSE if not.
Example 1. aspell_check_raw()
$aspell_link = aspell_new( "english"); if (aspell_check_raw($aspell_link, "test")) {echo "This is a valid spelling";} else {echo "Sorry, wrong spelling";}
Prev
Home
Next
Aspell functions [deprecated]
Up
PHP Manual
Prev
Next
Returns FALSE on error.
Example 1. aspell_new()
$aspell_link = aspell_new( "english");
Prev
Home
Next
Up
PHP Manual
Prev
Next
aspell_suggest() returns an array of possible spellings for the given word.
Example 1. aspell_suggest()
$aspell_link = aspell_new( "english"); if (!aspell_check($aspell_link, "test")) {$suggestions = aspell_suggest($aspell_link, "test"); foreach ($suggestions as $suggestion) {echo "Possible spelling: $suggestion br \n";}}
Prev
Home
Next
Up
BCMath Arbitrary Precision Mathematics Functions
PHP Manual
Prev
Next
If the assertion is given as a string it will be evaluated as PHP code by assert().
This means that if you pass a boolean condition as assertion this condition will not show up as parameter to the assertion function which you may have defined with the assert_options() function, the condition is converted to a string before calling that handler function, and the boolean FALSE is converted as the empty string.
Assertions should not be used for normal runtime operations like input parameter checks.
The behavior of assert() may be configured by assert_options() or by .ini-settings described in that functions manual page.
assert() callbacks are particularly useful for building automated test suites because they allow you to easily capture the code passed to the assertion, along with information on where the assertion was made.
The callback function should accept three arguments.
The second argument will contain the line the assertion failed on and the third argument will contain the expression that failed (if any - literal values such as 1 or "two "will not be passed via this argument)
File '$file' br Line '$line 'br Code '$code' br hr ";} / / Set up the callback assert_options (ASSERT_CALLBACK, 'my_assert_handler'); / / Make an assertion that should fail assert ('mysql_query ("")');?
Prev
Home
Next
Up
PHP Manual
Prev
Next
Using assert_options() you may set the various assert() control options or just query their current settings.
Table 1.
Assert Options
option
ini-parameter
default
description
enable assert() evaluation
issue a PHP warning for each failed assertion
terminate execution on failed assertions
disable error_reporting during assertion expression evaluation
user function to call on failed assertions
assert_options() will return the original setting of any option or FALSE on errors.
Prev
Home
Next
PHP Options Information
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
This function is not implemented on Windows platforms.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
base64_decode() decodes encoded_data and returns the original data.
The returned data may be binary.
See also: base64_encode(), RFC 2045 section 6.8.
Prev
Home
Next
Up
PHP Manual
Prev
Next
base64_encode() returns data encoded with base64.
This encoding is designed to make binary data survive transport through transport layers that are not 8-bit clean, such as mail bodies.
Base64-encoded data takes about 33% more space than the original data.
See also: base64_decode(), chunk_split(), RFC 2045 section 6.8.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. base_convert()
Prev
Home
Next
Up
PHP Manual
Prev
Next
Given a string containing a path to a file, this function will return the base name of the file.
On Windows, both slash (/) and backslash (\) are used as path separator character.
In other environments, it is the forward slash (/).
Example 1. basename() example
Note:
See also: dirname()
Prev
Home
Next
Filesystem functions
Up
PHP Manual
Prev
Next
Adds the left_operand to the right_operand and returns the sum in a string.
The optional scale parameter is used to set the number of digits after the decimal place in the result.
See also bcsub().
Prev
Home
Next
BCMath Arbitrary Precision Mathematics Functions
Up
PHP Manual
Prev
Next
Compares the left_operand to the right_operand and returns the result as an integer.
The optional scale The optional scale parameter is used to set the number of digits after the decimal place which will be used in the comparison.
The return value is 0 if the two operands are equal.
If the left_operand is larger than the right_operand the return value is +1 and if the left_operand is less than the right_operand the return value is -1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Divides the left_operand by the right_operand and returns the result.
The optional scale sets the number of digits after the decimal place in the result.
See also bcmul().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Get the modulus of the left_operand using modulus.
See also bcdiv().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Multiply the left_operand by the right_operand and returns the result.
The optional scale sets the number of digits after the decimal place in the result.
See also bcdiv().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Raise x to the power y.
The optional scale can be used to set the number of digits after the decimal place in the result.
See also bcpowmod(), and bcsqrt().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function sets the default scale parameter for all subsequent bc math functions that do not explicitly specify a scale parameter.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Return the square root of the operand.
The optional scale parameter sets the number of digits after the decimal place in the result.
See also bcpow().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Subtracts the right_operand from the left_operand and returns the result in a string.
The optional scale parameter is used to set the number of digits after the decimal place in the result.
See also bcadd().
Prev
Home
Next
Up
Bzip2 Compression Functions
PHP Manual
Prev
Next
Returns an ASCII string containing the hexadecimal representation of str.
The conversion is done byte-wise with the high-nibble first.
See also pack() and unpack().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Gettext
Up
PHP Manual
Prev
Next
The bindtextdomain() function sets the path for a domain.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Closes the bzip2 file referenced by the pointer bz.
Returns TRUE on success or FALSE on failure.
The file pointer must be valid, and must point to a file successfully opened by bzopen().
See also bzopen().
Prev
Home
Next
Bzip2 Compression Functions
Up
PHP Manual
Prev
Next
bzcompress() compresses the source string and returns it as bzip2 encoded data.
The optional parameter blocksize specifies the blocksize used during compression and should be a number from 1 to 9 with 9 giving the best compression, but using more resources to do so. blocksize defaults to 4.
The optional parameter workfactor controls how the compression phase behaves when presented with worst case, highly repetitive, input data.
The value can be between 0 and 250 with 0 being a special case and 30 being the default value.
Regardless of the workfactor, the generated output is the same.
Example 1. bzcompress() Example
?php $str = "sample data"; $bzstr = bzcompress($str, 9); print ($bzstr);?
See also bzdecompress().
Prev
Home
Next
Up
PHP Manual
Prev
Next
bzdecompress() decompresses the source string containing bzip2 encoded data and returns it.
If the optional parameter small is TRUE, an alternative decompression algorithm will be used which uses less memory (the maximum memory requirement drops to around 2300K) but works at roughly half the speed.
See the bzip2 documentation for more information about this feature.
Example 1. bzdecompress()
?php $start_str = "This is not an honest face ?"; $bzstr = bzcompress($start_str); print ("Compressed String:"); print ($bzstr); print ("\n br \n "); $str = bzdecompress($bzstr); print ("Decompressed String:"); print ($str); print ("\n br \n ");?
See also bzcompress().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the error number of any bzip2 error returned by the file pointer bz.
See also bzerror() and bzerrstr().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the error number and error string, in an associative array, of any bzip2 error returned by the file pointer bz.
Example 1. bzerror() Example
See also bzerrno() and bzerrstr().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the error string of any bzip2 error returned by the file pointer bz.
See also bzerrno() and bzerror().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Forces a write of all buffered bzip2 data for the file pointer bz.
Returns TRUE on success or FALSE on failure.
See also bzread() and bzwrite().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Opens a bzip2 (.bz2) file for reading or writing. filename is the name of the file to open. mode is similar to the fopen() function (`r 'for read, `w' for write, etc.).
If the open fails, the function returns FALSE, otherwise it returns a pointer to the newly opened file.
Example 1. bzopen() Example
?php $bz = bzopen( "/ tmp / foo.bz2", "r"); $decompressed_file = bzread($bz, filesize(" / tmp / foo.bz2")); bzclose($bz); print ("The contents of / tmp / foo.bz2 are:"); print ("\n br \n "); print ($decompressed_file);?
See also bzclose().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Reading stops when length Reading stops when length (uncompressed) bytes have been read or EOF is reached, whichever comes first.
If the optional parameter length is not specified, bzread() will read 1024 (uncompressed) bytes at a time.
Example 1. bzread() Example
See also bzwrite() and bzopen().
Prev
Home
Next
Up
PHP Manual
Prev
Next
bzwrite() writes the contents of the string data to the bzip2 file stream pointed to by bz.
If the optional length argument is given, writing will stop after length (uncompressed) bytes have been written or the end of string is reached, whichever comes first.
Example 1. bzwrite() Example
?php $str = "uncompressed data"; $bz = bzopen(" / tmp / foo.bz2", "w"); bzwrite($bz, $str, strlen($str)); bzclose($bz);?
See also bzread() and bzopen().
Prev
Home
Next
Up
Calendar functions
PHP Manual
Prev
Next
Prev
Home
Next
Calendar functions
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Function Handling functions
Up
PHP Manual
Prev
Next
Call a user defined function given by the function parameter.
Take the following:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
Note:
Prev
Home
Next
Class / Object Functions
Up
PHP Manual
Prev
Next
Calls the method referred by method_name from the user defined obj object.
See also call_user_func_array(), call_user_func(), and call_user_method_array().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
CCVS API Functions
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
COM support functions for Windows
PHP Manual
Prev
Next
Example 1. ceil() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Changes PHP 's current directory to directory.
See also getcwd().
Prev
Home
Next
Directory functions
Up
PHP Manual
Prev
Next
Returns TRUE if the date given is valid; otherwise returns FALSE.
Checks the validity of the date formed by the arguments.
A date is considered valid if:
year is between 1 and 32767 inclusive
month is between 1 and 12 inclusive
Day is within the allowed number of days for the given month.
Leap year s are taken into consideration.
See also mktime() and strtotime().
Prev
Home
Next
Date and Time functions
Up
PHP Manual
Prev
Next
Searches DNS for records of type type corresponding to host.
Returns TRUE if any records are found; returns FALSE if no records were found or if an error occurred.
type may be any one of:
A, MX, NS, SOA, PTR, CNAME, AAAA, or ANY.
The default is MX.
Note:
AAAA type added with PHP 4.3.0
This function is not implemented on Windows platforms.
See also getmxrr(), gethostbyaddr(), gethostbyname(), gethostbynamel(), and the named(8) manual page.
Prev
Home
Next
Network Functions
Up
PHP Manual
Prev
Next
Attempts to change the group of the file filename to group (specified by name or number).
Only the superuser may change the group of a file arbitrarily; other users may change the group of a file to any group of which that user is a member.
Returns TRUE on success or FALSE on failure.
See also chown() and chmod().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note that mode is not automatically assumed to be an octal value, so strings (such as "g+w") will not work properly.
chmod ("/ somedir / somefile", 755); / / decimal; probably incorrect chmod (" / somedir / somefile", "u+rwx,go+rx"); / / string; incorrect chmod (" / somedir / somefile", 0755); / / octal; correct value of mode
One component can be computed by adding up the needed permissions for that target user base.
Add up these numbers to specify needed rights.
/ / Read and write for owner, nothing for everybody else chmod ("/ somedir / somefile", 0600); / / Read and write for owner, read for everybody else chmod (" / somedir / somefile", 0644); / / Everything for owner, read and execute for others chmod (" / somedir / somefile", 0755); / / Everything for owner, read and execute for owner's group chmod (" / somedir / somefile", 0750);
The current user is the user under which PHP runs.
It is probably not the same user you use for normal shell or FTP access.
See also chown() and chgrp().
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function is an alias of rtrim().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Attempts to change the owner of the file filename to user user (specified by name or number).
Only the superuser may change the owner of a file.
Returns TRUE on success or FALSE on failure.
See also chmod().
Prev
Home
Next
Up
PHP Manual
Prev
Next
$str .= chr( 27); / * add an escape character at the end of $str * / / * Often this is more useful * / $str = sprintf("The string ends in escape: %c", 27);
You can find an ASCII-table over here: http: / /www.asciitable.com.
See also sprintf() with a format string of %c.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure..
Note:
Note:
This function is not implemented on Windows platforms.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Can be used to split a string into smaller chunks which is useful for e.g. converting base64_encode output to match RFC 2045 semantics.
It inserts end (defaults to "\r\n") every chunklen characters (defaults to 76).
It returns the new string leaving the original string untouched.
Example 1. chunk_split() example
# format $data using RFC 2045 semantics $new_string = chunk_split( base64_encode($data));
See also explode(), split() wordwrap() and RFC 2045.
Prev
Home
Next
Up
PHP Manual
Prev
Next
See also get_declared_classes().
Prev
Home
Next
Up
PHP Manual
Prev
Next
However, in certain cases, you may want to clear the cached information.
In these cases, you can use the clearstatcache() function to clear the information that PHP caches about a file.
This function caches information about specific filenames, so you only need to call clearstatcache() if you are performing multiple operations on the same filename and require the information about that particular file to not be cached.
Affected functions include stat(), lstat(), file_exists(), is_writable(), is_readable(), is_executable(), is_file(), is_dir(), is_link(), filectime(), fileatime(), filemtime(), fileinode(), filegroup(), fileowner(), filesize(), filetype(), and fileperms().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Closes the directory stream indicated by dir_handle.
The stream must have previously been opened by opendir().
Prev
Home
Next
Up
PHP Manual
Prev
Next
closelog() closes the descriptor being used to write to the system logger.
The use of closelog() is optional.
See also define_syslog_variables(), syslog() and openlog().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the value of the property of the COM component referenced by com_object.
Returns FALSE on error.
Prev
Home
Next
Up
PHP Manual
Prev
Next
com_invoke() invokes a method of the COM component referenced by com_object.
Returns FALSE on error, returns the function_name 's return value on success.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns FALSE on failure.
Possible values for codepage are CP_ACP, CP_MACCP, CP_OEMCP, CP_SYMBOL, CP_THREAD_ACP, CP_UTF7 and CP_UTF8.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
compact() takes a variable number of parameters.
Each parameter can be either a string containing the name of the variable, or an array of variable names.
The array can contain other arrays of variable names inside it; compact() handles it recursively.
For each of these, compact() For each of these, compact() looks for a variable with that name in the current symbol table and adds it to the output array such that the variable name becomes the key and the contents of the variable become the value for that key.
In short, it does the opposite of extract().
It returns the output array with all the variables added to it.
Any strings that are not set will simply be skipped.
Example 1. compact() example
After this, $result will be:
See also extract().
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function is an alias for com_get().
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function is an alias for com_set().
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function is an alias for com_set().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Sets the value of the property of the COM component referenced by com_object.
Returns the newly set value if succeeded, FALSE on error.
Prev
Home
Next
Up
Class / Object Functions
PHP Manual
Prev
Next
Returns TRUE if client disconnected.
See the Connection Handling description in the Features chapter for a complete explanation.
Prev
Home
Next
Miscellaneous functions
Up
PHP Manual
Prev
Next
Returns the connection status bitfield.
See the Connection Handling description in the Features chapter for a complete explanation.
Prev
Home
Next
Up
PHP Manual
Prev
Next
See the Connection Handling description in the Features chapter for a complete explanation.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. constant() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function returns the given string converted from one Cyrillic character set to another.
The from and to arguments are single characters that represent the source and target Cyrillic character sets.
The supported types are:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. copy() example
Note:
As of PHP 4.3.0, both source and dest may be URLs if the "fopen wrappers" have been enabled.
See fopen() for more details.
See also move_uploaded_file(), rename(), and the section of the manual about handling file uploads.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Counts the number of occurrences of every byte-value (0..255) in string and returns it in various ways.
The optional parameter Mode default to 0.
Depending on mode count_chars() returns one of the following:
0 - an array with the byte-value as key and the frequency of every byte as value.
1 - same as 0 but only byte-values with a frequency greater than zero are listed.
2 - same as 0 but only byte-values with a frequency equal to zero are listed.
3 - a string containing all used byte-values is returned.
See also strpos() and substr_count().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the number of elements in var, which is typically an array (since anything else will have one element).
If var is not an array, 1 will be returned (exception: count (NULL) equals 0).
Warning
Use isset() to test if a variable is set.
Please see the Arrays section of the manual for a detailed explanation of how arrays are implemented and used in PHP.
Example 1. count() example
Note:
See also is_array(), isset(), and strlen().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Note:
Prev
Home
Next
Up
CURL, Client URL Library Functions
PHP Manual
Prev
Next
Note:
Example 1.
?php $checksum = crc32( "The quick brown fox jumped over the lazy dog ."); printf("%u\n", $checksum);?
Prev
Home
Next
Up
PHP Manual
Prev
Next
Usually the args will be passed as a single quote delimited string, and this is also recommended for the code.
The reason for using single quoted strings, is to protect the variable names from parsing, otherwise, if you use double quotes there will be a need to escape the variable names, e.g. \$avar.
You can use this function, to (for example) create a function from information gathered at run time:
Example 1.
Creating an anonymous function with create_function()
$newfunc = create_function( '$a,$b' ,'return "ln($a) + ln($b) = ".log($a * $b) ;'); echo "New anonymous function: $newfunc\n"; echo $newfunc(2,M_E) ."\n"; / / outputs / / New anonymous function: lambda_1 / / ln(2) + ln(2.718281828459) = 1.6931471805599
Example 2.
Making a general processing function with create_function()
function process( $var1, $var2, $farr) {for ($f=0; $f count($farr); $f++) echo $farr[$f]($var1,$var2) ."\n";} / / create a bunch of math functions $f1 = 'if ($a =0) {return "b*a^2 = ".$b*sqrt($a);} else {return false ;}'; $f2 = "return \"min(b^2+a, a^2,b) = \".min(\$a*\$a+\$b,\$b*\$b+\$a) ;"; $f3 = 'if ($a 0 $b != 0) {return "ln(a) / b = ".log($a) / $b;} else {return false; }'; $farr = array (create_function('$x,$y', 'return "some trig: ".(sin($x) + $x*cos($y)) ;'), create_function('$x,$y', 'return "a hypotenuse: ".sqrt($x*$x + $y*$y) ;'), create_function('$a,$b', $f1), create_function('$a,$b', $f2), create_function('$a,$b', $f3)); echo "\nUsing the first array of anonymous functions\n"; echo "parameters:
Example 3.
Using anonymous functions as callback functions
Prev
Home
Next
Up
PHP Manual
Prev
Next
crypt() will return an encrypted string using the standard Unix DES -based encryption algorithm or alternative algorithms that may be available on the system.
Arguments are a string to be encrypted and an optional salt string to base the encryption on.
See the Unix man page for your crypt function for more information.
If the salt argument is not provided, one will be randomly generated by PHP.
Some operating systems support more than one type of encryption.
In fact, sometimes the standard DES-based encryption is replaced by an MD5-based encryption algorithm.
The encryption type is triggered by the salt argument.
At install time, PHP determines the capabilities of the crypt function and will accept salts for other encryption types.
If no salt is provided, PHP will auto-generate a standard two character salt by default, unless the default encryption type on the system is MD5, in which case a random MD5-compatible salt is generated.
PHP sets a constant named CRYPT_SALT_LENGTH which tells you whether a regular two character salt applies to your system or the longer twelve character salt is applicable.
If you are using the supplied salt, you should be aware that the salt is generated once.
If you are calling this function recursively, this may impact both appearance and security.
The standard DES-based encryption crypt() returns the salt as the first two characters of the output.
It also only uses the first eight characters of str, so longer strings that start with the same eight characters will generate the same result (when the same salt is used).
On systems where the crypt() function supports multiple encryption types, the following constants are set to 0 or 1 depending on whether the given type is available:
CRYPT_STD_DES - Standard DES-based encryption with a two character salt
CRYPT_EXT_DES - Extended DES-based encryption with a nine character salt
CRYPT_MD5 - MD5 encryption with a twelve character salt starting with $1$
CRYPT_BLOWFISH - Blowfish encryption with a sixteen character salt starting with $2$
Note:
There is no decrypt function, since crypt() uses a one-way algorithm.
Example 1. crypt() examples
?php $password = crypt( "My1sTpassword"); # let salt be generated # You should pass the entire results of crypt() as the salt for comparing a # password, to avoid problems when different hashing algorithms are used. (As # it says above, standard DES-based password hashing uses a 2-character salt, # but MD5-based hashing uses 12.) if (crypt($user_input,$password) == $password) {echo "Password verified !";}?
See also md5() and the Mcrypt extension.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function closes a CURL session and frees all resources.
The CURL handle, ch, is also deleted.
Prev
Home
Next
CURL, Client URL Library Functions
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Its purpose is simply to execute the predefined CURL session (given by the ch).
As with anything that outputs its result directly to the browser, you can use the output-control functions to capture the output of this function, and save it in a string (for example).
Prev
Home
Next
Up
PHP Manual
Prev
Next
"CURLINFO_CONTENT_LENGTH_DOWNLOAD" - content-length of download, read from Content-Length: field
If called without the optional parameter opt an assoctive array is returned with the following array elements which correspond to opt options:
Prev
Home
Next
Up
PHP Manual
Prev
Next
The curl_init() will initialize a new session and return a CURL handle for use with the curl_setopt(), curl_exec(), and curl_close() functions.
If the optional url parameter is supplied then the CURLOPT_URL option will be set to the value of the parameter.
You can manually set this using the curl_setopt() function.
Example 1.
Initializing a new CURL session and fetching a webpage
?php $ch = curl_init(); curl_setopt ($ch, CURLOPT_URL, "http: / /www.example.com / "); curl_setopt ($ch, CURLOPT_HEADER, 0); curl_exec ($ch); curl_close ($ch);?
See also: curl_close(), curl_setopt()
Prev
Home
Next
Up
PHP Manual
Prev
Next
The option parameter is the option you want to set, and the value is the value of the option given by the option.
The value should be a long for the following options (specified in the option parameter):
When you are uploading a file to a remote site, this option should be used to tell PHP what the expected size of the infile will be.
Set this option to a non-zero value if you want CURL to report everything that is happening.
Set this option to a non-zero value if you want the header to be included in the output.
Set this option to a non-zero value if you don 't want PHP to display a progress meter for CURL transfers.
Note:
PHP automatically sets this option to a non-zero parameter, this should only be changed for debugging purposes.
Set this option to a non-zero value if you don 't want the body included with the output.
Set this option to a non-zero value if you want PHP to fail silently if the HTTP code returned is greater than 300.
The default behavior is to return the page normally, ignoring the code.
Set this option to a non-zero value if you want PHP to prepare for an upload.
This POST is a normal application / x-www-form-urlencoded kind, most commonly used by HTML forms.
Set this option to a non-zero value and PHP will just list the names of an FTP directory.
Set this option to a non-zero value and PHP will append to the remote file instead of overwriting it.
Set this option to a non-zero value and PHP will scan your ~. / netrc file to find your username and password for the remote site that you 're establishing a connection with.
Set this option to a non-zero value to follow any "Location:" header that the server sends as a part of the HTTP header (note this is recursive, PHP will follow as many "Location: "headers that it is sent.)
The file to PUT must be set with the CURLOPT_INFILE and CURLOPT_INFILESIZE.
CURLOPT_TIMEOUT:
Pass a long as a parameter that contains the maximum time, in seconds, that you 'll allow the CURL functions to take.
Pass a long as a parameter that contains the transfer speed in bytes per second that the transfer should be below during CURLOPT_LOW_SPEED_TIME seconds for PHP to consider it too slow and abort.
Pass a long as a parameter that contains the time in seconds that the transfer should be below the CURLOPT_LOW_SPEED_LIMIT for PHP to consider it too slow and abort.
CURLOPT_SSLVERSION:
By default PHP will try and determine this by itself, although, in some cases you must set this manually.
Pass a long if CURL should verify the Common name of the peer certificate in the SSL handshake.
A value of 1 denotes that we should check for the existence of the common name, a value of 2 denotes that we should make sure it matches the provided hostname.
You can set this parameter to TIMECOND_IFMODSINCE or TIMECOND_ISUNMODSINCE.
Pass a long as a parameter that is the time in seconds since January 1st, 1970.
The time will be used as specified by the CURLOPT_TIMEVALUE option, or by default the TIMECOND_IFMODSINCE will be used.
Pass a non-zero value if you want CURL to directly return the transfer instead of printing it out directly.
The value parameter should be a string for the following values of the option parameter:
CURLOPT_URL:
You can also set this option when initializing a session with the curl_init() function.
Pass a string formatted in the [username] :[password] manner, for PHP to use for the connection.
Pass a string formatted in the [username] :[password] format for connection to the HTTP proxy.
Pass the specified range you want.
The HTTP transfers also support several intervals, separated with commas as in X-Y,N-M.
Pass a string containing the full data to post in an HTTP "POST" operation.
Pass a string containing the "referer" header to be used in an HTTP request.
CURLOPT_COOKIE:
CURLOPT_SSLCERT:
CURLOPT_SSLCERTPASSWD:
CURLOPT_COOKIEFILE:
The cookie file can be in Netscape format, or just plain HTTP-style headers dumped into a file.
Pass a string to be used instead of GET or HEAD when doing an HTTP request.
Valid values are things like GET, POST, and so on; i.e. do not enter a whole HTTP request line here.
Note:
CURLOPT_PROXY:
CURLOPT_INTERFACE:
This can be an interface name, an IP address or a host name.
Pass the KRB4 (Kerberos 4) security level.
Anyone of the following strings (in order from least powerful, to most powerful): 'clear', 'safe', 'confidential', 'private '.
If you set this to NULL, this disables KRB4 security.
KRB4 security only works with FTP transactions currently.
Pass an array of HTTP header fields to set.
Pass an array of FTP commands to perform on the server prior to the FTP request.
Pass an array of FTP commands to execute on the server, after the FTP request has been performed.
The following options expect a file descriptor that is obtained by using the fopen() function:
The file where the output of your transfer should be placed, the default is STDOUT.
CURLOPT_WRITEHEADER:
The file to write errors to instead of stderr.
Prev
Home
Next
Up
PHP Manual
Prev
Next
The curl_version() function returns a string containing the current CURL version.
Prev
Home
Next
Up
Cybercash payment functions
PHP Manual
Prev
Next
Every array has an internal pointer to its "current" element, which is initialized to the first element inserted into the array.
The current() function simply returns the array element that's currently being pointed by the internal pointer.
It does not move the pointer in any way.
If the internal pointer points beyond the end of the elements list, current() returns FALSE.
Warning
If the array contains empty elements (0 or "", the empty string) then this function will return FALSE for these elements as well.
This makes it impossible to determine if you are really at the end of the list in such an array using current().
See also end(), next(), prev(), and reset().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Cybercash payment functions
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
The function returns an associative array with the elements "errcode" and, if "errcode "is FALSE, "outbuff" (string), "outLth "(long) and "macbuff" (string).
Prev
Home
Next
Up
PHP Manual
Prev
Next
The function returns an associative array with the elements "errcode" and, if "errcode "is FALSE, "outbuff" (string), "outLth "(long) and "macbuff" (string).
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
In otherwords, timestamp is optional and defaults to the value of time().
Note:
On windows this range is limited from 01-01-1970 to 19-01-2038.
To generate a timestamp from a string representation of the date, you may be able to use strtotime().
Table 1.
format character
Example returned values
Lowercase Ante meridiem and Post meridiem
A
AM or PM
000 through 999
01 to 31
Mon through Sun
January through December
1 through 12
0 through 23
12-hour format of an hour with leading zeros
H
00 through 23
00 to 59
Whether or not the date is in daylights savings time
j
1 to 31
A full textual representation of the day of the week
L
1 if it is a leap year, 0 otherwise.
Numeric representation of a month, with leading zeros
M
Jan through Dec
1 through 12
Example: +0200
Thu, 21 Dec 2000 16:01:07 +0200
00 through 59
st, nd, rd or th.
t
28 through 31
Timezone setting of this machine
EST, MDT...
See also time()
Numeric representation of the day of the week
W
Example:
Examples:
Examples:
0 through 366
Timezone offset in seconds.
-43200 through 43200
The Z format will always return 0 when using gmdate().
?php / / Prints something like:
Wednesday 15th of January 2003 05:51:38 AM echo date ("l dS of F Y h:i:s A"); / / Prints:
You can prevent a recognized character in the format string from being expanded by escaping it with a preceding backslash.
Example 2.
?php / / prints something like:
It is possible to use date() and mktime() together to find dates in the future or the past.
?php $tomorrow = mktime (0,0,0,date("m") ,date("d")+1,date("Y")); $lastmonth = mktime (0,0,0,date("m")-1,date("d"), date("Y")); $nextyear = mktime (0,0,0,date("m"), date("d"), date("Y")+1);?
Some examples of date() Some examples of date() formatting.
When escaping, be sure to use single quotes to prevent characters like \n from becoming newlines.
Example 4. date() Formatting
March 10th, 2001, 5:16:18 pm $today = date( "F j, Y, g:i a"); / / March 10, 2001, 5:16 pm $today = date("m.d.y"); / / 03.10.01 $today = date("j, n, Y"); / / 10, 3, 2001 $today = date("Ymd"); / / 20010310 $today = date('h-i-s, j-m-y, it is w Day z '); / / 05-16-17, 10-03-01, 1631 1618 6 Fripm01 $today = date('\i\t \i\s \t\h\e jS \d\a\y .'); / / It is the 10th day. $today = date("D M j G:i:s T Y"); / / Sat Mar 10 15:16:08 MST 2001 $today = date('H:m:s \m \i\s\ \m\o\n\t\h'); / / 17:03:17 m is month $today = date("H:i:s"); / / 17:16:17?
To format dates in other languages, you should use the setlocale() and strftime() functions.
See also getlastmod(), gmdate(), mktime(), strftime() and time().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Table 1.
Note:
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
When safe mode is enabled, PHP checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
DBM Functions [deprecated]
PHP Manual
Prev
Next
Prev
Home
Next
Up
Date and Time functions
PHP Manual
Prev
Next
Prev
Home
Next
DBM Functions [deprecated]
Up
PHP Manual
Prev
Next
Unlocks and closes the specified database.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Deletes the value for key in the database.
Returns FALSE if the key didn 't exist in the database.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE if there is a value associated with the key.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the value associated with key.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the first key in the database.
Note that no particular order is guaranteed since the database may be built using a hash-table, which doesn 't guarantee any ordering.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Adds the value to the database with the specified key.
Returns -1 if the database was opened read-only, 0 if the insert was successful, and 1 if the specified key already exists. (To replace the value, use dbmreplace().)
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the next key after key.
By calling dbmfirstkey() followed by successive calls to dbmnextkey() it is possible to visit every key / value pair in the dbm database.
For example:
Example 1.
Visiting every key / value pair in a DBM database
Prev
Home
Next
Up
PHP Manual
Prev
Next
The first argument is the full-path filename of the DBM file to be opened and the second is the file open mode which is one of "r", "n", "c" or "w "for read-only, new (implies read-write, and most likely will truncate an already-existing database of the same name), create (implies read-write, and will not truncate an already-existing database of the same name) and read-write respectively.
Returns an identifier to be passed to the other DBM functions on success, or FALSE on failure.
If NDBM support is used, NDBM will actually create filename.dir and filename.pag files.
GDBM only uses one file, as does the internal flat-file support, and Berkeley DB creates a filename.db file.
PHP does not delete the .lck files it creates.
It uses these files simply as fixed inodes on which to do the file locking.
Note:
When safe mode is enabled, PHP checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Replaces the value for the specified key in the database.
This will also add the key to the database if it didn 't already exist.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Example 1. dbx_close() example
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. dbx_compare() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. dbx_connect() example
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. dbx_error() example
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. dbx_escape_string() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Example 2. lists each field 's name and type
Example 3. outputs the content of data property into HTML table
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Note:
Example 1. dbx_sort() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function allows you to override the current domain for a single message lookup.
It also allows you to specify a category.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 1.
Example 1. debug_backtrace() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function is only available in PHP 3.
For more information see the appendix on Debugging PHP.
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function is only available in PHP 3.
For more information see the appendix on Debugging PHP.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE if the named constant given by name has been defined, FALSE otherwise.
Example 1.
Checking Constants
?php if (defined("CONSTANT")) {/ / Note that it should be quoted echo CONSTANT; / /}?
See also define(), constant(), get_defined_constants() and the section on Constants.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Defines a named constant.
See the section on constants for more details.
The name of the constant is given by name; the value is given by value.
The optional third parameter case_insensitive is also available.
If the value TRUE is given, then the constant will be defined case-insensitive.
The default behaviour is case-sensitive; i.e.
CONSTANT and Constant represent different values.
Example 1.
Defining Constants
?php define ("CONSTANT", "Hello world ."); echo CONSTANT; / / outputs "Hello world. "echo Constant; / / outputs "Constant" and issues a notice. define ("GREETING", "Hello you .",TRUE); echo GREETING; / / outputs "Hello you. "echo Greeting; / / outputs "Hello you."?
Returns TRUE on success or FALSE on failure.
See also defined(), constant() and the section on Constants.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Initializes all constants used in the syslog functions.
See also openlog(), syslog() and closelog().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
This is a dummy manual entry to satisfy those people who are looking for unlink() or unset() in the wrong place.
See also: unlink() to delete files, unset() to delete variables.
Prev
Home
Next
Up
PHP Manual
Prev
Next
The dgettext() function allows you to override the current domain for a single message lookup.
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function is an alias of exit().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
Directory functions
PHP Manual
Prev
Next
Given a string containing a path to a file, this function will return the name of the directory.
In other environments, it is the forward slash (/).
$path = "/ etc / passwd"; $file = dirname ($path); / / $file is set to" / etc "
In PHP 4.0.3, dirname() was fixed to be POSIX-compliant.
Essentially, this means that if there are no slashes in path, a dot ('.') is returned, indicating the current directory.
Note that this means that you will often get a slash or a dot back from dirname() in situations where the older functionality would have given you the empty string.
See also: basename(), pathinfo(), and realpath().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. disk_free_space() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
This is a deprecated alias of disk_free_space().
Use that function instead.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. disk_total_space() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Unix - If not explicitly set in the php.ini, the default extension directory depends on
the current internal ZEND_MODULE_API_NO (Zend internal module API number, which is basically the date on which a major module API change happened, e.g.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Table 1.
Note:
Table 2.
Note:
Example 1.
Example 2.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
DOM XML functions
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Example 1.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Example 2.
Example 3.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the current key and value pair from the array array and advances the array cursor.
This pair is returned in a four-element array, with the keys 0, 1, key, and value.
Elements 0 and key contain the key name of the array element, and 1 and value contain the data.
If the internal pointer for the array points past the end of the array contents, each() returns FALSE.
Example 1. each() examples
$bar now contains the following key / value pairs:
$bar now contains the following key / value pairs:
each() is typically used in conjunction with list() to traverse an array; for instance, $_POST:
Example 2.
Traversing $_POST with each()
echo "Values submitted via POST method: br / \n"; reset ($_POST); while (list ($key, $val) = each ($_POST)) {echo "$key = $val br / \n";}
You have to use reset() if you want to traverse the array again using each.
See also key(), list(), current(), reset(), next(), prev(), and foreach.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the UNIX timestamp corresponding to midnight on Easter of the given year.
Since PHP 4.3.0, the year parameter is optional and defaults to the current year according to the localtime if ommited.
This function will generate a warning if the year is outside of the range for UNIX timestamps (i.e. before 1970 or after 2037).
Example 1. easter_date() example
The date of Easter Day was defined by the Council of Nicaea in AD325 as the Sunday after the first full moon which falls on or after the Spring Equinox.
The Equinox is assumed to always fall on 21st March, so the calculation reduces to determining the date of the full moon and the date of the following Sunday.
The algorithm used here was introduced around the year 532 by Dionysius Exiguus.
Under the Julian Calendar (for years before 1753) a simple 19-year cycle is used to track the phases of the Moon.
Under the Gregorian Calendar (for years after 1753 - devised by Clavius and Lilius, and introduced by Pope Gregory XIII in October 1582, and into Britain and its then colonies in September 1752) two correction factors are added to make the cycle more accurate.
(The code is based on a C program by Simon Kershaw, webmaster@ely.anglican.org)
See easter_days() for calculating Easter before 1970 or after 2037.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the number of days after March 21 on which Easter falls for a given year.
If no year is specified, the current year is assumed.
The method parameter was also introduced in PHP 4.3.0 and allows to calculate easter dates based on the Gregorian calendar during the years 1582 - 1752 when set to CAL_EASTER_ROMAN.
See the calendar constants for more valid constants.
March 23 * /
The date of Easter Day was defined by the Council of Nicaea in AD325 as the Sunday after the first full moon which falls on or after the Spring Equinox.
The Equinox is assumed to always fall on 21st March, so the calculation reduces to determining the date of the full moon and the date of the following Sunday.
The algorithm used here was introduced around the year 532 by Dionysius Exiguus.
Under the Julian Calendar (for years before 1753) a simple 19-year cycle is used to track the phases of the Moon.
Under the Gregorian Calendar (for years after 1753 - devised by Clavius and Lilius, and introduced by Pope Gregory XIII in October 1582, and into Britain and its then colonies in September 1752) two correction factors are added to make the cycle more accurate.
(The code is based on a C program by Simon Kershaw, webmaster@ely.anglican.org)
See also easter_date().
Prev
Home
Next
Up
PHP Manual
Prev
Next
ebcdic2ascii() is an Apache-specific function which is available only on EBCDIC based operating systems (OS / 390, BS2000).
It translates the EBCDIC encoded string ebcdic_str to its equivalent ASCII representation (binary safe), and returns the result.
See also the reverse function ascii2ebcdic()
Prev
Home
Next
Up
PHP Manual
Prev
Next
Outputs all parameters.
echo() is not actually a function (it is a language construct) so you are not required to use parentheses with it.
In fact, if you want to pass more than one parameter to echo, you must not enclose the parameters within parentheses.
It is not possible to use echo() in a variable function context.
Example 1. echo() examples
?php echo "Hello World"; echo "This spans multiple lines.
The newlines will be output as well"; echo "This spans\nmultiple lines.
The newlines will be\noutput as well ."; echo "Escaping characters is done \"Like this\" ."; / /You can use variables inside of an echo statement $foo = "foobar"; $bar = "barbaz"; echo "foo is $foo"; / / foo is foobar / / Using single quotes will print the variable name, not the value echo'foo is $foo'; / / foo is $foo / / If you are not using any other characters, you can just echo variables echo $foo; / / foobar echo $foo,$bar; / / foobarbarbaz echo END This uses the "here document "syntax to output multiple lines with $variable interpolation.
Note that the here document terminator must appear on a line with just a semicolon no extra whitespace!
END; / / Because echo is not a function, following code is invalid. ($some_var)? echo('true'): echo('false'); / / However, the following examples will work: ($some_var)? print('true'): print('false'); / / print is a function echo $some_var? 'true': 'false'; / / changing the statement around?
echo() also has a shortcut syntax, where you can immediately follow the opening tag with an equals sign.
I have ?=$foo? foo.
Note:
This short syntax only works with the short_open_tag configuration setting enabled.
See also print(), printf(), and flush().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
See also current(), each(), next(), and reset().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Example 1. ereg() Example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. eregi() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. ereg_replace() Example
Example 2. ereg_replace() Example
Example 3.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 1. error_log() log types
Warning
Example 1. error_log() examples
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. error_reporting() examples
Table 1. error_reporting() level constants and bit values
Prev
Home
Next
Up
PHP Manual
Prev
Next
escapeshellarg() adds single quotes around a string and quotes / escapes any existing single quotes allowing you to pass a string directly to a shell function and having it be treated as a single safe argument.
This function should be used to escape individual arguments to shell functions coming from user input.
The shell functions include exec(), system() and the backtick operator.
A standard use would be:
system( "ls ".escapeshellarg($dir));
See also exec(), popen(), system(), and the backtick operator.
Prev
Home
Next
Program Execution functions
Up
PHP Manual
Prev
Next
escapeshellcmd() escapes any characters in a string that might be used to trick a shell command into executing arbitrary commands.
This function should be used to make sure that any data coming from user input is escaped before this data is passed to the exec() or system() functions, or to the backtick operator.
A standard use would be:
$e = escapeshellcmd( $userinput); system("echo $e"); / / here we don't care if $e has spaces $f = escapeshellcmd($filename); system("touch \" / tmp / $f\"; ls -l \" / tmp / $f\""); / / and here we do, so we use quotes
See also escapeshellarg(), exec(), popen(), system(), and the backtick operator.
Prev
Home
Next
Up
PHP Manual
Prev
Next
eval() evaluates the string given in code_str as PHP code.
Among other things, this can be useful for storing code in a database text field for later execution.
There are some factors to keep in mind when using eval().
Remember that the string passed must be valid PHP code, including things like terminating statements with a semicolon so the parser doesn' t die on the line after the eval(), and properly escaping things in code_str.
Also remember that variables given values under eval() will retain these values in the main script afterwards.
A return statement will terminate the evaluation of the string immediately.
In PHP 4, eval() returns NULL unless return() is called in the evaluated code, in which case the value passed to return() In PHP 4, eval() returns NULL unless return() is called in the evaluated code, in which case the value passed to return() is returned.
Example 1. eval() example - simple text merge
This is a cup with my coffee in it.
Prev
Home
Next
Up
PHP Manual
Prev
Next
exec() executes the given command, however it does not output anything.
It simply returns the last line from the result of the command.
If you need to execute a command and have all the data from the command passed directly back without any interference, use the passthru() function.
If the array argument is present, then the specified array will be filled with every line of output from the command.
Line endings, such as \n, are not included in this array.
Note that if the array already contains some elements, exec() will append to the end of the array.
If you do not want the function to append elements, call unset() on the array before passing it to exec().
If the return_var argument is present along with the array argument, then the return status of the executed command will be written to this variable.
Warning
If you are going to allow data coming from user input to be passed to this function, then you should be using escapeshellarg() or escapeshellcmd() to make sure that users cannot trick the system into executing arbitrary commands.
Note:
If you start a program using this function and want to leave it running in the background, you have to make sure that the output of that program is redirected to a file or some other output stream or else PHP will hang until the execution of the program ends.
See also system(), passthru(), popen(), escapeshellcmd(), and the backtick operator.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Example 1. exif_read_data() example
Note:
Note:
Note:
Note:
Also the size of an embedded thumbnail is returned in THUMBNAIL subarray and the function exif_read_data() can return thumbnails in TIFF Also the size of an embedded thumbnail is returned in THUMBNAIL subarray and the function exif_read_data() can return thumbnails in TIFF format.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. exif_thumbnail() example
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Exit statuses should be in the range 1 to 254, the exit status 255 is reserved by PHP and shall not be used.
The current CVS version does NOT print the status if it is an integer.
?php $filename = '/ path / to / data-file'; $file = fopen ($filename, 'r') or exit("unable to open file ($filename)");?
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns an array of strings, each of which is a substring of string formed by splitting it on boundaries formed by the string separator.
If limit is set, the returned array will contain a maximum of limit elements with the last element containing the rest of string.
If separator is an empty string (""), explode() will return FALSE.
If separator contains a value that is not contained in string, then explode() will return an array containing string.
The limit parameter was added in PHP 4.0.1
Example 1. explode() examples
$pizza = "piece1 piece2 piece3 piece4 piece5 piece6"; $pieces = explode(" ", $pizza); $data = "foo:*:1023:1000:: / home / foo: / bin / sh"; list($user,$pass,$uid,$gid,$gecos,$home,$shell) = explode(" :",$data);
Note:
Although implode() can for historical reasons accept its parameters in either order, explode() cannot.
You must ensure that the separator argument comes before the string argument.
See also preg_split(), spliti(), split(), and implode().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
if (!extension_loaded('gd')) {if (!dl('gd.so')) {exit;}}
$php -m [PHP Modules] xml tokenizer standard sockets session posix pcre overload mysql mbstring ctype [Zend Modules]
Most internal extension names are written in lower case but there may be extension available which also use uppercase letters.
Be warned that this function compares case sensitive!
See also get_loaded_extensions(), get_extension_funcs(), phpinfo() and dl().
Prev
Home
Next
Up
PHP Manual
Prev
Next
It takes an associative array var_array and treats keys as variable names and values as variable values.
Note:
Note:
EXTR_IF_EXISTS and EXTR_PREFIX_IF_EXISTS was introduced in version 4.2.0.
EXTR_REFS was introduced in version 4.3.0.
It also checks for collisions with existing variables in the symbol table.
It can be one of the following values:
If there is a collision, overwrite the existing variable.
If there is a collision, don 't overwrite the existing variable.
If there is a collision, prefix the variable name with prefix.
Beginning with PHP 4.0.5, this includes numeric variables as well.
This flag was added in PHP 4.0.5.
Only overwrite the variable if it already exists in the current symbol table, otherwise do nothing.
This flag was added in PHP 4.2.0.
Only create prefixed variable names if the non-prefixed version of the same variable exists in the current symbol table.
Extracts variables as references.
You can use this flag on its own or combine it with any other flag by OR 'ing the extract_type.
If extract_type is not specified, it is assumed to be EXTR_OVERWRITE.
Note that prefix is only required if extract_type is EXTR_PREFIX_SAME, EXTR_PREFIX_ALL, EXTR_PREFIX_INVALID or EXTR_PREFIX_IF_EXISTS.
extract() returns the number of variables successfully imported into the symbol table.
A possible use for extract() is to import into the symbol table variables contained in an associative array returned by wddx_deserialize().
?php / * Suppose that $var_array is an array returned from wddx_deserialize * / $size = "large"; $var_array = array ("color" = "blue", "size "= "medium", "shape" = "sphere"); extract ($var_array, EXTR_PREFIX_SAME, "wddx"); print "$color, $size, $shape, $wddx_size\n";?
The above example will produce:
The $size wasn 't overwritten, because we specified EXTR_PREFIX_SAME, which resulted in $wddx_size being created.
If EXTR_SKIP was specified, then $wddx_size wouldn 't even have been created.
EXTR_OVERWRITE would have caused $size to have value "medium", and EXTR_PREFIX_ALL would result in new variables being named $wddx_color, $wddx_size, and $wddx_shape.
You must use an associative array, a numerically indexed array will not produce results unless you use EXTR_PREFIX_ALL or EXTR_PREFIX_INVALID.
See also compact().
Prev
Home
Next
Up
PHP Manual
Prev
Next
ezmlm_hash() calculates the hash value needed when keeping EZMLM mailing lists in a MySQL database.
Example 1.
Calculating the hash and subscribing a user
$user = "joecool@example.com"; $hash = ezmlm_hash ($user); $query = sprintf ("INSERT INTO sample VALUES (%s, '%s')", $hash, $user); $db - query($query); / / using PHPLIB db interface
Prev
Home
Next
Mail functions
Up
PHP Manual
Prev
Next
Note:
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. fbsql_close() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. fbsql_connect() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. fbsql_create_blob() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. fbsql_create_clob() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. fbsql_create_db() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. fbsql_create_clob() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Example 1. fbsql_data_seek() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. fbsql_fetch_array() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. fbsql_fetch_assoc() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. fbsql_fetch_field() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. fbsql_fetch_object() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. fbsql_field_name() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. fbsql_field_type() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. fbsql_list_dbs() example
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. fbsql_list_fields() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. fbsql_next_result() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. fbsql_num_rows() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Example 1. fbsql_query() example
Example 2. fbsql_query() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. fbsql_read_blob() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. fbsql_read_clob() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. fbsql_tablename() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
filePro functions
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Example 1.
?php $handle = fopen( 'somefile.txt', 'r'); fclose($handle);?
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
%FDF-1.2 %âãÏÓ 1 0 obj / FDF / JavaScript / Doc [(PlusOne)(function PlusOne\(x\)\r{\r return x+1;\r}\r)] endobj trailer / Root 1 0 R %%EOF
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
%FDF-1.2 %âãÏÓ 1 0 obj / FDF / Fields 2 0 R endobj 2 0 obj [/ T (foo) / V (bar)] endobj trailer / Root 1 0 R %%EOF
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE if the file pointer is at EOF or an error occurs; otherwise returns FALSE.
The file pointer must be valid, and must point to a file successfully opened by fopen(), popen(), or fsockopen().
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function forces a write of all buffered output to the resource pointed to by the file handle handle.
Returns TRUE if successful, FALSE otherwise.
The file pointer must be valid, and must point to a file successfully opened by fopen(), popen(), or fsockopen().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns a string containing a single character read from the file pointed to by handle.
Returns FALSE on EOF.
Note:
See also fread(), fopen(), popen(), fsockopen(), and fgets().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Similar to fgets() except that fgetcsv() parses the line it reads for fields in CSV format and returns an array containing the fields read.
The optional enclosure cannot be null, and is limited to one character.
Note:
The handle parameter must be a valid file pointer to a file successfully opened by fopen(), popen(), or fsockopen().
The length parameter must be greater than the longest line to be found in the CSV file (allowing for trailing line-end characters).
fgetcsv() returns FALSE on error, including end of file.
A blank line in a CSV file will be returned as an array comprising a single null field, and will not be treated as an error.
Read and print the entire contents of a CSV file
See also explode(), file(), and pack()
Prev
Home
Next
Up
PHP Manual
Prev
Next
If no length is specified, the length defaults to 1k, or 1024 bytes.
People used to the 'C' semantics of fgets() should note the difference in how EOF is returned.
A simple example follows:
$handle = fopen ("/ tmp / inputfile.txt", "r"); while (!feof ($handle)) {$buffer = fgets($handle, 4096); echo $buffer;} fclose ($handle);
As of PHP 4.3, omitting length will keep reading from the stream until it reaches the end of the line.
Note:
Earlier versions were not binary safe.
If you are having problems with PHP not recognizing the line endings when reading files either on or created by a Macintosh computer, you might want to enable the auto_detect_line_endings run-time configuration option.
See also fread(), fopen(), popen(), fgetc(), fsockopen(), and socket_set_timeout().
Prev
Home
Next
Up
PHP Manual
Prev
Next
You can use the optional third parameter to specify tags which should not be stripped.
If you are having problems with PHP not recognizing the line endings when reading files either on or created by a Macintosh computer, you might want to enable the auto_detect_line_endings run-time configuration option.
See also fgets(), fopen(), fsockopen(), popen(), and strip_tags().
Prev
Home
Next
Up
PHP Manual
Prev
Next
The time is returned as a Unix timestamp.
The results of this function are cached.
See clearstatcache() for more details.
Note:
The atime of a file is supposed to change whenever the data blocks of a file are being read.
This can be costly performancewise when an application regularly accesses a very large number of files or directories.
On such filesystems this function will be useless.
This function will not work on remote files; the file to be examined must be accessible via the server's filesystem.
Prev
Home
Next
Up
PHP Manual
Prev
Next
The time is returned as a Unix timestamp.
The results of this function are cached.
See clearstatcache() for more details.
Note:
See also filemtime() (which is what you want to use when you want to create "Last Modified "footers on web pages) and fileatime().
Note also that in some Unix texts the ctime of a file is referred to as being the creation time of the file.
This is wrong.
This function will not work on remote files; the file to be examined must be accessible via the server's filesystem.
Prev
Home
Next
Up
PHP Manual
Prev
Next
The results of this function are cached.
On windows, use / /computername / share / filename or \\\\computername\share\filename to check files on network shares.
Testing whether a file exists
See also is_readable(), is_writable(), is_file() and file().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
This function is binary-safe.
You can use a URL as a filename with this function if the fopen wrappers have been enabled.
See fopen() for more details on how to specify the filename and Appendix I for a list of supported URL protocols.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the group ID of the file, or FALSE in case of an error.
The group ID is returned in numerical format, use posix_getgrgid() to resolve it to a group name.
The results of this function are cached.
See clearstatcache() for more details.
Note:
This function will not work on remote files; the file to be examined must be accessible via the server's filesystem.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Upon failure, file() returns FALSE.
Each line in the resulting array will include the line ending, so you still need to use trim() if you do not want the line ending present.
?php / / Get a file into an array.
See also file_get_contents(). $html = implode ('', file ('http: / /www.example.com / '));?
See also readfile(), fopen(), fsockopen(), popen(), file_get_contents(), and include().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the inode number of the file, or FALSE in case of an error.
The results of this function are cached.
See clearstatcache() for more details.
This function will not work on remote files; the file to be examined must be accessible via the server's filesystem.
Prev
Home
Next
Up
PHP Manual
Prev
Next
The results of this function are cached.
This function will not work on remote files; the file to be examined must be accessible via the server's filesystem.
This function returns the time when the data blocks of a file were being written to, that is, the time when the content of the file was changed.
?php / / outputs e.g. somefile.txt was last modified:
See also filectime(), stat(), touch(), and getlastmod().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the user ID of the owner of the file, or FALSE in case of an error.
The user ID is returned in numerical format, use posix_getpwuid() to resolve it to a username.
The results of this function are cached.
See clearstatcache() for more details.
This function will not work on remote files; the file to be examined must be accessible via the server's filesystem.
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function will not work on remote files; the file to be examined must be accessible via the server's filesystem.
The results of this function are cached.
See clearstatcache() for more details.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the number of fields (columns) in the opened filePro database.
See also filepro().
Prev
Home
Next
filePro functions
Up
PHP Manual
Prev
Next
Returns the name of the field corresponding to field_number.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the edit type of the field corresponding to field_number.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the width of the field corresponding to field_number.
Prev
Home
Next
Up
PHP Manual
Prev
Next
No locking is done, so you should avoid modifying your filePro database while it may be opened in PHP.
When safe mode is enabled, PHP checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.
Prev
Home
Next
Up
Filesystem functions
PHP Manual
Prev
Next
When safe mode is enabled, PHP checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.
Prev
Home
Next
Up
PHP Manual
Prev
Next
When safe mode is enabled, PHP checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.
See also filepro().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the size of the file in bytes, or FALSE in case of an error.
See clearstatcache() for more details.
This function will not work on remote files; the file to be examined must be accessible via the server's filesystem.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Possible values are fifo, char, dir, block, link, file, and unknown.
Returns FALSE if an error occurs. filetype() will also produce an E_NOTICE message if the stat call fails or if the file type is unknown.
See clearstatcache() for more details.
This function will not work on remote files; the file to be examined must be accessible via the server's filesystem.
See also: is_dir(), is_file(), is_link(), file_exists(), and stat().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
flock() operates on handle which must be an open file pointer. operation is one of the following values:
To acquire a shared lock (reader), set operation to LOCK_SH (set to 1 prior to PHP 4.0.1).
To acquire an exclusive lock (writer), set operation to LOCK_EX (set to 2 prior to PHP 4.0.1).
To release a lock (shared or exclusive), set operation to LOCK_UN (set to 3 prior to PHP 4.0.1).
If you don' t want flock() to block while locking, add LOCK_NB (4 prior to PHP 4.0.1) to operation.
flock() allows you to perform a simple reader / writer model which can be used on virtually every platform (including most Unix derivatives and even Windows).
Returns TRUE on success or FALSE on failure.
Because flock() requires a file pointer, you may have to use a special lock file to protect access to a file that you intend to truncate by opening it in write mode (with a "w "or "w+" argument to fopen()).
flock() will not work on NFS and many other networked file systems.
On some operating systems flock() is implemented at the process level.
When using a multithreaded server API like ISAPI you may not be able to rely on flock() to protect files against other PHP scripts running in parallel threads of the same server instance!
flock() is not supported on antiquated filesystems like FAT and its derivates and will therefore always return FALSE under this environments (this is especially true for Windows 98 users).
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. floor() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
This effectively tries to push all the output so far to the user 's browser.
Server modules for Apache like mod_gzip may do buffering of their own that will cause flush() to not result in data being sent immediately to the client.
Even the browser may buffer its input before displaying it.
Some versions of Microsoft Internet Explorer will only start to display the page after they have received 256 bytes of output, so you may need to send extra whitespace before flushing to get those browsers to display the page.
Prev
Home
Next
Output Control Functions
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
If filename is of the form "scheme: / /.. .", it is assumed to be a URL and PHP will search for a protocol handler (also known as a wrapper) for that scheme.
If no wrappers for that protocol are registered, PHP will emit a notice to help you track potential problems in your script and then continue as though filename specifies a regular file.
The file must be accessible to PHP, so you need to ensure that the file access permissions allow this access.
If you have enabled safe_mode, or open_basedir further restrictions may apply.
If it is switched off, PHP will emit a warning and the fopen call will fail.
The list of supported protocols can be found in Appendix I.
It may be any of the following:
'r' - Open for reading only; place the file pointer at the beginning of the file.
'r+' - Open for reading and writing; place the file pointer at the beginning of the file.
If the file does not exist, attempt to create it.
If the file does not exist, attempt to create it.
If the file does not exist, attempt to create it.
If the file does not exist, attempt to create it.
The mode may contain the letter 'b'.
Windows.
If not needed, this will be ignored.
You are encouraged to include the 'b' flag in order to make your scripts more portable.
The optional fourth zcontext is used for specifying tuning parameters and callbacks.
If the open fails, the function returns FALSE.
?php $handle = fopen ("/ home / rasmus / file.txt", "r"); $handle = fopen (" / home / rasmus / file.gif", "wb"); $handle = fopen ("http: / /www.example.com /", "r"); $handle = fopen ("ftp: / /user:password@example.com / somefile.txt", "w");?
If you are experiencing problems with reading and writing to files and you' re using the server module version of PHP, remember to make sure that the files and directories you're using are accessible to the server process.
On the Windows platform, be careful to escape any backslashes used in the path to the file, or use forward slashes.
?php $handle = fopen ("c:\\data\\info.txt", "r");?
See also Appendix I, fclose(), fgets(), fsockopen(), file(), file_exists(), is_readable(), socket_set_timeout(), and popen().
Prev
Home
Next
Up
PHP Manual
Prev
Next
If an error occurs, fpassthru() returns FALSE.
The file pointer must be valid, and must point to a file successfully opened by fopen(), popen(), or fsockopen().
The file is closed when fpassthru() is done reading it (leaving handle useless).
Note:
You are encouraged to use the b flag when dealing with binary files, even if your system does not require it, so that your scripts will be more portable.
See also readfile(), fopen(), popen(), and fsockopen()
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. sprintf(): zero-padded integers
Example 2. sprintf(): formatting currency
Prev
Home
Next
Up
PHP Manual
Prev
Next
fputs() is an alias to fwrite(), and is identical in every way.
Note that the length parameter is optional and if not specified the entire string will be written.
Prev
Home
Next
Up
PHP Manual
Prev
Next
?php / / get contents of a file into a string $filename = "/ usr / local / something.txt"; $handle = fopen ($filename, "r"); $contents = fread ($handle, filesize ($filename)); fclose ($handle);?
Windows) the file must be opened with'b 'included in fopen() mode parameter.
See also fwrite(), fopen(), fsockopen(), popen(), fgets(), fgetss(), fscanf(), file(), and fpassthru().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Converts a date from the French Republican Calendar to a Julian Day Count.
These routines only convert dates in years 1 through 14 (Gregorian dates 22 September 1792 through 22 September 1806).
This more than covers the period when the calendar was in use.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
If only two parameters were passed to this function, the values parsed will be returned as an array.
Otherwise, if optional parameters are passed, the function will return the number of assigned values.
Any whitespace in the format string matches any whitespace in the input stream.
This means that even a tab \t in the format string can match a single space character in the input stream.
Example 1. fscanf() Example
Example 2. users.txt
javier argonaut pe hiroshi sculptor jp robert slacker us luigi florist it
See also fread(), fgets(), fgetss(), sscanf(), printf(), and sprintf().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Sets the file position indicator for the file referenced by handle .The new position, measured in bytes from the beginning of the file, is obtained by adding offset to the position specified by whence, whose values are defined as follows:
SEEK_SET - Set position equal to offset bytes.
SEEK_CUR - Set position to current location plus offset.
SEEK_END - Set position to end-of-file plus offset. (To move to a position before the end-of-file, you need to pass a negative value in offset.)
If whence is not specified, it is assumed to be SEEK_SET.
Upon success, returns 0; otherwise, returns -1.
Note that seeking past EOF is not considered an error.
May not be used on file pointers returned by fopen() if they use the "http: / / "or "ftp: / /" formats.
Note:
The whence argument was added after PHP 4.0.0.
See also ftell() and rewind().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Initiates a stream connection in the Internet (AF_INET, using TCP or UDP) or Unix (AF_UNIX) domain.
For UDP connections, you need to explicitly specify the protocol by prefixing hostname with 'udp: / /'.
For the Unix domain, hostname will be used as the path to the socket, port must be set to 0 in this case.
Note:
If you need to set a timeout for reading / writing data over the socket, use socket_set_timeout(), as the timeout parameter to fsockopen() only applies while connecting the socket.
As of PHP 4.3.0, if you have compiled in OpenSSL support, you may prefix the hostname with either 'ssl: / /' or 'tls: / /' to use an SSL or TLS client connection over TCP / IP to connect to the remote host.
fsockopen() returns a file pointer which may be used together with the other file functions (such as fgets(), fgetss(), fputs(), fclose(), and feof()).
If the call fails, it will return FALSE and if the optional errno and errstr arguments are present they will be set to indicate the actual system level error that occurred in the system-level connect() call.
If the value returned in errno is 0 and the function returned FALSE, it is an indication that the error occurred before the connect() call.
This is most likely due to a problem initializing the socket.
Note that the errno and errstr arguments will always be passed by reference.
The socket will by default be opened in blocking mode.
Example 1. fsockopen() Example
Example 2.
Warning
UDP sockets will sometimes appear to have opened without an error, even if the remote host is unreachable.
The reason for this is because UDP is a "connectionless" protocol, which means that the operating system does not try to establish a link for the socket until it actually needs to send or receive data.
Note:
The timeout parameter was introduced in PHP 3.0.9 and UDP support was added in PHP 4.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Gathers the statistics of the file opened by the file pointer handle.
This function is similar to the stat() function except that it operates on an open file pointer instead of a filename.
Returns an array with the statistics of the file with the following elements:
The results of this function are cached.
See clearstatcache() for more details.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the position of the file pointer referenced by handle; i.e., its offset into the file stream.
If an error occurs, returns FALSE.
The file pointer must be valid, and must point to a file successfully opened by fopen() or popen().
See also fopen(), popen(), fseek(), and rewind().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Semaphore, Shared Memory and IPC Functions
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Table 1.
Example 1. ftp_get_option() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Example 1. ftp_nb_get() example
Example 2.
Example 3.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Example 1. ftp_nb_put() example
Example 2.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Returns TRUE on success or FALSE on failure.
Example 1. ftp_put() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Table 1.
Example 1. ftp_set_option() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
Function Handling functions
PHP Manual
Prev
Next
Takes the filepointer, handle, and truncates the file to length, size.
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the argument which is at the arg_num 'th offset into a user-defined function's argument list.
Function arguments are counted starting from zero. func_get_arg() will generate a warning if called from outside of a function definition.
If arg_num is greater than the number of arguments actually passed, a warning will be generated and func_get_arg() will return FALSE.
func_get_arg() may be used in conjunction with func_num_args() and func_get_args() to allow user-defined functions to accept variable-length argument lists.
Note:
This function was added in PHP 4.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns an array in which each element is the corresponding member of the current user-defined function' s argument list. func_get_args() will generate a warning if called from outside of a function definition.
func_get_args() may be used in conjunction with func_num_args() and func_get_arg() to allow user-defined functions to accept variable-length argument lists.
Note:
This function was added in PHP 4.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the number of arguments passed into the current user-defined function. func_num_args() will generate a warning if called from outside of a user-defined function.
func_num_args() may be used in conjunction with func_get_arg() and func_get_args() to allow user-defined functions to accept variable-length argument lists.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Checks the list of defined functions, both built-in (internal) and user-defined, for function_name.
Returns TRUE on success or FALSE on failure.
See also method_exists() and get_defined_functions().
Prev
Home
Next
Up
PHP Manual
Prev
Next
fwrite() returns the number of bytes written, or FALSE on error.
Note:
Windows) the file must be opened with'b 'included in fopen() mode parameter.
See also fread(), fopen(), fsockopen(), popen(), and fputs().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 1.
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
getallheaders() is an alias for apache_request_headers().
Please read the apache_request_headers() documentation for more information on how this function works.
In PHP 4.3.0, getallheaders() became an alias for apache_request_headers().
Essentially, it was renamed.
This is because this function only works when PHP is compiled as an Apache Module.
See also apache_request_headers().
Prev
Home
Next
Up
PHP Manual
Prev
Next
get_browser() attempts to determine the capabilities of the user's browser.
This is done by looking up the browser 's information in the browscap.ini file.
By default, the value of HTTP_USER_AGENT is used; however, you can alter this (i.e., look up another browser's info) by passing the optional user_agent parameter to get_browser().
While browscap.ini contains information on many browsers, it relies on user updates to keep the database current.
The following example shows how one might list all available information retrieved about the user 's browser.
Example 1. get_browser() example
?php echo $_SERVER[ 'HTTP_USER_AGENT']. "hr / \n"; $browser = get_browser(); foreach ($browser as $name = $value) {print" b $name / b $value br / \n";}?
Mozilla / 4.5 [en] (X11; U; Linux 2.2.9 i586) hr / b browser_name_pattern: / b Mozilla / 4\.5.* br / b parent: / b Netscape 4.0 br / b platform: / b Linux br / b majorver: / b 4 br / b minorver: / b 5 br / b browser: / b Netscape br / b version: / b 4 br / b frames: / b 1 br / b tables: / b 1 br / b cookies: / b 1 br / b backgroundsounds: / b br / b vbscript: / b br / b javascript: / b 1 br / b javaapplets: / b 1 br / b activexcontrols: / b br / b beta: / b br / b crawler: / b br / b authenticodeupdate: / b br / b msn: / b br /
In order for this to work, your browscap configuration setting in php.ini must point to the correct location of the browscap.ini file on your system. browscap.ini is not bundled with PHP but you may find an up-to-date browscap.ini file here.
Note:
The only way to test if cookies are accepted is to set one with setcookie(), reload, and check for the value.
On versions older than PHP 4.0.6, you will have to pass the user agent in via the optional user_agent parameter if the PHP directive register_globals is off.
In this case, you will pass in $HTTP_SERVER_VARS[ 'HTTP_USER_AGENT'].
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the current value of the PHP configuration variable specified by varname, or FALSE if an error occurs.
It will not return configuration information set when the PHP was compiled, or read from an Apache configuration file (using the php3_configuration_option directives).
To check whether the system is using a configuration file, try retrieving the value of the cfg_file_path configuration setting.
See also ini_get().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns FALSE if obj is not an object.
See also get_parent_class(), gettype(), and is_subclass_of().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. get_class_methods() example
See also get_class_vars() and get_object_vars().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. get_class_vars() example
100 / / As of PHP 4.2.0 var1: var2: xyz var3:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the name of the owner of the current PHP script.
See also getmyuid(), getmygid(), getmypid(), getmyinode(), and getlastmod().
Prev
Home
Next
Up
PHP Manual
Prev
Next
See also chdir().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns an associative array containing the date information of the timestamp, or the current local time if no timestamp is given, as the following array elements:
"seconds" - seconds
"minutes" - minutes
"hours" - hours
"mday" - day of the month
"wday" - day of the week, numeric: from 0 as Sunday up to 6 as Saturday
"mon" - month, numeric
"year" - year, numeric
"yday" - day of the year, numeric; i.e. "299 "
"weekday" - day of the week, textual, full; i.e. "Friday "
"month" - month, textual, full; i.e. "January "
Example 1. getdate() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Also note that depending on what libraries you have compiled into PHP, additional classes could be present.
There is a list of predefined classes in the Predefined Classes section of the appendices.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the value of the environment variable varname, or FALSE on an error.
$ip = getenv ("REMOTE_ADDR"); / / get the ip number of the user
You can see a list of all the environmental variables by using phpinfo().
You can find out what many of them mean by taking a look at the CGI specification, specifically the page on environmental variables.
Note:
See also putenv().
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function returns the names of all the functions defined in the module indicated by module_name.
For example the lines below
See also: get_loaded_extensions()
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the host name of the Internet host specified by ip_address or a string containing the unmodified ip_address on failure.
See also gethostbyname().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the IP address of the Internet host specified by hostname or a string containing the unmodified hostname on failure.
See also gethostbyaddr().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns a list of IP addresses to which the Internet host specified by hostname resolves.
See also gethostbyname(), gethostbyaddr(), checkdnsrr(), getmxrr(), and the named(8) manual page.
Prev
Home
Next
Up
PHP Manual
Prev
Next
get_html_translation_table() will return the translation table that is used internally for htmlspecialchars() and htmlentities().
There are two new defines (HTML_ENTITIES, HTML_SPECIALCHARS) that allow you to specify the table you want.
And as in the htmlspecialchars() and htmlentities() functions you can optionally specify the quote_style you are working with.
The default is ENT_COMPAT mode.
See the description of these modes in htmlspecialchars().
Example 1.
Translation Table Example
$trans = get_html_translation_table( HTML_ENTITIES); $str = "Hallo Frau Krämer"; $encoded = strtr($str, $trans);
The cool thing is using array_flip() to change the direction of the translation.
$trans = array_flip( $trans); $original = strtr($encoded, $trans);
See also htmlspecialchars(), htmlentities(), strtr(), and array_flip().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. getimagesize (file)
Example 2. getimagesize (URL)
Example 3. getimagesize() and MIME types
Example 4. getimagesize() returning IPTC
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Files that are included or required multiple times only show up once in the returned array.
?php include( "test1.php"); include_once("test2.php"); require("test3.php"); require_once("test4.php"); $included_files = get_included_files(); foreach($included_files as $filename) {echo "$filename\n";}?
Note:
The array returned by get_included_files() was an associative array and only listed files included by include() and include_once().
See also: include(), include_once(), require(), require_once(), and get_required_files().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the time of the last modification of the current page.
Returns FALSE on error.
Example 1. getlastmod() example
?php / / outputs e.g. 'Last modified:
March 04 1998 20:43:59 .' echo "Last modified: ". date ("F d Y H:i:s .", getlastmod());?
If you' re interested in getting the last modification time of a different file, consider using filemtime().
See also date(), getmyuid(), getmygid(), get_current_user(), getmyinode(), getmypid(), and filemtime().
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function returns the names of all the modules compiled and loaded in the PHP interpreter.
For example the line below
?php print_r (get_loaded_extensions());?
Array ([0] = xml [1] = wddx [2] = standard [3] = session [4] = posix [5] = pgsql [6] = pcre [7] = gd [8] = ftp [9] = db [10] = calendar [11] = bcmath)
See also get_extension_funcs(), extension_loaded(), dl() and phpinfo().
Prev
Home
Next
Up
PHP Manual
Prev
Next
So even when get_magic_quotes() returns TRUE neither double quotes, backslashes or NUL's will be escaped.
See also addslashes(), stripslashes(), get_magic_quotes_runtime(), and ini_get().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the current active configuration setting of magic_quotes_runtime (0 for off, 1 for on).
See also get_magic_quotes_gpc() and set_magic_quotes_runtime().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Example 2.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Searches DNS for MX records corresponding to hostname.
A list of the MX records found is placed into the array mxhosts.
Note:
Try the PEAR class Net_DNS.
See also checkdnsrr(), gethostbyname(), gethostbynamel(), gethostbyaddr(), and the named(8) manual page.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the current script 's inode, or FALSE on error.
See also getmygid(), getmyuid(), get_current_user(), getmypid(), and getlastmod().
Note:
This function is not implemented on Windows platforms.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the current PHP process ID, or FALSE on error.
Warning
Process IDs are not unique, thus they are a weak entropy source.
We recommend against relying on pids in security-dependent contexts.
See also getmygid(), getmyuid(), get_current_user(), getmyinode(), and getlastmod().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the user ID of the current script, or FALSE on error.
See also getmygid(), getmypid(), get_current_user(), getmyinode(), and getlastmod().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
In versions after PHP 4.2.0, the key will be assigned with a NULL value.
Example 1.
Use of get_object_vars()
Array ([x] = 1.233 [y] = 3.445 [label] =) Array ([x] = 1.233 [y] = 3.445 [label] = point #1)
See also get_class_methods() and get_class_vars()!
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
If obj is a string, returns the name of the parent class of the class with that name.
See also get_class() and is_subclass_of()
Prev
Home
Next
Up
PHP Manual
Prev
Next
getprotobyname() returns the protocol number associated with the protocol name as per / etc / protocols.
See also: getprotobynumber().
Prev
Home
Next
Up
PHP Manual
Prev
Next
getprotobynumber() returns the protocol name associated with protocol number as per / etc / protocols.
See also: getprotobyname().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
(PHP 4)
As of PHP 4.0.4, this function is an alias for get_included_files()
In PHP 4.0.1pl2 and previous versions get_required_files() assumed that the required files ended in the extension .php, other extensions would not be returned.
The array returned by get_required_files() was an associative array and only listed files included by require() and require_once().
See also: require(), require_once(), include(), include_once(), and get_included_files().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
This is an interface to getrusage( 2).
It returns an associative array containing the data returned from the system call.
If who is 1, getrusage will be called with RUSAGE_CHILDREN.
All entries are accessible by using their documented field names.
Example 1.
Getrusage Example
$dat = getrusage(); echo $dat["ru_nswap"]; # number of swaps echo $dat["ru_majflt"]; # number of page faults echo $dat["ru_utime.tv_sec"]; # user time used (seconds) echo $dat["ru_utime.tv_usec"]; # user time used (microseconds)
Prev
Home
Next
Up
PHP Manual
Prev
Next
getservbyname() returns the Internet port which corresponds to service for the specified protocol as per / etc / services. protocol is either "tcp "or "udp" (in lowercase).
See also: getservbyport().
Prev
Home
Next
Up
PHP Manual
Prev
Next
getservbyport() returns the Internet service associated with port for the specified protocol as per / etc / services. protocol is either "tcp "or "udp" (in lowercase).
See also: getservbyname().
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function returns a translated string if one is found in the translation table, or the submitted message if not found.
You may use the underscore character '_' as an alias to this function.
Example 1. gettext() -check
?php / / Set language to German setlocale( LC_ALL, 'de'); / / Specify location of translation tables bindtextdomain("myPHPApp", ". / locale"); / / Choose domain textdomain("myPHPApp"); / / Print a test message print gettext("Welcome to My PHP Application"); / / Or use the alias _() for gettext() print _("Have a nice day");?
Prev
Home
Next
Up
PHP Manual
Prev
Next
This is an interface to gettimeofday( 2).
It returns an associative array containing the data returned from the system call.
"sec" - seconds
"usec" - microseconds
"minuteswest" - minutes west of Greenwich
"dsttime" - type of dst correction
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Identical to the date() function except that the time returned is Greenwich Mean Time (GMT).
For example, when run in Finland (GMT +0200), the first line below prints "Jan 01 1998 00:00:00", while the second prints "Dec 31 1997 22:00:00 ".
Example 1. gmdate() example
See also date(), mktime(), gmmktime() and strftime().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Identical to mktime() except the passed parameters represents a GMT date.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
HTTP functions
PHP Manual
Prev
Next
Behaves the same as strftime() except that the time returned is Greenwich Mean Time (GMT).
For example, when run in Eastern Standard Time (GMT -0500), the first line below prints "Dec 31 1998 20:00:00", while the second prints "Jan 01 1999 01:00:00 ".
Example 1. gmstrftime() example
See also strftime().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Valid Range for Gregorian Calendar 4714 B.C. to 9999 A.D.
Although this function can handle dates all the way back to 4714 B.C., such use may not be meaningful.
The Gregorian calendar was not instituted until October 15, 1582 (or October 5, 1582 in the Julian calendar).
Some countries did not accept it until much later.
Most European countries used the Julian calendar prior to the Gregorian.
Example 1.
Calendar functions
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. gzopen() Example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
By default it will replace, but if you pass in FALSE as the second argument you can force multiple headers of the same type.
There are two special-case header calls.
For example, if you have configured Apache to use a PHP script to handle requests for missing files (using the ErrorDocument directive), you may want to make sure that your script generates the proper status code.
The status may be overridden by calling header() with a new status line at any time unless the HTTP headers have already been sent.
You can achieve the same effect using the Status header.
The second special case is the "Location:" header.
?php header( "Location: http: / /www.example.com / "); / * Redirect browser * / exit; / * Make sure that code below does not get executed when we redirect. * /?
You can usually use $_SERVER[ 'HTTP_HOST'], $_SERVER['PHP_SELF'] and dirname() to make an absolute URI from a relative one yourself:
PHP scripts often generate dynamic content that must not be cached by the client browser or any proxy caches between the server and the client browser.
There are a number of options that users may be able to set for their browser that change its default caching behavior.
Additionally, session_cache_limiter() and the session.cache_limiter configuration setting can be used to automatically generate the correct caching-related headers when sessions are being used.
It is a very common error to read code with include(), or require(), functions, or another file access function, and have spaces or empty lines that are output before header() is called.
html ?php / / This will give an error.
Note:
You can do this by calling ob_start() and ob_end_flush() in your script, or setting the output_buffering configuration directive on in your php.ini or server configuration files.
?php / / We' ll be outputting a PDF header("Content-type: application / pdf"); / / It will be called downloaded.pdf header("Content-Disposition: attachment; filename=downloaded.pdf"); / / The PDF source is in original.pdf readfile('original.pdf');?
There is a bug in Microsoft Internet Explorer 4.01 that prevents this from working.
There is also a bug in Microsoft Internet Explorer 5.5 that interferes with this, which can be resolved by upgrading to Service Pack 2 or later.
See also headers_sent(), setcookie(), and the section on HTTP authentication.
Prev
Home
Next
HTTP functions
Up
PHP Manual
Prev
Next
Using this function you can at least prevent getting HTTP header related error messages.
See also ob_start(), trigger_error(), and header() for a more detailed discussion of the matters involved.
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function is similar to hebrev() This function is similar to hebrev() with the difference that it converts newlines (\n) to "br \n".
The optional parameter max_chars_per_line indicates maximum number of characters per line will be output.
The function tries to avoid breaking words.
See also hebrev()
Prev
Home
Next
Up
PHP Manual
Prev
Next
The optional parameter max_chars_per_line indicates maximum number of characters per line will be output.
The function tries to avoid breaking words.
See also hebrevc()
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. hexdec() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
If the second parameter return is set to TRUE then highlight_file() If the second parameter return is set to TRUE then highlight_file() will return the highlighted code as a string instead of printing it out.
Note:
The return parameter became available in PHP 4.2.0.
Before this time it behaved like the default, which is FALSE
Care should be taken when using the show_source() and highlight_file() functions to make sure that you do not inadvertently reveal sensitive information such as passwords or any other type of information that might create a potential security risk.
Since PHP 4.2.1 this function is also affected by safe_mode and open_basedir.
To setup a URL that can code hightlight any script that you pass to it, we will make use of the "ForceType" directive in Apache to generate a nice URL pattern, and use the function highlight_file() to show a nice looking code list.
Location / source ForceType application / x-httpd-php / Location
HTML HEAD TITLE Source Display / TITLE / HEAD BODY BGCOLOR=" white "?php $script = getenv ("PATH_TRANSLATED"); if(!$script) {echo" BR B ERROR:
Script Name needed / B BR ";} else {if (ereg("(\.php_BAR_\.inc)$",$script)) {echo" H1 Source of: $PATH_INFO / H1 \n HR \n"; highlight_file($script);} else {echo "H1 ERROR:
Then you can use an URL like the one below to display a colorized version of a script located in "/ path / to / script.php" in your web site.
See also highlight_string(), show_source().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Before this time it behaved like the default, which is FALSE
See also highlight_file(), and show_source().
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function is identical to htmlspecialchars() in all ways, except with htmlentities(), all characters which have HTML character entity equivalents are translated into these entities.
Like htmlspecialchars(), the optional second quote_style parameter lets you define what will be done with'single 'and "double "quotes.
Table 1.
Constant Name
ENT_COMPAT
ENT_QUOTES
ENT_NOQUOTES
Will leave both double and single quotes unconverted.
Support for the optional quote parameter was added in PHP 4.0.3.
Like htmlspecialchars(), it takes an optional third argument which defines character set used in conversion.
Support for this argument was added in PHP 4.1.0.
If you' re wanting to decode instead (the reverse) you can use html_entity_decode().
See also html_entity_decode(), get_html_translation_table(), htmlspecialchars(), nl2br(), and urlencode().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 1.
Example 1.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Certain characters have special significance in HTML, and should be represented by HTML entities if they are to preserve their meanings.
This function returns a string with some of these conversions made; the translations made are those most useful for everyday web programming.
If you require all HTML character entities to be translated, use htmlentities() instead.
This function is useful in preventing user-supplied text from containing HTML markup, such as in a message board or guest book application.
The optional second argument, quote_style, tells the function what to do with single and double quote characters.
The default mode, ENT_COMPAT, is the backwards compatible mode which only translates the double-quote character and leaves the single-quote untranslated.
The translations performed are:
'' (ampersand) becomes' amp; '
'"' (double quote) becomes' quot; 'when ENT_NOQUOTES is not set.
'' '(single quote) becomes' #039; 'only when ENT_QUOTES is set.
'' (greater than) becomes' gt; '
Example 1. htmlspecialchars() example
$new = htmlspecialchars( "a href='test 'Test / a", ENT_QUOTES);
Note that this function does not translate anything beyond what is listed above.
For full entity translation, see htmlentities().
The third argument defines character set used in conversion.
The default character set is ISO-8859-1.
Support for this third argument was added in PHP 4.1.0.
See also get_html_translation_table(), htmlentities() and nl2br().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. modifying an attribute
Example 2. adding a completely new attribute
Note:
Example 3. modifying Title attribute
Example 4. modifying Title attribute
Example 5. removing attribute
Note:
Note:
Note:
Note:
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. ibase_connect() example
Note:
Note:
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. iconv_get_encoding() example:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. iconv() example:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Example 1. iconv_set_encoding() example:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Example 2.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function sets whether a client disconnect should cause a script to be aborted.
It will return the previous setting and can be called without an argument to not change the current setting and only return the current setting.
See the Connection Handling section in the Features chapter for a complete description of connection handling in PHP.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
You can use a URL as a filename with this function if the fopen wrappers have been enabled.
See fopen() for more details on how to specify the filename and Appendix I for a list of supported URL protocols.
Warning
Windows versions of PHP prior to PHP 4.3 do not support accessing remote files via this function, even if allow_url_fopen is enabled.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
You can use a URL as a filename with this function if the fopen wrappers have been enabled.
See fopen() for more details on how to specify the filename and Appendix I for a list of supported URL protocols.
Warning
Windows versions of PHP prior to PHP 4.3 do not support accessing remote files via this function, even if allow_url_fopen is enabled.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
You can use a URL as a filename with this function if the fopen wrappers have been enabled.
See fopen() for more details on how to specify the filename and Appendix I for a list of supported URL protocols.
Warning
Windows versions of PHP prior to PHP 4.3 do not support accessing remote files via this function, even if allow_url_fopen is enabled.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Note:
You can use a URL as a filename with this function if the fopen wrappers have been enabled.
See fopen() for more details on how to specify the filename and Appendix I for a list of supported URL protocols.
Warning
Windows versions of PHP prior to PHP 4.3 do not support accessing remote files via this function, even if allow_url_fopen is enabled.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
You can use a URL as a filename with this function if the fopen wrappers have been enabled.
See fopen() for more details on how to specify the filename and Appendix I for a list of supported URL protocols.
Warning
Windows versions of PHP prior to PHP 4.3 do not support accessing remote files via this function, even if allow_url_fopen is enabled.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
You can use a URL as a filename with this function if the fopen wrappers have been enabled.
See fopen() for more details on how to specify the filename and Appendix I for a list of supported URL protocols.
Warning
Windows versions of PHP prior to PHP 4.3 do not support accessing remote files via this function, even if allow_url_fopen is enabled.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Note:
You can use a URL as a filename with this function if the fopen wrappers have been enabled.
See fopen() for more details on how to specify the filename and Appendix I for a list of supported URL protocols.
Warning
Windows versions of PHP prior to PHP 4.3 do not support accessing remote files via this function, even if allow_url_fopen is enabled.
Prev
Home
Next
Up
PHP Manual
Prev
Next
You can use a URL as a filename with this function if the fopen wrappers have been enabled.
See fopen() for more details on how to specify the filename and Appendix I for a list of supported URL protocols.
Warning
Windows versions of PHP prior to PHP 4.3 do not support accessing remote files via this function, even if allow_url_fopen is enabled.
Prev
Home
Next
Up
PHP Manual
Prev
Next
You can use a URL as a filename with this function if the fopen wrappers have been enabled.
See fopen() for more details on how to specify the filename and Appendix I for a list of supported URL protocols.
Warning
Windows versions of PHP prior to PHP 4.3 do not support accessing remote files via this function, even if allow_url_fopen is enabled.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. imagesetstyle() example
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. imagettftext() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. imagetypes
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. image_type_to_mime_type (file)
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. imap_append() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. imap_createmailbox() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Example 1. imap_delete() Beispiel
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. imap_fetch_overview() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 1.
Table 2.
Table 3.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. imap_getmailboxes() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. imap_get_quota() example
Example 2. imap_get_quota() 4.3 or greater example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. imap_get_quotaroot() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. imap_list() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 1.
Example 1. imap_mailboxmsginfo() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. imap_mail_compose() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. imap_mime_header_decode() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. imap_open() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. imap_rfc822_parse_adrlist() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. imap_rfc822_write_address() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. imap_setflag_full() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. imap_set_quota() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. imap_status() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns a string containing a string representation of all the array elements in the same order, with the glue string between each element.
Example 1. implode() example
?php $array = array( 'lastname', 'email', 'phone'); $comma_separated = implode(" ,", $array); print $comma_separated; / / lastname,email,phone?
For consistency with explode(), however, it may be less confusing to use the documented order of arguments.
See also explode(), and split().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Searches haystack for needle and returns TRUE if it is found in the array, FALSE otherwise.
Note:
Note:
Example 1. in_array() example
The second condition fails because in_array() is case-sensitive, so the program above will display:
Example 2. in_array() with strict example
This will display:
Example 3. in_array() with an array as needle
Prev
Home
Next
Up
PHP Manual
Prev
Control Structures
Next
The include() statement includes and evaluates the specified file.
The documentation below also applies to require().
The two constructs are identical in every way except how they handle failure. include() produces a Warning while require() results in a Fatal Error.
In other words, use require() if you want a missing file to halt processing of the page. include() does not behave this way, the script will continue regardless.
Be sure to have an appropriate include_path setting as well.
When a file is included, the code it contains inherits the variable scope of the line on which the include occurs.
Any variables available at that line in the calling file will be available within the called file, from that point forward.
Example 12-3.
Basic include() example
vars.php ?php $color = 'green'; $fruit = 'apple';? test.php ?php echo "A $color $fruit"; / / A include'vars.php'; echo "A $color $fruit"; / / A green apple?
So, it will follow the variable scope of that function.
Example 12-4.
Including within functions
?php function foo() {global $color; include'vars.php'; echo "A $color $fruit";} / * vars.php is in the scope of foo() so * * $fruit is NOT available outside of this * * scope. $color is because we declared it * * as global. * / foo(); / / A green apple echo "A $color $fruit"; / / A green?
When a file is included, parsing drops out of PHP mode and into HTML mode at the beginning of the target file, and resumes again at the end.
For this reason, any code inside the target file which should be executed as PHP code must be enclosed within valid PHP start and end tags.
If "URL fopen wrappers" are enabled in PHP (which they are in the default configuration), you can specify the file to be included using an URL (via HTTP or other supported wrapper - see Appendix I for a list of protocols) instead of a local pathname.
If the target server interprets the target file as PHP code, variables may be passed to the included file using an URL request string as used with HTTP GET.
This is not strictly speaking the same thing as including the file and having it inherit the parent file' s variable scope; the script is actually being run on the remote server and the result is then being included into the local script.
Warning
Example 12-5. include() through HTTP
Also, 'Works' here means that the variables * * $foo and $bar are available within the included file. * / / / Won't work; file.txt wasn't handled by www.example.com as PHP include'http: / /www.example.com / file.txt?foo=1 bar=2'; / / Won't work; looks for a file named'file.php?foo=1 bar=2 'on the / / local filesystem. include'file.php?foo=1 bar=2'; / / Works. include'http: / /www.example.com / file.php?foo=1 bar=2'; $foo = 1; $bar = 2; include'file.txt'; / / Works. include'file.php'; / / Works.?
Because include() and require() are special language constructs, you must enclose them within a statement block if it's inside a conditional block.
Example 12-6. include() and conditional blocks
?php / / This is WRONG and will not work as desired. if ($condition) include $file; else include $other; / / This is CORRECT. if ($condition) {include $file;} else {include $other;}?
Handling Returns:
It is possible to execute a return() It is possible to execute a return() statement inside an included file in order to terminate processing in that file and return to the script which called it.
Also, it 's possible to return values from included files.
You can take the value of the include call as you would a normal function.
Note:
In PHP 3, the return may not appear inside a block unless it' s a function block, in which case the return() applies to that function and not the whole file.
Example 12-7. include() and the return() statement
return.php ?php $var = 'PHP'; return $var;? noreturn.php ?php $var = 'PHP';? testreturns.php ?php $foo = include'return.php'; echo $foo; / / prints'PHP' $bar = include'noreturn.php'; echo $bar; / / prints 1?
$bar is the value 1 because the include was successful.
Notice the difference between the above examples.
The first uses return() within the included file while the other does not.
A few other ways to "include" files into variables are with fopen(), file() or by using include() along with Output Control Functions.
See also require(), require_once(), include_once(), readfile(), virtual(), and include_path.
Prev
Home
Next
Up
PHP Manual
Prev
Control Structures
Next
The include_once() statement includes and evaluates the specified file during the execution of the script.
This is a behavior similar to the include() This is a behavior similar to the include() statement, with the only difference being that if the code from a file has already been included, it will not be included again.
As the name suggests, it will be included just once.
For more examples on using require_once() and include_once(), look at the PEAR code included in the latest PHP source code distributions.
Be aware, that the behaviour of include_once() and require_once() may not be what you expect on a non case sensitive operating system (such as Windows).
Example 12-9. include_once() is case sensitive
Warning
See also include(), require(), require_once(), get_required_files(), get_included_files(), readfile(), and virtual().
Prev
Home
Next
Up
Functions
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Example 1. ingres_connect() example
Example 2. ingres_connect() example using default link
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Example 1. ingres_fetch_array() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Example 1. ingres_fetch_object() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Example 1. ingres_fetch_row() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Example 1. ingres_query() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Changes the value of a configuration option, returns FALSE on failure, and the previous value of the configuration option on success.
Note:
This is an alias of ini_set()
See also ini_get(), ini_get_all(), ini_restore(), and ini_set()
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
When querying memory size values:
Attempting normal arithmetic functions on these values will not have otherwise expected results.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Restores a given configuration option to its original value.
See also: ini_alter(), ini_get(), ini_get_all(), and ini_set()
Prev
Home
Next
Up
PHP Manual
Prev
Next
The configuration option will keep this new value during the script' s execution, and will be restored at the script's ending.
Below is a table with a list of all PHP options (as of PHP 4.2.0), indicating which ones can be changed / set and at what level.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
The function ip2long() generates an IPv4 Internet network address from its Internet standard format (dotted string) representation.
Example 1. ip2long() Example
?php $ip = gethostbyname( "www.example.com"); $out = "The following URLs are equivalent: br \n"; $out .= "http: / /www.example.com /, http: / /".$ip ." /, and http: / /".sprintf("%u",ip2long($ip)) ." / br \n"; echo $out;?
Note:
Because PHP' s integer type is signed, and many IP addresses will result in negative integers, you need to use the "%u "formatter of sprintf() or printf() to get the string representation of the unsigned IP address.
Example 2.
Displaying an IP address
See also: long2ip()
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Example 1. ircg_fetch_error_msg() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
If filename is a relative filename, it will be checked relative to the current working directory.
See clearstatcache() for more details.
This function will not work on remote files; the file to be examined must be accessible via the server's filesystem.
See also chdir(), dir, opendir(), is_file() and is_link().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
The results of this function are cached.
See clearstatcache() for more details.
Note:
See also is_file() and is_link().
Prev
Home
Next
Up
PHP Manual
Prev
Next
The results of this function are cached.
See clearstatcache() for more details.
This function will not work on remote files; the file to be examined must be accessible via the server's filesystem.
See also is_dir() and is_link().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE if the filename exists and is a symbolic link.
The results of this function are cached.
See clearstatcache() for more details.
See also is_dir(), is_file(), and readlink().
This function will not work on remote files; the file to be examined must be accessible via the server's filesystem.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE if the filename exists and is readable.
Keep in mind that PHP may be accessing the file as the user id that the web server runs as (often'nobody').
The results of this function are cached.
See clearstatcache() for more details.
This function will not work on remote files; the file to be examined must be accessible via the server's filesystem.
See also is_writable().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function returns TRUE if the object object, belongs to a class which is a subclass of class_name, FALSE otherwise.
See also get_class(), get_parent_class() and is_a().
Prev
Home
Next
Up
PHP Manual
Prev
Next
This is useful to help ensure that a malicious user hasn 't tried to trick the script into working on files upon which it should not be working--for instance, / etc / passwd.
This sort of check is especially important if there is any chance that anything done with uploaded files could reveal their contents to the user, or even to other users on the same system.
If you are stuck using an earlier version, you can use the following function to help protect yourself:
It depends on internal functionality of PHP which changed after that version.
See also move_uploaded_file(), and the section Handling file uploads for a simple usage example.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE if the filename exists and is writable.
The filename argument may be a directory name allowing you to check if a directory is writeable.
Keep in mind that PHP may be accessing the file as the user id that the web server runs as (often'nobody').
The results of this function are cached.
See clearstatcache() for more details.
This function will not work on remote files; the file to be examined must be accessible via the server's filesystem.
See also is_readable().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the day of the week.
Can return a string or an integer depending on the mode.
Table 1.
Calendar week modes
Mode
Meaning
Returns the day number as an int (0=sunday, 1=monday, etc)
Returns string containing the day of week (english-gregorian)
Returns a string containing the abbreviated day of week (english-gregorian)
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns a string containing a month name. mode tells this function which calendar to convert the Julian Day Count to, and what type of month names are to be returned.
Table 1.
Calendar modes
Meaning
0
1
January, February, March, April, May, June, July, August, September, October, November, December
Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec
January, February, March, April, May, June, July, August, September, October, November, December
Tishri, Heshvan, Kislev, Tevet, Shevat, AdarI, AdarII, Nisan, Iyyar, Sivan, Tammuz, Av, Elul
Vendemiaire, Brumaire, Frimaire, Nivose, Pluviose, Ventose, Germinal, Floreal, Prairial, Messidor, Thermidor, Fructidor, Extra
Prev
Next
Up
PHP Manual
Prev
Next
Converts a Julian Day Count to the French Republican Calendar.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Converts Julian Day Count to a string containing the Gregorian date in the format of "month / day / year".
Prev
Home
Next
Up
PHP Manual
Prev
Next
Converts a Julian Day Count the the Jewish Calendar.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Converts Julian Day Count to a string containing the Julian Calendar Date in the format of "month / day / year".
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function will return a UNIX timestamp corresponding to the Julian Day given in jday or FALSE if jday is not inside the UNIX epoch (Gregorian years between 1970 and 2037 or 2440588 = jday = 2465342).
The time returned is localtime (and not GMT).
See also unixtojd().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Although this function can handle dates all the way back to the year 1 (3761 B.C.), such use may not be meaningful.
The Jewish calendar has been in use for several thousand years, but in the early days there was no formula to determine the start of a month.
A new month was started when the new moon was first observed.
Prev
Home
Next
Up
PHP Manual
Prev
Next
join() is an alias to implode(), and is identical in every way.
See also explode(), implode(), and split().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Although this function can handle dates all the way back to 4713 B.C., such use may not be meaningful.
The calendar was created in 46 B.C., but the details did not stabilize until at least 8 A.D., and perhaps as late at the 4th century.
Caution
Remember, the current calendar system being used worldwide is the Gregorian calendar. gregoriantojd() can be used to convert such dates to their Julian Day count.
Prev
Home
Next
Up
PHP Manual
Prev
Next
key() returns the index element of the current array position.
See also current() and next().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Sorts an array by key in reverse order, maintaining key to data correlations.
This is useful mainly for associative arrays.
Example 1. krsort() example
$fruits = array ("d"= "lemon", "a"= "orange", "b"= "banana", "c"= "apple"); krsort ($fruits); reset ($fruits); while (list ($key, $val) = each ($fruits)) {echo "$key = $val\n";}
This example would display:
d = lemon c = apple b = banana a = orange
You may modify the behavior of the sort using the optional parameter sort_flags, for details see sort().
See also asort(), arsort(), ksort(), sort(), natsort(), and rsort().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Sorts an array by key, maintaining key to data correlations.
This is useful mainly for associative arrays.
Example 1. ksort() example
$fruits = array ("d"= "lemon", "a"= "orange", "b"= "banana", "c"= "apple"); ksort ($fruits); reset ($fruits); while (list ($key, $val) = each ($fruits)) {echo "$key = $val\n";}
This example would display:
a = orange b = banana c = apple d = lemon
You may modify the behavior of the sort using the optional parameter sort_flags, for details see sort().
See also asort(), arsort(), krsort(), uksort(), sort(), natsort(), and rsort().
Note:
The second parameter was added in PHP 4.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Example 1.
Example 2.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Warning
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Example 1.
Example 2.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Note:
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Example 1.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure. on error.
Note:
Example 1.
Example 2.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
Mail functions
PHP Manual
Prev
Next
This function returns the Levenshtein-Distance between the two argument strings or -1, if one of the argument strings is longer than the limit of 255 characters (255 should be more than enough for name or dictionary comparison, and nobody serious would be doing genetic analysis with PHP).
The Levenshtein distance is defined as the minimal number of characters you have to replace, insert or delete to transform str1 into str2.
The complexity of the algorithm is O( m*n), where n and m are the length of str1 and str2 (rather good when compared to similar_text(), which is O(max(n,m)**3), but still expensive).
In its simplest form the function will take only the two strings as parameter and will calculate just the number of insert, replace and delete operations needed to transform str1 into str2.
A second variant will take three additional parameters that define the cost of insert, replace and delete operations.
This is more general and adaptive than variant one, but not as efficient.
The third variant (which is not implemented yet) will be the most general and adaptive, but also the slowest alternative.
It will call a user-supplied function that will determine the cost for every possible operation.
The user-supplied function will be called with the following arguments:
operation to apply: 'I', 'R' or'D '
actual character in string 1
actual character in string 2
position in string 1
position in string 2
remaining characters in string 1
remaining characters in string 2
The user-supplied function approach offers the possibility to take into account the relevance of and / or difference between certain symbols (characters) or even the context those symbols appear in to determine the cost of insert, replace and delete operations, but at the cost of losing all optimizations done regarding cpu register utilization and cache misses that have been worked into the other two variants.
See also soundex(), similar_text(), and metaphone().
Prev
Home
Next
Up
PHP Manual
Prev
Next
(PHP 3, PHP 4)
link() creates a hard link.
See also the symlink() to create soft links, and readlink() along with linkinfo().
Prev
Home
Next
Up
PHP Manual
Prev
Next
linkinfo() returns the st_dev field of the UNIX C stat structure returned by the lstat system call.
This function is used to verify if a link (pointed to by path) really exists (using the same method as the S_ISLNK macro defined in stat.h).
Returns 0 or FALSE in case of error.
See also symlink(), link(), and readlink().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. list() examples
If you are using plain variables, you don 't have to worry about this.
It 's assigned in the reverse order.
Using list() with array indices
array( 3) {[2]= string(8) "caffeine "[1]= string(5) "brown" [0]= string(6) "coffee "}
See also each(), array() and extract().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. localeconv() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
The localtime() function returns an array identical to that of the structure returned by the C function call.
The first argument to localtime() is the timestamp, if this is not given the current time is used.
The second argument to the localtime() is the is_associative, if this is set to 0 or not supplied than the array is returned as a regular, numerically indexed array.
If the argument is set to 1 then localtime() is an associative array containing all the different elements of the structure returned by the C function call to localtime.
The names of the different keys of the associative array are as follows:
"tm_sec" - seconds
"tm_min" - minutes
"tm_hour" - hour
"tm_mday" - day of the month
"tm_mon" - month of the year, starting with 0 for January
"tm_year" - Years since 1900
"tm_wday" - Day of the week
"tm_yday" - Day of the year
"tm_isdst" - Is daylight savings time in effect
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
The function long2ip() generates an Internet address in dotted format (i.e.: aaa.bbb.ccc.ddd) from the proper address representation.
See also: ip2long()
Prev
Home
Next
Up
PHP Manual
Prev
Next
Gathers the statistics of the file or symbolic link named by filename.
This function is identical to the stat() function except that if the filename parameter is a symbolic link, the status of the symbolic link is returned, not the status of the file pointed to by the symbolic link.
Returns an array with the statistics of the file with the following elements:
The results of this function are cached.
See clearstatcache() for more details.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Without the second parameter, ltrim() will strip these characters:
You can also specify the characters you want to strip, by means of the charlist You can also specify the characters you want to strip, by means of the charlist parameter.
With.. you can specify a range of characters.
Prev
Home
Next
Up
PHP Manual
Prev
Next
This is accomplished via MIME-encoding - for more information, see this Zend article or the PEAR Mime Classes.
mail() returns TRUE if the mail was successfully accepted for delivery, FALSE otherwise.
The Windows implementation of mail() differs in many ways from the Unix implementation.
Second, the custom headers like From:, Cc:, Bcc: and Date: are not interpreted by the MTA in the first place, but are parsed by PHP.
PHP = 4.3 supports all the mentioned header elements and is no longer case-sensitive.
If a fourth string argument is passed, this string is inserted at the end of the header.
Multiple extra headers are separated with a carriage return and newline.
You must use \r\n to separate headers, although some Unix mail transfer agents may work with just a single newline (\n).
Sending mail with extra headers.
PHP / ". phpversion());
You may need to add the user that your web server runs as to your sendmail configuration to prevent a 'X-Warning' header from being added to the message when you set the envelope sender using this method.
This fifth parameter was added in PHP 4.0.5.
You can also use simple string building techniques to build complex email messages.
1.0\r\n"; $headers .= "Content-type: text / html; charset=iso-8859-1\r\n"; / * additional headers * / $headers .= "From:
Note:
Note:
The mail command will not parse this properly while talking with the MTA.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. mb_convert_case() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. mb_convert_encoding() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. mb_convert_kana() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. mb_convert_variables() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. convmap example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. mb_detect_encoding() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Example 1.
Example 2. mb_detect_order() examples
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. mb_convert_kana() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. convmap example
Example 2. mb_encode_numericentity() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. mb_internal_encoding() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. mb_output_handler() example
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. mb_preferred_mime_string() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. mb_strimwidth() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. mb_strtolower() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. mb_strtoupper() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. mb_substitute_character() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. mb_substr_count() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. mcrypt_create_iv() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. mcrypt_enc_get_algorithms_name() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. mcrypt_enc_get_modes_name() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. mcrypt_enc_get_supported_key_sizes() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. mcrypt_encrypt() Example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. mcrypt_get_block_size() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. mcrypt_get_cipher_name() Example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. mcrypt_create_iv() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. mcrypt_get_block_size() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. mcrypt_list_algorithms() Example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. mcrypt_list_modes() Example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. mcrypt_module_open() Example
Example 2.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
Mhash Functions
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
The hash is a 32-character hexadecimal number.
See also crc32(), md5_file(), and sha1().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. mdecrypt_generic() Example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Calculates the metaphone key of str.
Similar to soundex() metaphone creates the same key for similar sounding words.
It' s more accurate than soundex() It's more accurate than soundex() as it knows the basic rules of English pronunciation.
The metaphone generated keys are of variable length.
Metaphone was developed by Lawrence Philips lphilips@verity.com.
It is described in ["Practical Algorithms for Programmers", Binstock Rex, Addison Wesley, 1995].
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function returns TRUE if the method given by method_name has been defined for the given object, FALSE otherwise.
Prev
Home
Next
Up
PHP Manual
Prev
Next
mhash_count() returns the highest available hash id.
Hashes are numbered from 0 to this hash id.
Example 1.
Prev
Home
Next
Mhash Functions
Up
PHP Manual
Prev
Next
mhash_get_block_size() is used to get the size of a block of the specified hash.
mhash_get_block_size() takes one argument, the hash and returns the size in bytes or FALSE, if the hash does not exist.
Prev
Home
Next
Up
PHP Manual
Prev
Next
mhash_get_hash_name() is used to get the name of the specified hash.
mhash_get_hash_name() takes the hash id as an argument and returns the name of the hash or FALSE, if the hash does not exist.
Example 1. mhash_get_hash_name() example
The above example will print out:
Prev
Home
Next
Up
PHP Manual
Prev
Next
mhash() applies a hash function specified by hash to the data and returns the resulting hash (also called digest).
If the key is specified it will return the resulting HMAC.
Prev
Home
Next
Up
PHP Manual
Prev
Next
mhash_keygen_s2k() generates a key that is bytes long, from a user given password.
This is the Salted S2K algorithm as specified in the OpenPGP document (RFC 2440).
The salt must be different and random enough for every key you generate in order to create different keys.
That salt must be known when you check the keys, thus it is a good idea to append the key to it.
Salt has a fixed length of 8 bytes and will be padded with zeros if you supply less bytes.
Keep in mind that user supplied passwords are not really suitable to be used as keys in cryptographic algorithms, since users normally choose keys they can write on keyboard.
These passwords use only 6 to 7 bits per character (or less).
It is highly recommended to use some kind of tranformation (like this function) to the user supplied key.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the string "msec sec" where sec is the current time measured in the number of seconds since the Unix Epoch (0:00:00 January 1, 1970 GMT), and msec is the microseconds part.
This function is only available on operating systems that support the gettimeofday() system call.
Both portions of the string are returned in units of seconds.
Example 1. microtime() example
function getmicrotime() {list($usec, $sec) = explode( "",microtime()); return ((float)$usec + (float)$sec);} $time_start = getmicrotime(); for ($i=0; $i 1000; $i++) {/ /do nothing, 1000 times} $time_end = getmicrotime(); $time = $time_end - $time_start; echo "Did nothing in $time seconds";
See also time().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
The mode is also modified by the current umask, which you can change using umask().
Note:
The mode is 0777 by default, which means the widest possible access.
Returns TRUE on success or FALSE on failure.
See also rmdir().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning:
Note the strange order of arguments, which differs from the order of arguments in a regular UNIX mktime() call and which does not lend itself well to leaving out parameters from right to left (see below).
It is a common error to mix these values up in a script.
Returns the Unix timestamp corresponding to the arguments given.
This timestamp is a long integer containing the number of seconds between the Unix Epoch (January 1 1970) and the time specified.
Arguments may be left out in order from right to left; any arguments thus omitted will be set to the current value according to the local date and time.
If it 's unknown, PHP tries to figure it out itself.
This can cause unexpected (but not incorrect) results.
mktime() is useful for doing date arithmetic and validation, as it will automatically calculate the correct value for out-of-range input.
For example, each of the following lines produces the string "Jan-01-1998".
Example 1. mktime() example
The last day of any given month can be expressed as the "0" day of the next month, not the -1 day.
Both of the following examples will produce the string "The last day in Feb 2000 is:
Example 2.
Last day of next month
Date with year, month and day equal to zero is considered illegal (otherwise it what be regarded as 30.11.1999, which would be strange behavior).
See also date() and time().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Example 1. money_format() Example
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function checks to ensure that the file designated by filename is a valid upload file (meaning that it was uploaded via PHP's HTTP POST upload mechanism).
If filename is not a valid upload file, then no action will occur, and move_uploaded_file() will return FALSE.
Additionally, a warning will be issued.
Note:
This is not unsafe because move_uploaded_file() only operates on files uploaded via PHP.
See also is_uploaded_file(), and the section Handling file uploads for a simple usage example.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
MySQL Functions
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. msql_query()
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. msql_tablename() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Note: if the stored procedure returns parameters or a return value these will be available after the call to mssql_execute() Note: if the stored procedure returns parameters or a return value these will be available after the call to mssql_execute() unless the stored procedure returns more than one result set.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. mssql_next_result() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
Network Functions
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
mysql_affected_rows() returns the number of rows affected by the last INSERT, UPDATE or DELETE query associated with link_identifier.
If the link identifier isn' t specified, the last link opened by mysql_connect() is assumed.
Note:
If you are using transactions, you need to call mysql_affected_rows() after your INSERT, UPDATE, or DELETE query, not after the commit.
If the last query was a DELETE query with no WHERE clause, all of the records will have been deleted from the table but this function will return zero.
Note:
When using UPDATE, MySQL will not update columns where the new value is the same as the old value.
This creates the possiblity that mysql_affected_rows() may not actually equal the number of rows matched, only the number of rows that were literally affected by the query.
mysql_affected_rows() does not work with SELECT statements; only on statements which modify records.
To retrieve the number of rows returned by a SELECT, use mysql_num_rows().
If the last query failed, this function will return -1.
Example 1.
Delete-Query
?php / * connect to database * / mysql_pconnect( "localhost", "mysql_user", "mysql_password") or die("Could not connect: ". mysql_error()); / * this should return the correct numbers of deleted records * / mysql_query("DELETE FROM mytable WHERE id 10"); printf ("Records deleted: %d\n", mysql_affected_rows()); / * without a where clause in a delete statement, it should return 0 * / mysql_query("DELETE FROM mytable"); printf ("Records deleted: %d\n", mysql_affected_rows());?
The above example would produce the following output:
Records deleted:
10 Records deleted:
Example 2.
Update-Query
?php / * connect to database * / mysql_pconnect( "localhost", "mysql_user", "mysql_password") or die("Could not connect: ". mysql_error()); / * Update records * / mysql_query("UPDATE mytable SET used=1 WHERE id 10"); printf ("Updated records: %d\n", mysql_affected_rows()); mysql_query("COMMIT");?
The above example would produce the following output:
Updated Records:
See also: mysql_num_rows(), mysql_info().
Prev
Home
Next
MySQL Functions
Up
PHP Manual
Prev
Next
mysql_change_user() changes the logged in user of the current active connection, or the connection given by the optional link_identifier parameter.
If the new user and password authorization fails, the current connected user stays active.
Returns TRUE on success or FALSE on failure.
Note:
This function was introduced in PHP 3.0.13 and requires MySQL 3.23.3 or higher.
It is not available in PHP 4.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. mysql_client_encoding() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
If link_identifier isn 't specified, the last opened link is used.
Using mysql_close() isn't usually necessary, as non-persistent open links are automatically closed at the end of the script's execution.
See also freeing resources.
Example 1.
MySQL close example
?php $link = mysql_connect( "localhost", "mysql_user", "mysql_password") or die("Could not connect: ". mysql_error()); print ("Connected successfully"); mysql_close($link);?
See also: mysql_connect(), and mysql_pconnect().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns a MySQL link identifier on success, or FALSE on failure.
mysql_connect() establishes a connection to a MySQL server.
The following defaults are assumed for missing optional parameters: server = 'localhost:3306', username = name of the user that owns the server process and password = empty password.
The server parameter can also include a port number. eg. "hostname:port" or a path to a socket eg. ": / path / to / socket" for the localhost.
Note:
Support for ":port" was added in PHP 3.0B4.
Support for ": / path / to / socket" was added in PHP 3.0.10.
You can suppress the error message on failure by prepending a @ to the function name.
The new_link parameter modifies this behavior and makes mysql_connect() always open a new link, even if mysql_connect() was called before with the same parameters.
Note:
The new_link parameter became available in PHP 4.2.0
The client_flags parameter became available in PHP 4.3.0
The link to the server will be closed as soon as the execution of the script ends, unless it' s closed earlier by explicitly calling mysql_close().
Example 1.
MySQL connect example
?php $link = mysql_connect( "localhost", "mysql_user", "mysql_password") or die("Could not connect: ". mysql_error()); print ("Connected successfully"); mysql_close($link);?
See also mysql_pconnect() and mysql_close().
Prev
Home
Next
Up
PHP Manual
Prev
Next
mysql_create_db() attempts to create a new database on the server associated with the specified link identifier.
Returns TRUE on success or FALSE on failure.
Example 1.
MySQL create database example
For downwards compatibility mysql_createdb() can also be used.
Note:
The function mysql_create_db() is deprecated.
See also: mysql_drop_db(), mysql_query().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
mysql_data_seek() moves the internal row pointer of the MySQL result associated with the specified result identifier to point to the specified row number.
The next call to mysql_fetch_row() would return that row.
Row_number starts at 0.
The row_number should be a value in the range from 0 to mysql_num_rows - 1.
Note:
The function mysql_data_seek() can be used in conjunction only with mysql_query(), not with mysql_unbuffered_query().
Example 1.
MySQL data seek example
See also: mysql_query(), mysql_num_rows().
Prev
Home
Next
Up
PHP Manual
Prev
Next
mysql_db_name() takes as its first parameter the result pointer from a call to mysql_list_dbs().
The row parameter is an index into the result set.
If an error occurs, FALSE is returned.
Use mysql_errno() and mysql_error() to determine the nature of the error.
Example 1. mysql_db_name() example
?php error_reporting( E_ALL); mysql_connect('dbhost', 'username', 'password'); $db_list = mysql_list_dbs(); $i = 0; $cnt = mysql_num_rows($db_list); while ($i $cnt) {echo mysql_db_name($db_list, $i). "\n"; $i++;}?
For backward compatibility, mysql_dbname() is also accepted.
This is deprecated, however.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns a positive MySQL result resource to the query result, or FALSE on error.
mysql_db_query() selects a database and executes a query on it.
If the optional link identifier isn' t specified, the function will try to find an open link to the MySQL server and if no such link is found it'll try to create one as if mysql_connect() was called with no arguments.
In other words, you can 't use this function to temporarily run a sql query on another database, you would have to manually switch back.
Users are strongly encouraged to use the database.table syntax in their sql queries instead of this function.
See also mysql_connect() and mysql_query().
This function has been deprecated since PHP 4.0.6.
Use mysql_select_db() and mysql_query() instead.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
mysql_drop_db() attempts to drop (remove) an entire database from the server associated with the specified link identifier.
For downward compatibility mysql_dropdb() can also be used.
This is deprecated, however.
Note:
It is preferable to use mysql_query() to issue a SQL DROP DATABASE statement instead.
See also: mysql_create_db(), mysql_query().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the error number from the last MySQL function, or 0 (zero) if no error occurred.
Errors coming back from the MySQL database backend no longer issue warnings.
Instead, use mysql_errno() to retrieve the error code.
Note that this function only returns the error code from the most recently executed MySQL function (not including mysql_error() and mysql_errno()), so if you want to use it, make sure you check the value before calling another MySQL function.
Example 1. mysql_errno Example
The above example would produce the following output:
Unknown database 'nonexistentdb' 1146:
If the optional argument is specified the given link is used to retrieve the error code.
If not, the last opened link is used.
See also: mysql_error()
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the error text from the last MySQL function, or '' (the empty string) if no error occurred.
Errors coming back from the MySQL database backend no longer issue warnings.
Instead, use mysql_error() to retrieve the error text.
Note that this function only returns the error text from the most recently executed MySQL function (not including mysql_error() and mysql_errno()), so if you want to use it, make sure you check the value before calling another MySQL function.
Example 1. mysql_error Example
The above example would produce the following output:
Unknown database 'nonexistentdb' 1146:
If the optional argument is specified the given link is used to retrieve the error message.
If not, the last opened link is used.
See also: mysql_errno()
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function will escape the unescaped_string, so that it is safe to place it in a mysql_query().
This function is identical to mysql_real_escape_string() except that mysql_real_escape_string() takes a connection handler and escapes the string according to the current character set. mysql_escape_string() does not take a connection argument and does not respect the current charset setting.
Example 1. mysql_escape_string() example
The above example would produce the following output:
See also: mysql_real_escape_string(), addslashes(), and the magic_quotes_gpc directive.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns an array that corresponds to the fetched row, or FALSE if there are no more rows.
mysql_fetch_array() is an extended version of mysql_fetch_row().
In addition to storing the data in the numeric indices of the result array, it also stores the data in associative indices, using the field names as keys.
If two or more columns of the result have the same field names, the last column will take precedence.
To access the other column( s) of the same name, you must use the numeric index of the column or make an alias for the column.
Example 1.
select table1.field as foo table2.field as bar from table1, table2
An important thing to note is that using mysql_fetch_array() is not significantly slower than using mysql_fetch_row(), while it provides a significant added value.
The optional second argument result_type in mysql_fetch_array() is a constant and can take the following values:
MYSQL_ASSOC, MYSQL_NUM, and MYSQL_BOTH.
This feature was added in PHP 3.0.7.
MYSQL_BOTH is the default for this argument.
By using MYSQL_BOTH, you 'll get an array with both associative and number indices.
Using MYSQL_ASSOC, you only get associative indices (as mysql_fetch_assoc() works), using MYSQL_NUM, you only get number indices (as mysql_fetch_row() works).
Example 2. mysql_fetch_array with MYSQL_NUM
?php mysql_connect( "localhost", "mysql_user", "mysql_password") or die("Could not connect: ". mysql_error()); mysql_select_db("mydb"); $result = mysql_query("SELECT id, name FROM mytable"); while ($row = mysql_fetch_array($result, MYSQL_NUM)) {printf ("ID: %s Name: %s", $row[0], $row[1]);} mysql_free_result($result);?
Example 3. mysql_fetch_array with MYSQL_ASSOC
?php mysql_connect( "localhost", "mysql_user", "mysql_password") or die("Could not connect: ". mysql_error()); mysql_select_db("mydb"); $result = mysql_query("SELECT id, name FROM mytable"); while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {printf ("ID: %s Name: %s", $row["id"], $row["name"]);} mysql_free_result($result);?
Example 4. mysql_fetch_array with MYSQL_BOTH
?php mysql_connect( "localhost", "mysql_user", "mysql_password") or die("Could not connect: ". mysql_error()); mysql_select_db("mydb"); $result = mysql_query("SELECT id, name FROM mytable"); while ($row = mysql_fetch_array($result, MYSQL_BOTH)) {printf ("ID: %s Name: %s", $row[0], $row["name"]);} mysql_free_result($result);?
For further details, see also mysql_fetch_row() and mysql_fetch_assoc().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns an associative array that corresponds to the fetched row, or FALSE if there are no more rows.
It only returns an associative array.
If you need the numeric indices as well as the associative, use mysql_fetch_array().
If two or more columns of the result have the same field names, the last column will take precedence.
To access the other column( s) of the same name, you either need to access the result with numeric indices by using mysql_fetch_row() or add alias names.
See the example at the mysql_fetch_array() description about aliases.
An important thing to note is that using mysql_fetch_assoc() is not significantly slower than using mysql_fetch_row(), while it provides a significant added value.
An expanded mysql_fetch_assoc() example
If you put extract( $row); inside the following loop, you'll / / then create $userid, $fullname, and $userstatus while ($row = mysql_fetch_assoc($result)) {echo $row["userid"]; echo $row["fullname"]; echo $row["userstatus"];} mysql_free_result($result);?
See also mysql_fetch_row(), mysql_fetch_array(), mysql_query(), and mysql_error().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns an object containing field information.
mysql_fetch_field() can be used in order to obtain information about fields in a certain query result.
If the field offset isn' t specified, the next field that wasn't yet retrieved by mysql_fetch_field() is retrieved.
The properties of the object are:
name - column name
table - name of the table the column belongs to
max_length - maximum length of the column
not_null - 1 if the column cannot be NULL
primary_key - 1 if the column is a primary key
unique_key - 1 if the column is a unique key
multiple_key - 1 if the column is a non-unique key
numeric - 1 if the column is numeric
blob - 1 if the column is a BLOB
type - the type of the column
unsigned - 1 if the column is unsigned
zerofill - 1 if the column is zero-filled
Example 1. mysql_fetch_field()
?php mysql_connect( 'localhost:3306', $user, $password) or die("Could not connect: ". mysql_error()); mysql_select_db("database"); $result = mysql_query("select * from table") or die("Query failed:". mysql_error()); / * get column metadata * / $i = 0; while ($i mysql_num_fields($result)) {echo "Information for column $i: br / \n"; $meta = mysql_fetch_field($result); if (!$meta) {echo "No information available br / \n";} echo "pre blob: $meta - blob max_length: $meta - max_length multiple_key: $meta - multiple_key name: $meta - name not_null: $meta - not_null numeric: $meta - numeric primary_key: $meta - primary_key table: $meta - table type: $meta - type unique_key: $meta - unique_key unsigned: $meta - unsigned zerofill: $meta - zerofill / pre"; $i++;} mysql_free_result($result);?
See also mysql_field_seek().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns an array that corresponds to the lengths of each field in the last row fetched by mysql_fetch_row(), or FALSE on error.
mysql_fetch_lengths() stores the lengths of each result column in the last row returned by mysql_fetch_row(), mysql_fetch_array(), and mysql_fetch_object() in an array, starting at offset 0.
See also: mysql_fetch_row().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns an object with properties that correspond to the fetched row, or FALSE if there are no more rows.
mysql_fetch_object() is similar to mysql_fetch_array(), with one difference - an object is returned, instead of an array.
Indirectly, that means that you can only access the data by the field names, and not by their offsets (numbers are illegal property names).
?php / * this is valid * / echo $row - field; / * this is invalid * / echo $row - 0;?
Speed-wise, the function is identical to mysql_fetch_array(), and almost as quick as mysql_fetch_row() (the difference is insignificant).
Example 1. mysql_fetch_object() example
?php mysql_connect( "hostname", "user", "password"); mysql_select_db($db); $result = mysql_query("select * from table"); while ($row = mysql_fetch_object($result)) {echo $row - user_id; echo $row - fullname;} mysql_free_result($result);?
See also: mysql_fetch_array() and mysql_fetch_row().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns an array that corresponds to the fetched row, or FALSE if there are no more rows.
mysql_fetch_row() fetches one row of data from the result associated with the specified result identifier.
Each result column is stored in an array offset, starting at offset 0.
Subsequent call to mysql_fetch_row() would return the next row in the result set, or FALSE if there are no more rows.
See also: mysql_fetch_array(), mysql_fetch_object(), mysql_data_seek(), mysql_fetch_lengths(), and mysql_result().
Prev
Home
Next
Up
PHP Manual
Prev
Next
mysql_field_flags() returns the field flags of the specified field.
The flags are reported as a single word per flag separated by a single space, so that you can split the returned value using explode().
The following flags are reported, if your version of MySQL is current enough to support them: "not_null", "primary_key", "unique_key", "multiple_key", "blob", "unsigned", "zerofill", "binary", "enum", "auto_increment", "timestamp".
For downward compatibility mysql_fieldflags() can also be used.
This is deprecated, however.
Prev
Home
Next
Up
PHP Manual
Prev
Next
mysql_field_len() returns the length of the specified field.
For downward compatibility mysql_fieldlen() can also be used.
This is deprecated, however.
Prev
Home
Next
Up
PHP Manual
Prev
Next
mysql_field_name() returns the name of the specified field index. result must be a valid result identifier and field_index is the numerical offset of the field.
The index of the third field would actually be 2, the index of the fourth field would be 3 and so on.
Example 1. mysql_field_name() example
/* The users table consists of three fields: * user_id * username * password. * / $link = mysql_connect( 'localhost', "mysql_user", "mysql_password"); mysql_select_db($dbname, $link) or die("Could not set $dbname: ". mysql_error()); $res = mysql_query("select * from users", $link); echo mysql_field_name($res, 0). "\n"; echo mysql_field_name($res, 2);
The above example would produce the following output:
user_id password
For downwards compatibility mysql_fieldname() can also be used.
This is deprecated, however.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Seeks to the specified field offset.
If the next call to mysql_fetch_field() doesn't include a field offset, the field offset specified in mysql_field_seek() will be returned.
See also: mysql_fetch_field().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the name of the table that the specifed field is in.
For downward compatibility mysql_fieldtable() can also be used.
This is deprecated, however.
Prev
Home
Next
Up
PHP Manual
Prev
Next
mysql_field_type() is similar to the mysql_field_name() function.
The arguments are identical, but the field type is returned instead.
The field type will be one of "int", "real", "string", "blob", and others as detailed in the MySQL documentation.
Example 1.
MySQL field types
?php mysql_connect( "localhost", "mysql_username", "mysql_password"); mysql_select_db("mysql"); $result = mysql_query("SELECT * FROM func"); $fields = mysql_num_fields($result); $rows = mysql_num_rows($result); $table = mysql_field_table($result, 0); echo "Your '".$table ." 'table has ".$fields. "fields and ".$rows." record(s)\n"; echo "The table has the following fields:\n"; for ($i=0; $i $fields; $i++) {$type = mysql_field_type($result, $i); $name = mysql_field_name($result, $i); $len = mysql_field_len($result, $i); $flags = mysql_field_flags($result, $i); echo $type. "".$name." ".$len. "".$flags ."\n";} mysql_free_result($result); mysql_close();?
The above example would produce the following output:
Your 'func' table has 4 fields and 1 record(s) The table has the following fields: string name 64 not_null primary_key binary int ret 1 not_null string dl 128 not_null string type 9 not_null enum
For downward compatibility mysql_fieldtype() can also be used.
This is deprecated, however.
Prev
Home
Next
Up
PHP Manual
Prev
Next
mysql_free_result() will free all memory associated with the result identifier result.
mysql_free_result() only needs to be called if you are concerned about how much memory is being used for queries that return large result sets.
All associated result memory is automatically freed at the end of the script 's execution.
Returns TRUE on success or FALSE on failure.
For downward compatibility mysql_freeresult() can also be used.
This is deprecated, however.
Prev
Home
Next
Up
PHP Manual
Prev
Next
mysql_get_client_info() returns a string that represents the client library version.
Example 1. mysql_get_client_info Example
?php printf ("MySQL client info: %s\n", mysql_get_client_info());?
The above example would produce the following output:
MySQL client info:
See also: mysql_get_host_info(), mysql_get_proto_info() and mysql_get_server_info().
Prev
Home
Next
Up
PHP Manual
Prev
Next
mysql_get_host_info() returns a string describing the type of connection in use for the connection link_identifier, including the server host name.
If link_identifier is omitted, the last opened connection will be used.
Example 1. mysql_get_host_info Example
?php mysql_connect( "localhost", "mysql_user", "mysql_password") or die("Could not connect: ". mysql_error()); printf ("MySQL host info: %s\n", mysql_get_host_info());?
The above example would produce the following output:
See also: mysql_get_client_info(), mysql_get_proto_info() and mysql_get_server_info().
Prev
Home
Next
Up
PHP Manual
Prev
Next
mysql_get_proto_info() returns the protocol version used by connection link_identifier.
If link_identifier is omitted, the last opened connection will be used.
Example 1. mysql_get_proto_info Example
?php mysql_connect( "localhost", "mysql_user", "mysql_password") or die("Could not connect: ". mysql_error()); printf ("MySQL protocol version: %s\n", mysql_get_proto_info());?
The above example would produce the following output:
MySQL protocol version:
See also: mysql_get_client_info(), mysql_get_host_info() and mysql_get_server_info().
Prev
Home
Next
Up
PHP Manual
Prev
Next
mysql_get_server_info() returns the server version used by connection link_identifier.
If link_identifier is omitted, the last opened connection will be used.
Example 1. mysql_get_server_info Example
?php mysql_connect( "localhost", "mysql_user", "mysql_password") or die("Could not connect: ". mysql_error()); printf ("MySQL server version: %s\n", mysql_get_server_info());?
The above example would produce the following output:
MySQL server version:
See also: mysql_get_client_info(), mysql_get_host_info() and mysql_get_proto_info().
Prev
Home
Next
Up
PHP Manual
Prev
Next
mysql_info() returns detailed information about the last query using the given link_identifier.
If link_identifier isn 't specified, the last opened link is assumed.
mysql_info() returns a string for all statements listed below.
For all other FALSE.
The string format depends on the given statement.
Example 1.
Relevant MySQL Statements
VALUES statement only if multiple value lists are specified in the statement.
See also: mysql_affected_rows()
Prev
Home
Next
Up
PHP Manual
Prev
Next
mysql_insert_id() returns the ID generated for an AUTO_INCREMENT column by the previous INSERT query using the given link_identifier.
If link_identifier isn 't specified, the last opened link is assumed.
mysql_insert_id() returns 0 if the previous query does not generate an AUTO_INCREMENT value.
If you need to save the value for later, be sure to call mysql_insert_id() immediately after the query that generates the value.
Note:
The value of the MySQL SQL function LAST_INSERT_ID() always contains the most recently generated AUTO_INCREMENT value, and is not reset between queries.
Warning
mysql_insert_id() converts the return type of the native MySQL C API function mysql_insert_id() to a type of long (named int in PHP).
If your AUTO_INCREMENT column has a column type of BIGINT, the value returned by mysql_insert_id() will be incorrect.
Instead, use the internal MySQL SQL function LAST_INSERT_ID() in an SQL query.
Example 1. mysql_insert_id Example
?php mysql_connect( "localhost", "mysql_user", "mysql_password") or die("Could not connect: ". mysql_error()); mysql_select_db("mydb"); mysql_query("INSERT INTO mytable (product) values ('kossu')"); printf ("Last inserted record has id %d\n", mysql_insert_id());?
See also: mysql_query().
Prev
Home
Next
Up
PHP Manual
Prev
Next
mysql_list_dbs() will return a result pointer containing the databases available from the current mysql daemon.
Use the mysql_tablename() function to traverse this result pointer, or any function for result tables.
Example 1. mysql_list_dbs() example
?php $link = mysql_connect( 'localhost', 'mysql_user', 'mysql_password'); $db_list = mysql_list_dbs($link); while ($row = mysql_fetch_object($db_list)) {echo $row - Database. "\n";}?
The above example would produce the following output:
database1 database2 database3...
Note:
The above code would just as easily work with mysql_fetch_row() or other similar functions.
For downward compatibility mysql_listdbs() can also be used.
This is deprecated however.
See also mysql_db_name().
Prev
Home
Next
Up
PHP Manual
Prev
Next
mysql_list_fields() retrieves information about the given table name.
Arguments are the database name and the table name.
A result pointer is returned which can be used with mysql_field_flags(), mysql_field_len(), mysql_field_name(), and mysql_field_type().
Example 1. mysql_list_fields() example
?php $link = mysql_connect( 'localhost', 'mysql_user', 'mysql_password'); $fields = mysql_list_fields("database1", "table1", $link); $columns = mysql_num_fields($fields); for ($i = 0; $i $columns; $i++) {echo mysql_field_name($fields, $i). "\n";}
The above example would produce the following output:
field1 field2 field3...
For downward compatibility mysql_listfields() can also be used.
This is deprecated however.
Prev
Home
Next
Up
PHP Manual
Prev
Next
mysql_list_processes() returns a result pointer describing the current server threads.
Example 1. mysql_list_processes() example
?php $link = mysql_connect( 'localhost', 'mysql_user', 'mysql_password'); $result = mysql_list_processes($link); while ($row = mysql_fetch_row($result)) {printf("%s %s %s %s %s\n", $row["Id"], $row["Host"], $row["db"], $row["Command"], $row["Time"]);} mysql_free_result ($result);?
The above example would produce the following output:
Prev
Home
Next
Up
PHP Manual
Prev
Next
mysql_list_tables() takes a database name and returns a result pointer much like the mysql_query() function.
You can use the mysql_tablename() function to extract the actual table names from the result pointer, or any other result table function such as mysql_fetch_assoc().
The database parameter is the name of the database to retrieve the list of tables from.
Upon failure, mysql_list_tables() returns FALSE.
For downward compatibility, the function alias named mysql_listtables() can be used.
This is deprecated however and is not recommended.
Example 1. mysql_list_tables Example
?php $dbname = 'mysql_dbname'; if (!mysql_connect('mysql_host', 'mysql_user', 'mysql_password')) {print'Could not connect to mysql'; exit;} $result = mysql_list_tables($dbname); if (!$result) {print "DB Error, could not list tables\n"; print'MySQL Error:'. mysql_error(); exit;} while ($row = mysql_fetch_row($result)) {print "Table: $row[0]\n";} mysql_free_result($result);?
See also: mysql_list_dbs(), and mysql_tablename().
Prev
Home
Next
Up
PHP Manual
Prev
Next
(PHP 3, PHP 4)
mysql_num_fields() returns the number of fields in a result set.
See also: mysql_select_db(), mysql_query(), mysql_fetch_field(), mysql_num_rows().
For downward compatibility mysql_numfields() can also be used.
This is deprecated however.
Prev
Home
Next
Up
PHP Manual
Prev
Next
mysql_num_rows() returns the number of rows in a result set.
This command is only valid for SELECT statements.
To retrieve the number of rows affected by a INSERT, UPDATE or DELETE query, use mysql_affected_rows().
Example 1. mysql_num_rows() example
?php $link = mysql_connect( "localhost", "mysql_user", "mysql_password"); mysql_select_db("database", $link); $result = mysql_query("SELECT * FROM table1", $link); $num_rows = mysql_num_rows($result); echo "$num_rows Rows\n";?
Note:
If you use mysql_unbuffered_query(), mysql_num_rows() will not return the correct value until all the rows in the result set have been retrieved.
See also: mysql_affected_rows(), mysql_connect(), mysql_data_seek(), mysql_select_db(), and mysql_query().
For downward compatibility mysql_numrows() can also be used.
This is deprecated however.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns a positive MySQL persistent link identifier on success, or FALSE on error.
mysql_pconnect() establishes a connection to a MySQL server.
The client_flags parameter can be a combination of the constants MYSQL_CLIENT_SSL, MYSQL_CLIENT_COMPRESS, MYSQL_CLIENT_IGNORE_SPACE or MYSQL_CLIENT_INTERACTIVE.
The server parameter can also include a port number. eg. "hostname:port" or a path to a socket eg. ": / path / to / socket" for the localhost.
Note:
Support for ":port" was added in 3.0B4.
Support for the ": / path / to / socket" was added in 3.0.10.
mysql_pconnect() acts very much like mysql_connect() with two major differences.
First, when connecting, the function would first try to find a (persistent) link that's already open with the same host, username and password.
If one is found, an identifier for it will be returned instead of opening a new connection.
Second, the connection to the SQL server will not be closed when the execution of the script ends.
The optional client_flags parameter became available in PHP 4.3.0.
This type of link is therefore called 'persistent'.
Note:
Note, that these kind of links only work if you are using a module version of PHP.
See the Persistent Database Connections section for more information.
Warning
Using persistent connections can require a bit of tuning of your Apache and MySQL configurations to ensure that you do not exceed the number of connections allowed by MySQL.
Prev
Home
Next
Up
PHP Manual
Prev
Next
mysql_ping() checks whether or not the connection to the server is working.
If it has gone down, an automatic reconnection is attempted.
This function can be used by scripts that remain idle for a long while, to check whether or not the server has closed the connection and reconnect if necessary. mysql_ping() returns TRUE if the connection to the server is working, otherwise FALSE.
See also: mysql_thread_id(), mysql_list_processes().
Prev
Home
Next
Up
PHP Manual
Prev
Next
mysql_query() sends a query to the currently active database on the server that's associated with the specified link identifier.
If link_identifier isn 't specified, the last opened link is assumed.
The optional result_mode parameter can be MYSQL_USE_RESULT and MYSQL_STORE_RESULT.
It defaults to MYSQL_STORE_RESULT, so the result is buffered.
Note:
Only for SELECT,SHOW,EXPLAIN or DESCRIBE statements mysql_query() returns a resource identifier or FALSE if the query was not executed correctly.
For other type of SQL statements, mysql_query() returns TRUE on success and FALSE on error.
A non - FALSE return value means that the query was legal and could be executed by the server.
It does not indicate anything about the number of rows affected or returned.
The following query is syntactically invalid, so mysql_query() fails and returns FALSE:
Example 1. mysql_query()
php $result = mysql_query( "SELECT * WHERE 1=1") or die("Invalid query: ". mysql_error());?
The following query is semantically invalid if my_col is not a column in the table my_tbl, so mysql_query() fails and returns FALSE:
Example 2. mysql_query()
?php $result = mysql_query( "SELECT my_col FROM my_tbl") or die("Invalid query: ". mysql_error());?
mysql_query() will also fail and return FALSE if you don't have permission to access the table(s) referenced by the query.
Assuming the query succeeds, you can call mysql_num_rows() to find out how many rows were returned for a SELECT statment or mysql_affected_rows() to find out how many rows were affected by a DELETE, INSERT, REPLACE, or UPDATE statement.
Only for SELECT,SHOW,DESCRIBE or EXPLAIN statements, mysql_query() returns a new result identifier that you can pass to mysql_fetch_array() and other functions dealing with result tables.
When you are done with the result set, you can free the resources associated with it by calling mysql_free_result().
Although, the memory will automatically be freed at the end of the script 's execution.
See also: mysql_num_rows(), mysql_affected_rows(), mysql_unbuffered_query(), mysql_free_result(), mysql_fetch_array(), mysql_fetch_row(), mysql_fetch_assoc(), mysql_result(), mysql_select_db(), and mysql_connect().
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function will escape special characters in the unescaped_string, taking into account the current charset of the connection so that it is safe to place it in a mysql_query().
Example 1. mysql_real_escape_string() example
The above example would produce the following output:
See also: mysql_escape_string(), mysql_character_set_name().
Prev
Home
Next
Up
PHP Manual
Prev
Next
mysql_result() returns the contents of one cell from a MySQL result set.
The field argument can be the field' s offset, or the field's name, or the field's table dot field name (tablename.fieldname).
If the column name has been aliased ('select foo as bar from.. .'), use the alias instead of the column name.
As these functions return the contents of multiple cells in one function call, they' re MUCH quicker than mysql_result().
Also, note that specifying a numeric offset for the field argument is much quicker than specifying a fieldname or tablename.fieldname argument.
Calls to mysql_result() should not be mixed with calls to other functions that deal with the result set.
Recommended high-performance alternatives: mysql_fetch_row(), mysql_fetch_array(), and mysql_fetch_object().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
mysql_select_db() sets the current active database on the server that's associated with the specified link identifier.
If no link identifier is specified, the last opened link is assumed.
If no link is open, the function will try to establish a link as if mysql_connect() was called without arguments, and use it.
Every subsequent call to mysql_query() will be made on the active database.
See also: mysql_connect(), mysql_pconnect(), and mysql_query().
For downward compatibility mysql_selectdb() can also be used.
This is deprecated however.
Prev
Home
Next
Up
PHP Manual
Prev
Next
mysql_stat() returns the current server status.
For a complete list of other status variables you have to use the SHOW STATUS SQL command.
Example 1. mysql_stat() example
?php $link = mysql_connect( 'localhost', "mysql_user", "mysql_password"); $status = explode( '', mysql_stat($link)); print_r($status);?
The above example would produce the following output:
Array ([0] = Uptime:
5380 [1] = Threads:
2 [2] = Questions:
1321299 [3] = Slow queries:
0 [4] = Opens:
26 [5] = Flush tables:
1 [6] = Open tables:
17 [7] = Queries per second avg:
245.595)
Prev
Home
Next
Up
PHP Manual
Prev
Next
mysql_tablename() takes a result pointer returned by the mysql_list_tables() function as well as an integer index and returns the name of a table.
The mysql_num_rows() function may be used to determine the number of tables in the result pointer.
Example 1. mysql_tablename() Example
?php mysql_connect( "localhost", "mysql_user", "mysql_password"); $result = mysql_list_tables("mydb"); for ($i = 0; $i mysql_num_rows($result); $i++) printf ("Table: %s\n", mysql_tablename($result, $i)); mysql_free_result($result);?
See also: mysql_list_tables().
Prev
Home
Next
Up
PHP Manual
Prev
Next
If the connection is lost and you reconnect with mysql_ping(), the thread ID will change.
You should get it when you need it.
Example 1. mysql_thread_id() example
?php $link = mysql_connect( 'localhost', 'mysql_user', 'mysql_password'); $thread_id = mysql_thread_id($link); if ($thread_id) {printf ("current thread id is %d\n", $thread_id);}?
The above example would produce the following output:
current thread id is 73
See also: mysql_ping(), mysql_list_processes().
Prev
Home
Next
Up
PHP Manual
Prev
Next
On the one hand, this saves a considerable amount of memory with SQL queries that produce large result sets.
On the other hand, you can start working on the result set immediately after the first row has been retrieved: you don 't have to wait until the complete SQL query has been performed.
The optional result_mode parameter can be MYSQL_USE_RESULT and MYSQL_STORE_RESULT.
It defaults to MYSQL_USE_RESULT, so the result is not buffered.
Note:
You cannot use mysql_num_rows() on a result set returned from mysql_unbuffered_query().
You also have to fetch all result rows from an unbuffered SQL query, before you can send a new SQL query to MySQL.
See also: mysql_query().
Prev
Home
Next
Up
PHP Manual
Prev
Next
This is described as a "natural ordering".
natcasesort() is a case insensitive version of natsort().
See natsort() for an example of the difference between this algorithm and the regular computer string sorting algorithms.
Martin Pool 's Natural Order String Comparison page.
See also sort(), natsort(), strnatcmp(), and strnatcasecmp().
Prev
Home
Next
Up
PHP Manual
Prev
Next
This is described as a "natural ordering".
An example of the difference between this algorithm and the regular computer string sorting algorithms (used in sort()) can be seen below:
Example 1. natsort() example
?php $array1 = $array2 = array ("img12.png", "img10.png", "img2.png", "img1.png"); sort($array1); echo "Standard sorting\n"; print_r($array1); natsort($array2); echo "\nNatural order sorting\n"; print_r($array2);?
The code above will generate the following output:
Note:
See also natcasesort(), strnatcmp(), and strnatcasecmp().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Example 1. ncurses_getmouse() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Example 1. ncurses_mousemask() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the array element in the next place that 's pointed by the internal array pointer, or FALSE if there are no more elements.
It advances the internal array pointer one place forward before returning the element.
That means it returns the next array element and advances the internal array pointer by one.
If advancing the internal array pointer results in going beyond the end of the element list, next() returns FALSE.
Warning
If the array contains empty elements, or elements that have a key value of 0 then this function will return FALSE for these elements as well.
To properly traverse an array which may contain empty elements or elements with key values of 0 see the each() function.
See also current(), end(), prev(), and reset().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Starting with PHP 4.0.5, nl2br() is now XHTML compliant.
See also htmlspecialchars(), htmlentities(), wordwrap(), and str_replace().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Example 1. number_format() Example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function discards the contents of the output buffer and turns off output buffering.
See also ob_start(), ob_clean() and ob_end_flush().
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function will send the contents of the output buffer (if any) and turn output buffering off.
If you want to further process the buffer' s contents you have to call ob_get_contents() before ob_end_flush() as the buffer contents are discarded after ob_end_flush() is called.
See also ob_start(), ob_get_contents(), ob_flush() and ob_end_clean().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
This will return the contents of the output buffer or FALSE, if output buffering isn 't active.
See also ob_start() and ob_get_length().
Prev
Home
Next
Up
PHP Manual
Prev
Next
This will return the length of the contents in the output buffer or FALSE, if output buffering isn 't active.
See also ob_start() and ob_get_contents().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Example 1. ob_gzhandler() Example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. ob_iconv_handler() example:
Prev
Home
Next
Up
PHP Manual
Prev
Next
ob_implicit_flush() will turn implicit flushing on or off (if no flag is given, it defaults to on).
Implicit flushing will result in a flush operation after every output call, so that explicit calls to flush() will no longer be needed.
Turning implicit flushing on will disable output buffering, the output buffers current output will be sent as if ob_end_flush() had been called.
See also flush(), ob_start(), and ob_end_flush().
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function will turn output buffering on.
The contents of this internal buffer may be copied into a string variable using ob_get_contents().
Alternatively, ob_end_clean() will silently discard the buffer contents.
This function takes a string as a parameter and should return a string.
The function will be called when ob_end_flush() is called, or when the output buffer is flushed to the browser at the end of the request.
When output_callback is called, it will receive the contents of the output buffer as its parameter and is expected to return a new output buffer as a result, which will be sent to the browser.
In PHP 4.0.4, ob_gzhandler() was introduced to facilitate sending gz-encoded data to web browsers that support compressed web pages. ob_gzhandler() determines what type of content encoding the browser will accept and will return it's output accordingly.
Output buffers are stackable, that is, you may call ob_start() while another ob_start() is active.
If multiple output callback functions are active, output is being filtered sequentially through each of them in nesting order.
ob_end_clean(), ob_end_flush(), ob_clean(), ob_flush() and ob_start() may not be called from a callback function.
If you would like to delete the contents of a buffer, return "" (a null string) from callback function.
Example 1.
User defined callback function example
?php function callback( $buffer) {/ / replace all the apples with oranges return (ereg_replace("apples", "oranges", $buffer));} ob_start("callback");? html body p It's like comparing apples to oranges. / body / html ?php ob_end_flush();?
html body p It 's like comparing oranges to oranges. / body / html
See also ob_get_contents(), ob_end_flush(), ob_end_clean(), ob_implicit_flush() and ob_gzhandler().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Warning
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Example 2.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Example 2.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
OpenSSL functions
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 1.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Executes a statement prepared with odbc_prepare() .Returns TRUE on success or FALSE on failure.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. odbc_fetch_into() pre 4.0.6 example
Example 2. odbc_fetch_into() 4.0.6 example
Example 3. odbc_fetch_into() 4.2.0 example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
You can suppress the error output of opendir() by prepending `@ 'to the front of the function name.
Prev
Home
Next
Up
PHP Manual
Prev
Next
openlog() opens a connection to the system logger for a program.
The string ident is added to each message.
Values for option and facility are given below.
The option argument is used to indicate what logging options will be used when generating a log message.
The facility The facility argument is used to specify what type of program is logging the message.
This allows you to specify (in your machine's syslog configuration) how messages coming from different facilities will be handled.
The use of openlog() is optional.
It will automatically be called by syslog() if necessary, in which case ident will default to FALSE.
Table 1. openlog() Options
Constant
Description
if there is an error while sending data to the system logger, write directly to the system console
open the connection to the logger immediately
(default) delay opening the connection until the first message is logged
print log message also to standard error
include PID with each message
Table 2. openlog() Facilities
Constant
Description
security / authorization messages (use LOG_AUTHPRIV instead in systems where that constant is defined)
security / authorization messages (private)
clock daemon (cron and at)
other system daemons
kernel messages
reserved for local use, these are not available in Windows
line printer subsystem
mail subsystem
USENET news subsystem
messages generated internally by syslogd
generic user-level messages
UUCP subsystem
See also define_syslog_variables(), syslog() and closelog().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
OpenSSL functions
Up
PHP Manual
Prev
Next
Note:
Table 1.
Returns TRUE on success or FALSE on failure.
Example 1. openssl_csr_new() example - creating a self-signed-certificate
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Example 1. openssl_csr_sign() example - signing a CSR (how to implement your own CA)
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. openssl_error_string() example
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
openssl_free_key() frees the key associated with the specified key_identifier from memory.
Prev
Home
Next
Up
PHP Manual
Prev
Next
(PHP 4 = 4.0.4)
This is an alias for openssl_pkey_get_private().
Prev
Home
Next
Up
PHP Manual
Prev
Next
(PHP 4 = 4.0.4)
This is an alias for openssl_pkey_get_public().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
If successful the opened data is returned in open_data.
openssl_open() opens (decrypts) sealed_data using the private key associated with the key identifier priv_key_id and the envelope key env_key, and fills open_data with the decrypted data.
The envelope key is generated when the data are sealed and can only be used by one specific private key.
See openssl_seal() for more information.
Example 1. openssl_open() example
/ / $sealed and $env_key are assumed to contain the sealed data / / and our envelope key, both given to us by the sealer. / / fetch private key from file and ready it $fp = fopen( "/ src / openssl-0.9.6 / demos / sign / key.pem", "r"); $priv_key = fread($fp, 8192); fclose($fp); $pkeyid = openssl_get_privatekey($priv_key); / / decrypt the data and store it in $open if (openssl_open($sealed, $open, $env_key, $pkeyid)) echo "here is the opened data:", $open; else echo "failed to open data"; / / free the private key from memory openssl_free_key($pkeyid);
See also openssl_seal().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. openssl_pkcs7_decrypt() example
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. openssl_pkcs7_encrypt() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. openssl_pkcs7_sign() example
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the length of the sealed data on success, or FALSE on error.
If successful the sealed data is returned in sealed_data, and the envelope keys in env_keys.
openssl_seal() seals (encrypts) data by using RC4 with a randomly generated secret key.
The key is encrypted with each of the public keys associated with the identifiers in pub_key_ids and each encrypted key is returned in env_keys.
This means that one can send sealed data to multiple recipients (provided one has obtained their public keys).
Each recipient must receive both the sealed data and the envelope key that was encrypted with the recipient 's public key.
Example 1. openssl_seal() example
/ / $data is assumed to contain the data to be sealed / / fetch public keys for our recipients, and ready them $fp = fopen( "/ src / openssl-0.9.6 / demos / maurice / cert.pem", "r"); $cert = fread($fp, 8192); fclose($fp); $pk1 = openssl_get_publickey($cert); / / Repeat for second recipient $fp = fopen(" / src / openssl-0.9.6 / demos / sign / cert.pem", "r"); $cert = fread($fp, 8192); fclose($fp); $pk2 = openssl_get_publickey($cert); / / seal message, only owners of $pk1 and $pk2 can decrypt $sealed with keys / / $ekeys[0] and $ekeys[1] respectively. openssl_seal($data, $sealed, $ekeys, array($pk1,$pk2)); / / free the keys from memory openssl_free_key($pk1); openssl_free_key($pk2);
See also openssl_open().
Prev
Home
Next
Up
PHP Manual
Prev
Next
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Returns TRUE on success or FALSE on failure.
openssl_sign() computes a signature for the specified data by using SHA1 for hashing followed by encryption using the private key associated with priv_key_id.
Note that the data itself is not encrypted.
Example 1. openssl_sign() example
/ / $data is assumed to contain the data to be signed / / fetch private key from file and ready it $fp = fopen( "/ src / openssl-0.9.6 / demos / sign / key.pem", "r"); $priv_key = fread($fp, 8192); fclose($fp); $pkeyid = openssl_get_privatekey($priv_key); / / compute signature openssl_sign($data, $signature, $pkeyid); / / free the key from memory openssl_free_key($pkeyid);
See also openssl_verify().
Prev
Home
Next
Up
PHP Manual
Prev
Next
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Returns 1 if the signature is correct, 0 if it is incorrect, and -1 on error.
openssl_verify() verifies that the signature is correct for the specified data using the public key associated with pub_key_id.
This must be the public key corresponding to the private key used for signing.
/ / $data and $signature are assumed to contain the data and the signature / / fetch public key from certificate and ready it $fp = fopen( "/ src / openssl-0.9.6 / demos / sign / cert.pem", "r"); $cert = fread($fp, 8192); fclose($fp); $pubkeyid = openssl_get_publickey($cert); / / state whether signature is okay or not $ok = openssl_verify($data, $signature, $pubkeyid); if ($ok == 1) echo "good"; elseif ($ok == 0) echo "bad"; else echo "ugly, error checking signature"; / / free the key from memory openssl_free_key($pubkeyid);
See also openssl_sign().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 1. openssl_x509_checkpurpose() purposes
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. ora_fetch_into()
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the ASCII value of the first character of string.
This function complements chr().
Example 1. ord() example
You can find an ASCII-table over here: http: / /www.asciitable.com.
See also chr().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PDF functions
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. ovrimos_connect() Example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Example 2.
Example 3. ovrimos_result_all example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
Output Control Functions
PHP Manual
Prev
Next
Pack given arguments into binary string according to format.
Returns binary string containing data.
The idea to this function was taken from Perl and all formatting codes work the same as there, however, there are some formatting codes that are missing such as Perl' s "u "format code.
The format string consists of format codes followed by an optional repeater argument.
The repeater argument can be either an integer value or * for repeating to the end of the input data.
For a, A, h, H the repeat count specifies how many characters of one data argument are taken, for @ it is the absolute position where to put the next data, for everything else the repeat count specifies how many data arguments are consumed and packed into the resulting binary string.
Currently implemented are
a NUL-padded string
A SPACE-padded string
h Hex string, low nibble first
H Hex string, high nibble first
s signed short (always 16 bit, machine byte order)
S unsigned short (always 16 bit, machine byte order)
n unsigned short (always 16 bit, big endian byte order)
v unsigned short (always 16 bit, little endian byte order)
i signed integer (machine dependent size and byte order)
I unsigned integer (machine dependent size and byte order)
l signed long (always 32 bit, machine byte order)
L unsigned long (always 32 bit, machine byte order)
N unsigned long (always 32 bit, big endian byte order)
V unsigned long (always 32 bit, little endian byte order)
f float (machine dependent size and representation)
d double (machine dependent size and representation)
Example 1. pack() format string
The resulting binary string will be 6 bytes long and contain the byte sequence 0x12, 0x34, 0x78, 0x56, 0x41, 0x42.
Note that the distinction between signed and unsigned values only affects the function unpack(), where as function pack() gives the same result for signed and unsigned format codes.
Also note that PHP internally stores integer Also note that PHP internally stores integer values as signed values of a machine dependent size.
If you give it an unsigned integer value too large to be stored that way it is converted to a float which often yields an undesired result.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Note:
Note:
Example 1.
Example 2. parse_ini_file() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
If the second parameter arr is present, variables are stored in this variable as an array elements instead.
Support for the optional second parameter was added in PHP 4.0.3.
To get the current QUERY_STRING, you may use the variable $_SERVER[ 'QUERY_STRING'].
See also parse_url(), pathinfo(), set_magic_quotes_runtime(), and urldecode().
Prev
Home
Next
Up
PHP Manual
Prev
Next
fragment - after the hashmark #
Partial urls are also accepted, parse_url() tries its best to parse them correctly.
Prev
Home
Next
Up
PHP Manual
Prev
Next
The passthru() function is similar to the exec() function in that it executes a command.
If the return_var argument is present, the return status of the Unix command will be placed here.
A common use for this is to execute something like the pbmplus utilities that can output an image stream directly.
By setting the Content-type to image / gif and then calling a pbmplus program to output a gif, you can create PHP scripts that output images directly.
If you are going to allow data coming from user input to be passed to this function, then you should be using escapeshellarg() or escapeshellcmd() to make sure that users cannot trick the system into executing arbitrary commands.
Note:
If you start a program using this function and want to leave it running in the background, you have to make sure that the output of that program is redirected to a file or some other output stream or else PHP will hang until the execution of the program ends.
See also exec(), system(), popen(), escapeshellcmd(), and the backtick operator.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. pathinfo() Example
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Closes a file pointer to a pipe opened by popen().
The file pointer must be valid, and must have been returned by a successful call to popen().
Returns the termination status of the process that was run.
See also popen().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. pcntl_fork() Example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Note:
Note:
Example 1. pcntl_signal() Example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 1. possible values for pid
Table 2. possible values for options
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
Program Execution functions
PHP Manual
Prev
Next
pdf_add_outline() is replaced by pdf_add_note()
See also pdf_add_note().
Prev
Home
Next
PDF functions
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Deprecated.
See pdf_add_bookmark().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Draw a counterclockwise circular arc from alpha to beta degrees
See also: pdf_arcn()
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Add a new page to the document.
The width and height are specified in points, which are 1 / 72 of an inch.
Common Page Sizes in Points
letter (8.5"✗11")
legal (8.5"✗14")
ledger (17"✗11")
Prev
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Draw a circle with center (x, y) and radius r.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Use the current path as clipping path.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Close the generated PDF file, and free all document-related resources.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Close an image retrieved with one of the pdf_open_image*() functions.
Prev
Home
Next
Up
PHP Manual
Prev
Next
(PHP 3 = 3.0.6, PHP 4)
Close the path, fill, and stroke it.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Close the current path.
Prev
Home
Next
Up
PHP Manual
Prev
Next
(PHP 3 = 3.0.6, PHP 4)
Close the path, and stroke it.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Print text at the next line.
The spacing between lines is determined by the leading parameter.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Draw a Bezier curve from the current point, using 3 more control points.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
(PHP 3 = 3.0.6, PHP 4)
Finish the page.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Deprecated, use one of the stroke, fill, or clip functions instead.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
(PHP 3 = 3.0.6, PHP 4)
Fill the interior of the path with the current fill color.
Prev
Home
Next
Up
PHP Manual
Prev
Next
(PHP 3 = 3.0.6, PHP 4)
Fill and stroke the path with the current fill and stroke color.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. pdf_findfont() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
pdf_get_image_height() is deprecated, use pdf_get_value() instead.
Prev
Home
Next
Up
PHP Manual
Prev
Next
The pdf_get_image_width() is deprecated, use pdf_get_value() instead.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
(PHP 4 = 4.0.1)
Get the contents of some PDFlib parameter with string type.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
(PHP 4 = 4.0.1)
Get the contents of some PDFlib parameter with float type.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Draw a line from the current point to (x, y).
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
See pdf_set_text_pos() to set the text output position.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Deprecated.
See pdf_open_image(),
Prev
Home
Next
Up
PHP Manual
Prev
Next
pdf_open() is deprecated, use pdf_new() plus pdf_open_file() instead.
See also pdf_new(), pdf_open_file().
Prev
Home
Next
Up
PHP Manual
Prev
Next
(PHP 3 CVS only, PHP 4)
Open an image file.
Supported types are "jpeg", "tiff", "gif", and "png". stringparam is either "", "mask", "masked", or "page". intparam is either 0, the image id of the applied mask, or the page.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Deprecated.
See also pdf_open_image(),
Prev
Home
Next
Up
PHP Manual
Prev
Next
The pdf_open_memory_image() The pdf_open_memory_image() function takes an image created with the PHP's image functions and makes it available for the pdf object.
Example 1.
See also pdf_close_image(), pdf_place_image().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Deprecated.
See pdf_open_image().
Prev
Home
Next
Up
PHP Manual
Prev
Next
(PHP 4)
Deprecated.
See also pdf_open_image(),
Prev
Home
Next
Up
PHP Manual
Prev
Next
(PHP 3 = 3.0.7, PHP 4)
Place an image with the lower left corner at (x, y), and scale it.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
(PHP 3 = 3.0.6, PHP 4)
Draw a rectangle at lower left (x, y) with width and height.
Prev
Home
Next
Up
PHP Manual
Prev
Next
(PHP 3 = 3.0.6, PHP 4)
Restore the most recently saved graphics state.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Rotate the coordinate system by phi degrees.
Prev
Home
Next
Up
PHP Manual
Prev
Next
(PHP 3 = 3.0.6, PHP 4)
Save the current graphics state.
Prev
Home
Next
Up
PHP Manual
Prev
Next
(PHP 3 = 3.0.6, PHP 4)
Scale the coordinate system.
Prev
Home
Next
Up
PHP Manual
Prev
Next
(PHP 3 = 3.0.12, PHP 4)
Set the border color for all kinds of annotations.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Set the border dash style for all kinds of annotations.
See pdf_setdash().
Prev
Home
Next
Up
PHP Manual
Prev
Next
(PHP 3 = 3.0.12, PHP 4)
Set the border style for all kinds of annotations. style is "solid" or "dashed ".
Prev
Home
Next
Up
PHP Manual
Prev
Next
Deprecated.
See also pdf_set_value(),
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Set the current dash pattern to b black and w white units.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Deprecated.
See pdf_set_value().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Set the flatness to a value between 0 and 100 inclusive.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Deprecated.
You should use pdf_findfont() plus pdf_setfont() instead.
See pdf_findfont(), pdf_setfont().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Set the current fill color to a gray value between 0 and 1 inclusive.
Deprecated, use pdf_setcolor() instead.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Set the current fill and stroke color.
Deprecated, use pdf_setcolor() instead.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Set the current stroke color to a gray value between 0 and 1 inclusive
Deprecated, use pdf_setcolor() instead.
Prev
Home
Next
Up
PHP Manual
Prev
Next
See also pdf_set_value(),
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
(PHP 4 = 4.0.1)
Fill document information field key with value. key is one of "Subject", "Title", "Creator", "Author", "Keywords", or a user-defined key.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Deprecated.
See also pdf_set_value(),
Prev
Home
Next
Up
PHP Manual
Prev
Next
Set the linecap parameter to a value between 0 and 2 inclusive.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Set the line join parameter to a value between 0 and 2 inclusive.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Set the current linewidth to width.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Set the miter limit to a value greater than or equal to 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Set some PDFlib parameter with string type.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Set the current fill color to the supplied RGB values.
Deprecated, use pdf_setcolor() instead.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Set the current fill and stroke color to the supplied RGB values.
Deprecated, use pdf_setcolor() instead.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Set the current stroke color to the supplied RGB values.
Deprecated, use pdf_setcolor() instead.
Prev
Home
Next
Up
PHP Manual
Prev
Next
See pdf_set_paramter().
Prev
Home
Next
Up
PHP Manual
Prev
Next
(PHP 3 = 3.0.6, PHP 4)
Set the text output position.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Deprecated.
See pdf_set_value(),
Prev
Home
Next
Up
PHP Manual
Prev
Next
Deprecated.
See pdf_set_value(),
Prev
Home
Next
Up
PHP Manual
Prev
Next
Set the value of some PDFlib parameter with float type.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Deprecated.
See also pdf_set_value(),
Prev
Home
Next
Up
PHP Manual
Prev
Next
Format text in the current font and size into the supplied text box according to the requested formatting mode, which must be one of "left", "right", "center", "justify", or "fulljustify".
If width and height are 0, only a single line is placed at the point (left, top) in the requested mode.
Returns the number of characters that did not fit in the specified box.
Returns 0 if all characters fit or the width and height parameters were set to 0 for single-line formattting.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Print text in the current font and size at the current position.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Print text in the current font at (x, y).
Prev
Home
Next
Up
PHP Manual
Prev
Next
Skew the coordinate system in x and y direction by alpha and beta degrees.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Please note that font is a font handle returned by pdf_findfont().
Both the font and size parameters must used together.
See Also: pdf_setfont() and pdf_findfont().
Prev
Home
Next
Up
PHP Manual
Prev
Next
(PHP 3 = 3.0.6, PHP 4)
Stroke the path with the current color and line width, and clear it.
Prev
Home
Next
Up
PHP Manual
Prev
Next
(PHP 3 = 3.0.6, PHP 4)
Translate the origin of the coordinate system.
Prev
Home
Next
Up
Verisign Payflow Pro functions
PHP Manual
Prev
Next
pfpro_cleanup() is used to shutdown the Payflow Pro library cleanly.
It should be called after you have processed any transactions and before the end of your script.
However you may omit this call, in which case this extension will automatically call pfpro_cleanup() after your script terminates.
See also pfpro_init().
Prev
Home
Next
Verisign Payflow Pro functions
Up
PHP Manual
Prev
Next
pfpro_init() is used to initialise the Payflow Pro library.
You may omit this call, in which case this extension will automatically call pfpro_init() before the first transaction.
See also pfpro_cleanup().
Prev
Home
Next
Up
PHP Manual
Prev
Next
An associative array containing the response
pfpro_process() processes a transaction with Payflow Pro.
The first parameter is an associative array containing keys and values that will be encoded and passed to the processor.
The second parameter is optional and specifies the host to connect to.
By default this is "test.signio.com", so you will certainly want to change this to "connect.signio.com" in order to process live transactions.
The third parameter specifies the port to connect on.
It defaults to 443, the standard SSL port.
The fourth parameter specifies the timeout to be used, in seconds.
This defaults to 30 seconds.
Note that this timeout appears to only begin once a link to the processor has been established and so your script could potentially continue for a very long time in the event of DNS or network problems.
The sixth parameter specifies the port to use.
The seventh and eighth parameters specify the logon identity and password to use on the proxy.
The function returns an associative array of the keys and values in the response.
Note:
Be sure to read the Payflow Pro Developers Guide for full details of the required parameters.
Example 1.
Payflow Pro example
?php pfpro_init(); $transaction = array('USER '= 'mylogin', 'PWD' = 'mypassword', 'PARTNER '= 'VeriSign', 'TRXTYPE' = 'S', 'TENDER '= 'C', 'AMT' = 1.50, 'ACCT '= '4111111111111111', 'EXPDATE' = '0904 '); $response = pfpro_process($transaction); if (!$response) {die("Couldn't establish link to Verisign.\n");} echo "Verisign response code was ".$response['RESULT']; echo ", which means: ".$response['RESPMSG'] ."\n"; echo "\nThe transaction request:"; print_r($transaction); echo "\nThe response: "; print_r($response); pfpro_cleanup();?
Prev
Home
Next
Up
PHP Manual
Prev
Next
A string containing the response.
pfpro_process_raw() processes a raw transaction string with Payflow Pro.
You should really use pfpro_process() instead, as the encoding rules of these transactions are non-standard.
The first parameter in this case is a string containing the raw transaction request.
All other parameters are the same as with pfpro_process().
The return value is a string containing the raw response.
Note:
Be sure to read the Payflow Pro Developers Guide for full details of the required parameters and encoding rules.
You would be well advised to use pfpro_process() instead.
Example 1.
Payflow Pro raw example
?php pfpro_init(); $response = pfpro_process_raw("USER=mylogin PWD[5]=m ndy PARTNER=VeriSign TRXTYPE=S TENDER=C AMT=1.50 ACCT=4111111111111111 EXPDATE=0904"); if (!$response) {die("Couldn't establish link to Verisign.\n");} echo "Verisign raw response was ".$response; pfpro_cleanup();?
Prev
Home
Next
Up
PHP Manual
Prev
Next
pfpro_version() returns the version string of the Payflow Pro library.
At the time of writing, this was L211.
Prev
Home
Next
Up
PHP Options Information
PHP Manual
Prev
Next
This function behaves exactly as fsockopen() with the difference that the connection is not closed after the script finishes.
It is the persistent version of fsockopen().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. pg_affected_rows()
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. pg_delete
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Example 1.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. pg_insert
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
When safe mode is enabled, PHP checks whether the files or directories you are about to operate on have the same UID (owner) as the script that is being executed.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Note:
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. pg_select
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. pg_update
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function prints out the credits listing the PHP developers, modules, etc.
It generates the appropriate HTML codes to insert the information in a page. flag is optional, and it defaults to CREDITS_ALL.
To generate a custom credits page, you may want to use the flag parameter.
For example to print the general credits, you will use somewhere in your code:
html head title My credits page / title / head body ?php / / some code of your own phpcredits( CREDITS_ALL); / / some more code? / body / html
Table 1.
Pre-defined phpcredits() flags
name
description
All the credits, equivalent to using:
It generates a complete stand-alone HTML page with the appropriate tags.
The credits for the documentation team
Usually used in combination with the other flags.
Indicates that the a complete stand-alone HTML page needs to be printed including the information indicated by the other flags.
General credits:
Language design and concept, PHP 4.0 authors and SAPI module.
A list of the core developers
A list of the extension modules for PHP, and their authors
A list of the server API modules for PHP, and their authors
See also: phpinfo(), phpversion(), and php_logo_guid().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Because every system is setup differently, phpinfo() is commonly used to check configuration settings and for available predefined variables on a given system.
The output may be customized by passing one or more of the following constants bitwise values summed together in the optional what parameter.
Table 1. phpinfo() options
See also: phpversion(), phpcredits(), php_logo_guid(), ini_get(), ini_set(), and the section on Predefined Variables.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
This functionality was added in PHP 4.0.0.
See also: phpinfo(), phpversion(), and phpcredits().
Prev
Home
Next
Up
PHP Manual
Prev
Next
php_sapi_name() returns a lowercase string which describes the type of interface between web server and PHP (Server API, SAPI).
In CGI PHP, this string is "cgi", in mod_php for Apache, this string is "apache" and so on.
Example 1. php_sapi_name() Example
$sapi_type = php_sapi_name(); if ($sapi_type == "cgi") print "You are using CGI PHP\n"; else print "You are not using CGI PHP\n";
Prev
Home
Next
Up
PHP Manual
Prev
Next
php_uname() returns a string with a description of the operating system PHP is built on.
Example 1. php_uname() Example
if (substr(php_uname(), 0, 7) == "Windows") {die ("Sorry, this script doesn't run on Windows.\n");}
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
This information is also available in the predefined constant PHP_VERSION.
?php / / prints e.g. 'Current PHP version:
4.1.1' echo'Current PHP version: '. phpversion();?
See also version_compare(), phpinfo(), phpcredits(), php_logo_guid(), and zend_version().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns a file pointer identical to that returned by fopen(), except that it is unidirectional (may only be used for reading or writing) and must be closed with pclose().
If an error occurs, returns FALSE.
If you' re looking for bi-directional support (two-way), use proc_open().
?php $handle = popen ("/ bin / ls", "r");?
If the command to be executed could not be found, a valid resource is returned.
?php error_reporting( E_ALL); / * Add redirection so we can get stderr. * / $handle = popen(' / path / to / spooge 2 1', 'r'); echo "'$handle'; ". gettype($handle). "\n"; $read = fread($handle, 2096); echo $read; pclose($handle);?
Prev
Home
Next
Up
PHP Manual
Prev
Next
This is an alias for current().
See also end(), next(), prev(), and reset().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
When safe mode is enabled, PHP checks whether the directory in which you are about to operate has the same UID (owner) as the script that is being executed.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Warning
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. preg_grep() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Example 2.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Example 2. find the word "web"
Example 3.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Example 2.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
When working with a replacement pattern where a backreference is immediately followed by another number (i.e.: placing a literal number immediately after a matched pattern), you cannot use the familiar \\1 notation for your backreference. \\11, for example, would confuse preg_replace() since it does not know whether you want the \\1 backreference followed by a literal 1, or the \\11 When working with a replacement pattern where a backreference is immediately followed by another number (i.e.: placing a literal number immediately after a matched pattern), you cannot use the familiar \\1 notation for your backreference. \\11, for example, would confuse preg_replace() since it does not know whether you want the \\1 backreference followed by a literal 1, or the \\11 backreference followed by nothing.
Example 1.
Note:
Example 2.
Example 3.
Example 4.
Example 5.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Example 1. preg_split() Example 1. preg_split() example:
Example 2.
Example 3.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the array element in the previous place that 's pointed by the internal array pointer, or FALSE if there are no more elements.
Warning
If the array contains empty elements then this function will return FALSE for these elements as well.
To properly traverse an array which may contain empty elements see the each() function.
prev() behaves just like next(), except it rewinds the internal array pointer one place instead of advancing it.
See also current(), end(), next(), and reset().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. printer_abort() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. printer_close() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. printer_create_dc() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. printer_draw_bmp() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. printer_draw_chord() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. printer_draw_elipse() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. printer_draw_line() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. printer_draw_pie() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. printer_draw_rectangle() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. printer_draw_roundrect() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. printer_draw_text() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. printer_get_option() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. printer_list() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. printer_logical_fontheight() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. printer_open() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. printer_select_brush() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. printer_select_font() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. printer_select_pen() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. printer_set_option() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. printer_start_doc() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. printer_write() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Produces output according to format, which is described in the documentation for sprintf().
See also print(), sprintf(), sscanf(), fscanf(), and flush().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note that the here document terminator must appear on a line with just a semicolon no extra whitespace!
See also echo(), printf(), and flush().
Prev
Home
Next
Up
PHP Manual
Prev
Next
As with anything that outputs its result directly to the browser, you can use the output-control functions to capture the output of this function, and save it in a string (for example).
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Note:
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. pspell_add_to_personal()
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. pspell_check()
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. pspell_add_to_personal()
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. pspell_config_create()
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. pspell_config_ignore()
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. pspell_config_mode()
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. pspell_config_personal()
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. pspell_config_repl()
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. pspell_config_runtogether()
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. pspell_new_config()
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. pspell_new()
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. pspell_new_personal()
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. pspell_add_to_personal()
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. pspell_store_replacement()
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. pspell_suggest()
Prev
Home
Next
Up
PHP Manual
Prev
Next
The safe_mode_allowed_env_vars directive contains a comma-delimited list of prefixes.
By default, users will only be able to set environment variables that begin with PHP_ (e.g.
The safe_mode_protected_env_vars directive contains a comma-delimited list of environment variables, that the end user won' t be able to change using putenv().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function returns an 8-bit binary string corresponding to the decoded quoted printable string.
This function is similar to imap_qprint(), except this one does not require the IMAP module to work.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns a version of str with a backslash character (\) before every character that is among these:
See also addslashes(), htmlentities(), htmlspecialchars(), nl2br(), and stripslashes().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
If a step value is given, it will be used as the increment between elements in the sequence. step should be given as a positive number.
Support for character sequences and decrementing arrays was added in 4.1.0.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns a string in which the sequences with percent (%) signs followed by two hex digits have been replaced with literal characters.
For example, the string
See also rawurlencode(), urldecode(), urlencode().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns a string in which all non-alphanumeric characters except
Example 1. rawurlencode() example 1
echo 'a href="ftp: / /user :', rawurlencode('foo @+% / '), '@ftp.my.com / x.txt "';
Or, if you pass information in a PATH_INFO component of the URL:
Example 2. rawurlencode() example 2
echo 'a href="http: / /x.com / department_list_script /', rawurlencode('sales and marketing / Miami'), '"';
See also rawurldecode(), urldecode(), urlencode() and RFC 1738
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the filename of the next file from the directory.
The filenames are returned in the order in which they are stored by the filesystem.
We are explicitly testing whether the return value is identical to (equal to and of the same type as--see Comparison Operators for more information) FALSE since otherwise, any directory entry whose name evaluates to FALSE will stop the loop (e.g. a directory named "0").
List all files in a directory
Note that readdir() will return the. and.. entries.
If you don 't want these, simply strip them out:
Example 2.
List all files in the current directory and strip out. and..
See also is_dir().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Reads a file and writes it to the output buffer.
Returns the number of bytes read from the file.
Tip:
You can use a URL as a filename with this function if the fopen wrappers have been enabled.
See fopen() for more details on how to specify the filename and Appendix I for a list of supported URL protocols.
You can use the optional second parameter and set it to "1", if you want to search for the file in the include_path, too.
See also fpassthru(), file(), fopen(), include(), require(), virtual() and Appendix I.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function adds a line to the command line history.
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function clears the entire command line history.
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function registers a completion function.
You must supply the name of an existing function which accepts a partial command line and returns an array of possible matches.
This is the same kind of functionality you 'd get if you hit your tab key while using Bash.
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function returns a single string from the user.
You may specify a string with which to prompt the user.
The line returned has the ending newline removed.
You must add this line to the history yourself using readline_add_history().
Example 1. readline()
/ / get 3 commands from user for ($i=0; $i 3; $i++) {$line = readline ("Command: "); readline_add_history ($line);} / /dump history print_r (readline_list_history()); / /dump variables print_r (readline_info());
Prev
Home
Next
Up
GNU Recode functions
PHP Manual
Prev
Next
If called with no parameters, this function returns an array of values for all the setting readline uses.
The elements will be indexed by the following values: done, end, erase_empty_line, library_version, line_buffer, mark, pending_input, point, prompt, readline_name, and terminal_name.
If called with one parameter, the value of that setting is returned.
If called with two parameters, the setting will be changed to the given value.
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function returns an array of the entire command line history.
The elements are indexed by integers starting at zero.
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function reads a command history from a file.
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function writes the command history to a file.
Prev
Home
Next
Up
PHP Manual
Prev
Next
readlink() does the same as the readlink C function and returns the contents of the symbolic link path or 0 in case of error.
See also is_link(), symlink(), and linkinfo().
Prev
Home
Next
Up
PHP Manual
Prev
Next
The resulting path will have no symbolic link, '/. /' or '/.. /' components.
Example 1. realpath() example
$real_path = realpath (".. /.. / index.php");
Prev
Home
Next
Up
PHP Manual
Prev
Next
Recode the file referenced by file handle input into the file referenced by file handle output according to the recode request.
Returns FALSE, if unable to comply, TRUE otherwise.
This function does not currently process filehandles referencing remote files (URLs).
Both filehandles must refer to local files.
Example 1.
Basic recode_file() example
Prev
Home
Next
GNU Recode functions
Up
PHP Manual
Prev
Next
Note:
This is an alias for recode_string().
It has been added in PHP 4.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Recode the string string according to the recode request request.
Returns the recoded string or FALSE, if unable to perform the recode request.
A simple recode request may be "lat1..iso646-de".
See also the GNU Recode documentation of your installation for detailed instructions about recode requests.
Example 1.
Basic recode_string() example:
print recode_string ("us..flat", "The following character has a diacritical mark: aacute ;");
Prev
Home
Next
Up
PHP Manual
Prev
Next
Registers the function named by function to be executed when script processing is complete.
If you call exit() within one registered shutdown function, processing will stop completely and no other registered shutdown functions will be called.
The registered shutdown functions are called after the request has been completed (including sending any output buffers), so it is not possible to send output to the browser using echo() or print(), or retrieve the contents of any output buffers using ob_get_contents().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
?php rename( "/ tmp / tmp_file.txt"," / home / user / login / docs / my_file.txt");?
Prev
Home
Next
Up
PHP Manual
Prev
Control Structures
Next
The require() statement includes and evaluates the specific file.
require() includes and evaluates a specific file.
require() and include() are identical in every way except how they handle failure. include() produces a Warning while require() results in a Fatal Error.
In other words, don' t hesitate to use require() if you want a missing file to halt processing of the page. include() does not behave this way, the script will continue regardless.
Be sure to have an appropriate include_path setting as well.
Example 12-2.
Basic require() examples
See the include() documentation for more examples.
Note:
Prior to PHP 4.0.2, the following applies: require() will always attempt to read the target file, even if the line it's on never executes.
The conditional statement won' t affect require().
Similarly, looping structures do not affect the behaviour of require().
Although the code contained in the target file is still subject to the loop, the require() itself happens only once.
Windows versions of PHP prior to PHP 4.3 do not support accessing remote files via this function, even if allow_url_fopen is enabled.
See also include(), require_once(), include_once(), eval(), file(), readfile(), virtual() and include_path.
Prev
Home
Next
Up
PHP Manual
Prev
Control Structures
Next
The require_once() statement includes and evaluates the specified file during the execution of the script.
This is a behavior similar to the require() This is a behavior similar to the require() statement, with the only difference being that if the code from a file has already been included, it will not be included again.
See the documentation for require() for more information on how this statement works.
For examples on using require_once() and include_once(), look at the PEAR code included in the latest PHP source code distributions.
Be aware, that the behaviour of require_once() and include_once() may not be what you expect on a non case sensitive operating system (such as Windows).
Example 12-8. require_once() is case sensitive
Warning
See also: require(), include(), include_once(), get_required_files(), get_included_files(), readfile(), and virtual().
Prev
Home
Next
Up
PHP Manual
Prev
Next
reset() rewinds array's internal pointer to the first element.
reset() returns the value of the first array element.
See also current(), each(), next(), and prev().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Control Structures
Next
If called from within a function, the return() statement immediately ends execution of the current function, and returns its argument as the value of the function call. return() will also end the execution of an eval() statement or script file.
If called from the global scope, then execution of the current script file is ended.
If the current script file was include() ed or require() ed, then control is passed back to the calling file.
Furthermore, if the current script file was include() ed, then the value given to return() will be returned as the value of the include() Furthermore, if the current script file was include() ed, then the value given to return() will be returned as the value of the include() call.
If return() is called from within the main script file, then script execution ends.
If the current script file was named by the auto_prepend_file or auto_append_file configuration options in the configuration file, then that script file 's execution is ended.
For more information, see Returning values.
Note:
Note that since return() is a language construct and not a function, the parentheses surrounding its arguments are not required--in fact, it is more common to leave them out than to use them, although it doesn't matter one way or the other.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Resets the directory stream indicated by dir_handle to the beginning of the directory.
Prev
Home
Next
Up
DOM XML functions
PHP Manual
Prev
Next
If an error occurs, returns 0, otherwise it returns 1.
The file pointer must be valid, and must point to a file successfully opened by fopen().
If you have opened the file in append ("a") mode, any data you write to the file will always be appended, regardless of the file position.
See also fseek() and ftell().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Attempts to remove the directory named by dirname.
The directory must be empty, and the relevant permissions must permit this.
Returns TRUE on success or FALSE on failure.
See also mkdir() and unlink().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Caution
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function sorts an array in reverse order (highest to lowest).
Example 1. rsort() example
$fruits = array ("lemon", "orange", "banana", "apple"); rsort ($fruits); reset ($fruits); while (list ($key, $val) = each ($fruits)) {echo "$key = $val\n";}
This example would display:
0 = orange 1 = lemon 2 = banana 3 = apple
The fruits have been sorted in reverse alphabetical order.
You may modify the behavior of the sort using the optional parameter sort_flags, for details see sort().
See also arsort(), asort(), ksort(), sort(), and usort().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Without the second parameter, rtrim() will strip these characters:
"\t" (ASCII 9 (0x09)), a tab.
"\r" (ASCII 13 (0x0D)), a carriage return.
"\x0B" (ASCII 11 (0x0B)), a vertical tab.
Simply list all characters that you want to be stripped.
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 13.
Functions
Next
Information may be passed to functions via the argument list, which is a comma-delimited list of variables and / or constants.
PHP supports passing arguments by value (the default), passing by reference, and default argument values.
Variable-length argument lists are supported only in PHP 4 and later; see Variable-length argument lists and the function references for func_num_args(), func_get_arg(), and func_get_args() for more information.
A similar effect can be achieved in PHP 3 by passing an array of arguments to a function:
By default, function arguments are passed by value (so that if you change the value of the argument within the function, it does not get changed outside of the function).
If you wish to allow a function to modify its arguments, you must pass them by reference.
If you want an argument to a function to always be passed by reference, you can prepend an ampersand () to the argument name in the function definition:
function add_some_extra( $string) {$string .= 'and something extra .';} $str = 'This is a string, '; add_some_extra($str); echo $str; / / outputs'This is a string, and something extra.'
A function may define C++-style default values for scalar arguments as follows:
function makecoffee ($type = "cappuccino") {return "Making a cup of $type.\n";} echo makecoffee (); echo makecoffee ("espresso");
The output from the above snippet is:
Making a cup of cappuccino.
Making a cup of espresso.
The default value must be a constant expression, not (for example) a variable or class member.
Note that when using default arguments, any defaults should be on the right side of any non-default arguments; otherwise, things will not work as expected.
Consider the following code snippet:
function makeyogurt ($type = "acidophilus", $flavour) {return "Making a bowl of $type $flavour.\n";} echo makeyogurt ("raspberry"); / / won't work as expected
The output of the above example is:
Missing argument 2 in call to makeyogurt() in / usr / local / etc / httpd / htdocs / php3test / functest.html on line 41 Making a bowl of raspberry.
Now, compare the above with this:
function makeyogurt ($flavour, $type = "acidophilus") {return "Making a bowl of $type $flavour.\n";} echo makeyogurt ("raspberry"); / / works as expected
The output of this example is:
Making a bowl of acidophilus raspberry.
PHP 4 has support for variable-length argument lists in user-defined functions.
This is really quite easy, using the func_num_args(), func_get_arg(), and func_get_args() functions.
No special syntax is required, and argument lists may still be explicitly provided with function definitions and will behave as normal.
Prev
Home
Next
Functions
Up
Returning values
PHP Manual
Prev
Next
TRUE on success, FALSE on error.
sem_acquire() blocks (if necessary) until the semaphore can be acquired.
A process attempting to acquire a semaphore which it has already acquired will block forever if acquiring the semaphore would cause its max_acquire value to be exceeded.
After processing a request, any semaphores acquired by the process but not explicitly released will be released automatically and a warning will be generated.
See also: sem_get() and sem_release().
Prev
Home
Next
Up
PHP Manual
Prev
Next
A positive semaphore identifier on success, or FALSE on error.
sem_get() returns an id that can be used to access the System V semaphore with the given key.
The semaphore is created if necessary using the permission bits specified in perm (defaults to 0666).
The number of processes that can acquire the semaphore simultaneously is set to max_acquire (defaults to 1).
Actually this value is set only if the process finds it is the only process currently attached to the semaphore.
A second call to sem_get() for the same key will return a different semaphore identifier, but both identifiers access the same underlying semaphore.
See also: sem_acquire(), sem_release() and ftok().
Note:
This function does not work on Windows systems.
Prev
Home
Next
Up
PHP Manual
Prev
Next
TRUE on success, FALSE on error.
sem_release() releases the semaphore if it is currently acquired by the calling process, otherwise a warning is generated.
After releasing the semaphore, sem_acquire() may be called to re-acquire it.
See also: sem_get() and sem_acquire().
Note:
This function does not work on Windows systems.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Example 1. serialize() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 1.
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 1.
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 1.
Table 2.
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. session_cache_limiter() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Example 2.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Caution
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. session_name() examples
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Caution
Caution
Caution
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Note:
Note:
Example 1. session_set_save_handler() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Caution
Caution
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
Shared Memory Functions
PHP Manual
Prev
Next
Like other headers, cookies must be sent before any output from your script (this is a protocol restriction).
If output exists prior to calling this function, setcookie() will fail and return FALSE.
This does not indicate whether the user accepted the cookie.
If only the name argument is present, the cookie by that name will be deleted from the remote client.
Because the expire and secure arguments are integers, they cannot be skipped with an empty string, use a zero (0) instead.
Table 1. setcookie() parameters explained
'cookiename' is called as $_COOKIE['cookiename']
The value of the cookie.
Assuming the name is' cookiename', this value is retrieved through $_COOKIE['cookiename']
In otherwords, you' ll most likely set this with the time() function plus the number of seconds before you want it to expire.
time( )+60*60*24*30 will set the cookie to expire in 30 days.
path
If set to '/', the cookie will be available within the entire domain.
The default value is the current directory that the cookie is being set in.
The. is not required but makes it compatible with more browsers.
Refer to tail matching in the spec for details.
When set to 1, the cookie will only be set if a secure connection exists.
Note, autoglobals such as $_COOKIE became available in PHP 4.1.0. $HTTP_COOKIE_VARS has existed since PHP 3.
Note:
In our examples below, $TextCookie will exist.
Cookies will not become visible until the next loading of a page that the cookie should be visible for.
Expire time is set via the expire parameter.
Cookies must be deleted with the same parameters as they were set with.
Consider explode() or serialize() to set one cookie with multiple names and values.
If you are trying to delete one cookie before inserting another you should put the insert before the delete.
Some examples follow how to send cookies:
Note that the value portion of the cookie will automatically be urlencoded when you send the cookie, and when it is received, it is automatically decoded and assigned to a variable by the same name as the cookie name.
?php / / Print an individual cookie echo $_COOKIE[ "TestCookie"]; echo $HTTP_COOKIE_VARS["TestCookie"]; / / Another way to debug / test is to view all cookies print_r($_COOKIE);?
Examples follow how to delete cookies sent in previous example:
?php / / set the expiration date to one hour ago setcookie ("TestCookie", "", time() - 3600); setcookie ("TestCookie","", time() - 3600, "/ ~rasmus /", ".example.com", 1);?
This has the effect of setting as many cookies as you have array elements, but when the cookie is received by your script, the values are all placed in an array with the cookie 's name:
For more information on cookies, see Netscape 's cookie specification at http: / /www.netscape.com / newsref / std / cookie_spec.html.
Netscape Communicator 4.05 and Microsoft Internet Explorer 3.x appear to handle cookies incorrectly when the path and time are not set.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Note:
Example 1.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function is an alias of stream_set_write_buffer().
Prev
Home
Next
Up
PHP Manual
Prev
Next
LC_ALL for all of the below
LC_CTYPE for character classification and conversion, for example strtoupper()
LC_NUMERIC for decimal separator (See also localeconv())
If locale is the empty string "", the locale names will be set from the values of environment variables with the same names as the above categories, or from "LANG ".
If locale is zero or "0", the locale setting is not affected, only the current setting is returned.
If locale is an array or followed by additional parameters then each array element or parameter is tried to be set as new locale until success.
Note:
Setlocale returns the new current locale, or FALSE if the locale functionality is not implemented in the platform, the specified locale does not exist or the category name is invalid.
Note:
It returns exactly what the system setlocale function returns.
?php / * Set locale to Dutch * / setlocale (LC_ALL, 'nl_NL'); / * Output: vrijdag 22 december 1978 * / echo strftime ("%A %e %B %Y", mktime (0, 0, 0, 12, 22, 1978)); / * try different possible locale names for german as of PHP 4.3.0 * / $loc_de = setlocale (LC_ALL, 'de_DE@euro', 'de_DE', 'de', 'ge'); echo "Preferred locale for german on this system is '$loc_de'";?
Prev
Home
Next
Up
PHP Manual
Prev
Next
Set the current active configuration setting of magic_quotes_runtime (0 for off, 1 for on).
See also: get_magic_quotes_gpc() and get_magic_quotes_runtime().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Set the number of seconds a script is allowed to run.
If this is reached, the script returns a fatal error.
If seconds is set to zero, no time limit is imposed.
When called, set_time_limit() When called, set_time_limit() restarts the timeout counter from zero.
In other words, if the timeout is the default 30 seconds, and 25 seconds into script execution a call such as set_time_limit( 20) is made, the script will run for a total of 45 seconds before timing out.
There is no workaround other than turning off safe mode or changing the time limit in the configuration file.
The set_time_limit() function and the configuration directive max_execution_time only affect the execution time of the script itself.
Any time spent on activity that happens outside the execution of the script such as system calls using system(), the sleep() function, database queries, etc. is not included when determining the maximum time that the script has been running.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns TRUE on success or FALSE on failure.
Example 1. settype() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
shm_attach() returns an id that that can be used to access the System V shared memory with the given key, the first call creates the shared memory segment with mem_size (default: sysvshm.init_mem in the configuration file, otherwise 10000 bytes) and the optional perm-bits (default:
Memsize and perm will be ignored.
See also: ftok().
This function does not work on Windows systems.
Prev
Home
Next
Up
PHP Manual
Prev
Next
shm_detach() disconnects from the shared memory given by the shm_identifier created by shm_attach().
shm_detach() always returns TRUE.
Prev
Home
Next
Up
PHP Manual
Prev
Next
shm_get_var() returns the variable with a given variable_key.
The variable is still present in the shared memory.
Note:
This function does not work on Windows systems.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Inserts or updates a variable with a given variable_key.
All variable-types are supported.
Note:
This function does not work on Windows systems.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Removes shared memory from Unix systems.
All data will be destroyed.
Note:
This function does not work on Windows systems.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Removes a variable with a given variable_key and frees the occupied memory.
Note:
This function does not work on Windows systems.
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function is an alias to highlight_file().
For more information see the documentation there.
See also highlight_string() and highlight_file().
Prev
Home
Next
Up
PHP Manual
Prev
Next
function foo ($arg_1, $arg_2,..., $arg_n) {echo "Example function.\n"; return $retval;}
In PHP 3, functions must be defined before they are referenced.
Except when a function is conditionally defined such as shown in the two examples below.
Its definition must be processed prior to being called.
Conditional functions
?php function foo() {function bar() {echo "I don't exist until foo() is called.\n";}} / * We can't call bar() yet since it doesn't exist. * / foo(); / * Now we can call bar(), foo()'s processesing has made it accessable. * / bar();?
PHP 3 does not support variable numbers of arguments to functions, although default arguments are supported (see Default argument values for more information).
PHP 4 supports both: see Variable-length argument lists and the function references for func_num_args(), func_get_arg(), and func_get_args() for more information.
Prev
Home
Next
Up
Function arguments
PHP Manual
Prev
Next
This function shuffles (randomizes the order of the elements in) an array.
You must use srand() to seed this function.
Example 1. shuffle() example
$numbers = range (1,20); srand ((float)microtime()*1000000); shuffle ($numbers); while (list (, $number) = each ($numbers)) {echo "$number ";}
See also arsort(), asort(), ksort(), rsort(), sort(), and usort().
Prev
Home
Next
Up
PHP Manual
Prev
Next
This calculates the similarity between two strings as described in Oliver [1993].
Note that this implementation does not use a stack as in Oliver 's pseudo code, but recursive calls which may or may not speed up the whole process.
Note also that the complexity of this algorithm is O( N**3) where N is the length of the longest string.
By passing a reference as third argument, similar_text() will calculate the similarity in percent for you.
It returns the number of matching chars in both strings.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
The sizeof() function is an alias for count().
See also count().
Prev
Home
Next
Up
PHP Manual
Prev
Next
The sleep() function delays program execution for the given number of seconds.
See also usleep() and set_time_limit()
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 1.
Table 2.
Table 3.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Returns TRUE on success or FALSE on failure. socket_getpeername() may also return FALSE if the socket type is not any of AF_INET or AF_UNIX, in which case the last socket error code is not updated.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Returns TRUE on success or FALSE on failure. socket_getsockname() may also return FALSE if the socket type is not any of AF_INET or AF_UNIX, in which case the last socket error code is not updated.
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function is an alias of stream_get_meta_data().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Note:
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
Note:
Note:
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function is an alias for stream_set_blocking().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
This is an alias for stream_set_timeout().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Example 1. socket_strerror() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 13.
Functions
Next
The old_function statement allows you to declare a function using a syntax identical to PHP / FI2 (except you must replace'function 'with'old_function'.
This is a deprecated feature, and should only be used by the PHP / FI2 - PHP 3 convertor.
Warning
Functions declared as old_function cannot be called from PHP 's internal code.
Among other things, this means you can' t use them in functions such as usort(), array_walk(), and register_shutdown_function().
You can get around this limitation by writing a wrapper function (in normal PHP 3 form) to call the old_function.
Prev
Home
Next
Returning values
Up
Variable functions
PHP Manual
Prev
Next
This function sorts an array.
Elements will be arranged from lowest to highest when this function has completed.
Example 1. sort() example
?php $fruits = array ("lemon", "orange", "banana", "apple"); sort ($fruits); reset ($fruits); while (list ($key, $val) = each ($fruits)) {echo "fruits[".$key ."] = ".$val ."\n";}?
This example would display:
The fruits have been sorted in alphabetical order.
The optional second parameter sort_flags may be used to modify the sorting behavior using these values:
Sorting type flags:
SORT_REGULAR - compare items normally
SORT_NUMERIC - compare items numerically
SORT_STRING - compare items as strings
See also arsort(), asort(), ksort(), natsort(), natcasesort(), rsort(), usort(), array_multisort(), and uksort().
Note:
The second parameter was added in PHP 4.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Calculates the soundex key of str.
Soundex keys have the property that words pronounced similarly produce the same soundex key, and can thus be used to simplify searches in databases where you know the pronunciation but not the spelling.
This soundex function returns a string 4 characters long, starting with a letter.
This particular soundex function is one described by Donald Knuth in "The Art Of Computer Programming, vol.
Example 1.
Soundex Examples
See also levenshtein(), metaphone(), and similar_text().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. split() Example
Note:
Example 2. split() Example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns a string produced according to the formatting string format.
The format string is composed of zero or more directives: ordinary characters (excluding%) that are copied directly to the result, and conversion specifications, each of which results in fetching its own parameter.
This applies to both sprintf() and printf().
Each conversion specification consists of a percent sign (%), followed by one or more of these elements, in order:
An optional padding specifier that says what character will be used for padding the results to the right string size.
This may be a space character or a 0 (zero character).
The default is to pad with spaces.
An alternate padding character can be specified by prefixing it with a single quote (').
See the examples below.
An optional alignment specifier that says if the result should be left-justified or right-justified.
The default is right-justified; a - character here will make it left-justified.
An optional number, a width specifier that says how many characters (minimum) this conversion should result in.
An optional precision specifier that says how many decimal digits should be displayed for floating-point numbers.
A type specifier that says what type the argument data should be treated as.
% - a literal percent character.
No argument is required.
b - the argument is treated as an integer, and presented as a binary number.
c - the argument is treated as an integer, and presented as the character with that ASCII value.
d - the argument is treated as an integer, and presented as a (signed) decimal number.
f - the argument is treated as a float, and presented as a floating-point number.
s - the argument is treated as and presented as a string.
X - the argument is treated as an integer and presented as a hexadecimal number (with uppercase letters).
Here is an example:
Argument swapping
Example 2.
$format = "The %s contains %d monkeys"; printf($format,$num,$location);
$format = "The %2\$s contains %1\$d monkeys"; printf($format,$num,$location);
Argument swapping
$format = "The %2\$s contains %1\$d monkeys.
See also printf(), sscanf(), fscanf(), vsprintf(), and number_format().
Example 5. sprintf(): zero-padded integers
$isodate = sprintf( "%04d-%02d-%02d", $year, $month, $day);
$money1 = 68.75; $money2 = 54.35; $money = $money1 + $money2; / / echo $money will output "123.1"; $formatted = sprintf("%01.2f", $money); / / echo $formatted will output "123.10 "
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. sql_regcase() Example
Prev
Home
Next
Up
Semaphore, Shared Memory and IPC Functions
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 13.
Functions
Next
Values are returned by using the optional return statement.
Any type may be returned, including lists and objects.
This causes the function to end its execution immediately and pass control back to the line from which it was called.
See return() for more information.
function square ($num) {return $num * $num;} echo square (4); / / outputs '16 '.
You can 't return multiple values from a function, but similar results can be obtained by returning a list.
To return a reference from a function, you have to use the reference operator in both the function declaration and when assigning the returned value to a variable:
For more information on references, please check out References Explained.
Prev
Home
Next
Function arguments
Up
PHP Manual
Prev
Next
If only two parameters were passed to this function, the values parsed will be returned as an array.
Any whitespace in the format string matches any whitespace in the input string.
This means that even a tab \t in the format string can match a single space character in the input string.
/ / getting the serial number $serial = sscanf( "SN / 2350001" ,"SN / %d"); / / and the date of manufacturing $mandate = "January 01 2000"; list($month, $day, $year) = sscanf($mandate ,"%s %d %d"); echo "Item $serial was manufactured on: $year -".substr($month,0,3) ."-$day\n";
Example 2. sscanf() - using optional parameters
/ / get author info and generate DocBook entry $auth = "24\tLewis Carroll"; $n = sscanf($auth ,"%d\t%s %s", $id, $first, $last); echo" author id='$id 'firstname $first / firstname surname $last / surname / author \n";
See also fscanf(), printf(), and sprintf().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Gathers the statistics of the file named by filename.
Returns an array with the statistics of the file with the following elements:
The results of this function are cached.
See clearstatcache() for more details.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns 0 if str1 is less than str2; 0 if str1 is greater than str2, and 0 if they are equal.
Example 1. strcasecmp() example
$var1 = "Hello"; $var2 = "hello"; if (!strcasecmp($var1, $var2)) {echo '$var1 is equal to $var2 in a case-insensitive string comparison';}
See also ereg(), strcmp(), substr(), stristr(), strncasecmp(), and strstr().
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function is an alias for strstr(), and is identical in every way.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns 0 if str1 is less than str2; 0 if str1 is greater than str2, and 0 if they are equal.
Note that this comparison is case sensitive.
See also ereg(), strcasecmp(), substr(), stristr(), strncasecmp(), strncmp(), and strstr().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the length of the initial segment of str1 which does not contain any of the characters in str2.
See also strspn().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
See Appendix I for more information about wrappers.
See Appendix I for more information about wrappers and their wrapper data.
Note:
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
Note:
Note:
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. stream_set_timeout() Example
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. stream_set_write_buffer() example
Prev
Home
Next
Up
String functions
PHP Manual
Prev
Next
Month and weekday names and other language dependent strings respect the current locale set with setlocale().
%a - abbreviated weekday name according to the current locale
%b - abbreviated month name according to the current locale
%B - full month name according to the current locale
%c - preferred date and time representation for the current locale
%C - century number (the year divided by 100 and truncated to an integer, range 00 to 99)
%D - same as %m / %d / %y
%e - day of the month as a decimal number, a single digit is preceded by a space (range '1' to '31')
%G - The 4-digit year corresponding to the ISO week number (see %V).
This has the same format and value as %Y, except that if the ISO week number belongs to the previous or next year, that year is used instead.
%h - same as %b
%I - hour as a decimal number using a 12-hour clock (range 01 to 12)
%j - day of the year as a decimal number (range 001 to 366)
%M - minute as a decimal number
%p - either `am' or `pm 'according to the given time value, or the corresponding strings for the current locale
%r - time in a.m. and p.m. notation
%S - second as a decimal number
%T - current time, equal to %H:%M:%S
%u - weekday as a decimal number [1,7], with 1 representing Monday
Sun Solaris seems to start with Sunday as 1 although ISO 9889:1999 (the current C standard) clearly specifies that it should be Monday.
%V - The ISO 8601:1988 week number of the current year as a decimal number, range 01 to 53, where week 1 is the first week that has at least 4 days in the current year, and with Monday as the first day of the week. (Use %G or %g for the year component that corresponds to the week number for the specified timestamp.)
%W - week number of the current year as a decimal number, starting with the first Monday as the first day of the first week
%w - day of the week as a decimal, Sunday being 0
%x - preferred date representation for the current locale without the time
%X - preferred time representation for the current locale without the date
%y - year as a decimal number without a century (range 00 to 99)
%Y - year as a decimal number including the century
%% - a literal `% 'character
Note:
Not all conversion specifiers may be supported by your C library, in which case they will not be supported by PHP' s strftime().
Example 1. strftime() locale examples
setlocale (LC_TIME, "C"); print (strftime ("%A in Finnish is ")); setlocale (LC_TIME, "fi_FI"); print (strftime ("%A, in French ")); setlocale (LC_TIME, "fr_FR"); print (strftime ("%A and in German ")); setlocale (LC_TIME, "de_DE"); print (strftime ("%A.\n"));
Note: %G and %V, which are based on ISO 8601:1988 week numbers can give unexpected (albiet correct) results if the numbering system is not thoroughly understood.
Example 2.
?php / * December 2002 / January 2003 ISOWk M Tu W Thu F Sa Su ---- - --------------------------- - 51 16 17 18 19 20 21 22 52 23 24 25 26 27 28 29 1 30 31 1 2 3 4 5 2 6 7 8 9 10 11 12 3 13 14 15 16 17 18 19 * / / / Outputs:
12 / 28 / 2002 - %V,%G,%Y = 52,2002,2002 print "12 / 28 / 2002 - %V,%G,%Y =". strftime("%V,%G,%Y",strtotime("12 / 28 / 2002")). "\n"; / / Outputs:
12 / 30 / 2002 - %V,%G,%Y = 1,2003,2002 print "12 / 30 / 2002 - %V,%G,%Y =". strftime("%V,%G,%Y",strtotime("12 / 30 / 2002")). "\n"; / / Outputs:
1 / 3/2003 - %V,%G,%Y = 1,2003,2003 print "1 / 3/2003 - %V,%G,%Y =". strftime("%V,%G,%Y",strtotime("1 / 3/2003")). "\n"; / / Outputs:
1 / 10 / 2003 - %V,%G,%Y = 2,2003,2003 print "1 / 10 / 2003 - %V,%G,%Y =". strftime("%V,%G,%Y",strtotime("1 / 10 / 2003")). "\n"; / * December 2004 / January 2005 ISOWk M Tu W Thu F Sa Su ---- - --------------------------- - 51 13 14 15 16 17 18 19 52 20 21 22 23 24 25 26 53 27 28 29 30 31 1 2 1 3 4 5 6 7 8 9 2 10 11 12 13 14 15 16 * / / / Outputs:
12 / 23 / 2004 - %V,%G,%Y = 52,2004,2004 print "12 / 23 / 2004 - %V,%G,%Y =". strftime("%V,%G,%Y",strtotime("12 / 23 / 2004")). "\n"; / / Outputs:
12 / 31 / 2004 - %V,%G,%Y = 53,2004,2004 print "12 / 31 / 2004 - %V,%G,%Y =". strftime("%V,%G,%Y",strtotime("12 / 31 / 2004")). "\n"; / / Outputs:
1 / 3/2005 - %V,%G,%Y = 1,2005,2005 print "1 / 3/2005 - %V,%G,%Y =". strftime("%V,%G,%Y",strtotime("1 / 3/2005")). "\n";?
See also setlocale() and mktime() and the Open Group specification of strftime().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns a string with backslashes stripped off.
Recognizes C-like \n, \r..., octal and hexadecimal representation.
See also addcslashes().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns a string with backslashes stripped off. (\ 'becomes' and so on.) Double backslashes are made into a single backslash.
See also addslashes().
Prev
Home
Next
Up
PHP Manual
Prev
Next
It errors on the side of caution in case of incomplete or bogus tags.
$string = strip_tags( $string, 'a b i u ');
Warning
This function does not modify any attributes on the tags that you allow using allowable_tags, including the style and onmouseover attributes that a mischievous user may abuse when posting text that will be shown to other users.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns all of haystack from the first occurrence of needle to the end. needle and haystack are examined in a case-insensitive manner.
If needle is not found, returns FALSE.
If needle is not a string, it is converted to an integer and applied as the ordinal value of a character.
See also strchr(), strrchr(), substr(), and ereg().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the length of string.
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function implements a comparison algorithm that orders alphanumeric strings in the way a human being would.
The behaviour of this function is similar to strnatcmp(), except that the comparison is not case sensitive.
Martin Pool 's Natural Order String Comparison page.
Similar to other string comparison functions, this one returns 0 if str1 is less than str2; 0 if str1 is greater than str2, and 0 if they are equal.
See also ereg(), strcasecmp(), substr(), stristr(), strcmp(), strncmp(), strncasecmp(), strnatcmp(), and strstr().
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function implements a comparison algorithm that orders alphanumeric strings in the way a human being would, this is described as a "natural ordering".
An example of the difference between this algorithm and the regular computer string sorting algorithms (used in strcmp()) can be seen below:
$arr1 = $arr2 = array( "img12.png" ,"img10.png" ,"img2.png" ,"img1.png"); echo "Standard string comparison\n"; usort($arr1 ,"strcmp"); print_r($arr1); echo "\nNatural order string comparison\n"; usort($arr2 ,"strnatcmp"); print_r($arr2);
Standard string comparison Array ([0] = img1.png [1] = img10.png [2] = img12.png [3] = img2.png) Natural order string comparison Array ([0] = img1.png [1] = img2.png [2] = img10.png [3] = img12.png)
Similar to other string comparison functions, this one returns 0 if str1 is less than str2; 0 if str1 is greater than str2, and 0 if they are equal.
Note that this comparison is case sensitive.
See also ereg(), strcasecmp(), substr(), stristr(), strcmp(), strncmp(), strncasecmp(), strnatcasecmp(), strstr(), natsort() and natcasesort().
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function is similar to strcasecmp(), with the difference that you can specify the (upper limit of the) number of characters (len) from each string to be used in the comparison.
If any of the strings is shorter than len, then the length of that string will be used for the comparison.
Returns 0 if str1 is less than str2; 0 if str1 is greater than str2, and 0 if they are equal.
See also ereg(), strcasecmp(), strcmp(), substr(), stristr(), and strstr().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns 0 if str1 is less than str2; 0 if str1 is greater than str2, and 0 if they are equal.
Note that this comparison is case sensitive.
See also ereg(), strncasecmp(), strcasecmp(), substr(), stristr(), strcmp(), and strstr().
Prev
Home
Next
Up
PHP Manual
Prev
Next
This functions returns the input string padded on the left, the right, or both sides to the specified padding length.
If the optional argument pad_string is not supplied, the input is padded with spaces, otherwise it is padded with characters from pad_string up to the limit.
Optional argument pad_type can be STR_PAD_RIGHT, STR_PAD_LEFT, or STR_PAD_BOTH.
If pad_type is not specified it is assumed to be STR_PAD_RIGHT.
If the value of pad_length is negative or less than the length of the input string, no padding takes place.
Example 1. str_pad() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the numeric position of the first occurrence of needle in the haystack string.
Unlike the strrpos(), this function can take a full string as the needle parameter and the entire string will be used.
If needle is not found, returns FALSE.
Note:
It is easy to mistake the return values for "character found at position 0" and "character not found ".
Here 's how to detect the difference:
/ / in PHP 4.0b3 and newer: $pos = strpos( $mystring, "b"); if ($pos === false) {/ / note: three equal signs / / not found...} / / in versions older than 4.0b3: $pos = strpos($mystring, "b"); if (!is_integer($pos)) {/ / not found...}
If needle is not a string, it is converted to an integer and applied as the ordinal value of a character.
The optional offset parameter allows you to specify which character in haystack to start searching.
The position returned is still relative to the the beginning of haystack.
See also strrpos(), strrchr(), substr(), stristr(), and strstr().
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function returns the portion of haystack which starts at the last occurrence of needle and goes until the end of haystack.
Returns FALSE if needle is not found.
If needle contains more than one character, the first is used.
If needle is not a string, it is converted to an integer and applied as the ordinal value of a character.
Example 1. strrchr() example
/ / get last directory in $PATH $dir = substr( strrchr($PATH, ":"), 1); / / get everything after last newline $text = "Line 1\nLine 2\nLine 3"; $last = substr(strrchr($text, 10), 1);
See also strchr(), substr(), stristr(), and strstr().
Prev
Home
Next
Up
PHP Manual
Prev
Next
If the multiplier is set to 0, the function will return an empty string.
Example 1. str_repeat() example
echo str_repeat( "-=", 10);
See also for, str_pad(), and substr_count().
Prev
Home
Next
Up
PHP Manual
Prev
Next
If you don' t need fancy replacing rules, you should always use this function instead of ereg_replace() or preg_replace().
If subject is an array, then the search and replace is performed with every entry of subject, and the return value is an array as well.
If search and replace are arrays, then str_replace() takes a value from each array and uses them to do search and replace on subject.
If replace has fewer values than search, then an empty string is used for the rest of replacement values.
If search is an array and replace is a string; then this replacement string is used for every value of search.
Example 1. str_replace() example
This function is binary safe.
See also ereg_replace(), preg_replace(), and strtr().
Prev
Home
Next
Up
PHP Manual
Prev
Next
php echo strrev( "Hello world !"); / / outputs "!dlrow olleH "?
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note that the needle in this case can only be a single character.
If a string is passed as the needle, then only the first character of that string will be used.
If needle is not found, returns FALSE.
Note:
It is easy to mistake the return values for "character found at position 0" and "character not found ".
Here 's how to detect the difference:
/ / in PHP 4.0b3 and newer: $pos = strrpos( $mystring, "b"); if ($pos === false) {/ / note: three equal signs / / not found...} / / in versions older than 4.0b3: $pos = strrpos($mystring, "b"); if (is_string($pos) !$pos) {/ / not found...}
If needle is not a string, it is converted to an integer and applied as the ordinal value of a character.
See also strpos(), strrchr(), substr(), stristr(), and strstr().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. str_shuffle() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns the length of the initial segment of str1 which consists entirely of characters in str2.
The line of code:
See also strcspn().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns part of haystack string from the first occurrence of needle to the end of haystack.
If needle is not found, returns FALSE.
Note:
This function is case-sensitive.
For case-insensitive searches, use stristr().
$email = 'user@example.com'; $domain = strstr($email, '@'); print $domain; / / prints @example.com
Note:
If you only want to determine if a particular needle occurs within haystack, use the faster and less memory intensive function strpos() instead.
See also ereg(), preg_match(), strchr(), stristr(), strpos(), strrchr(), and substr().
Prev
Home
Next
Up
PHP Manual
Prev
Next
strtok() splits a string (arg1) into smaller strings (tokens), with each token being delimited by any character from arg2.
$string = "This is\tan example\nstring"; / * Use tab and newline as tokenizing characters as well * / $tok = strtok($string," \n\t"); while ($tok) {echo "Word=$tok br "; $tok = strtok(" \n\t");}
Every subsequent call to strtok only needs the token to use, as it keeps track of where it is in the current string.
See also split() and explode().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns string with all alphabetic characters converted to lowercase.
Note that 'alphabetic' is determined by the current locale.
This means that in i.e. the default "C" locale, characters such as umlaut-A (Ä) will not be converted.
Example 1. strtolower() example
$str = "Mary Had A Little Lamb and She LOVED It So"; $str = strtolower($str); print $str; # Prints mary had a little lamb and she loved it so
See also strtoupper(), ucfirst(), and ucwords().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. strtotime() examples
Example 2.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns string with all alphabetic characters converted to uppercase.
Note that 'alphabetic' is determined by the current locale.
For instance, in the default "C" locale characters such as umlaut-a (ä) will not be converted.
Example 1. strtoupper() example
$str = "Mary Had A Little Lamb and She LOVED It So"; $str = strtoupper($str); print $str; # Prints MARY HAD A LITTLE LAMB AND SHE LOVED IT SO
See also strtolower(), ucfirst(), and ucwords().
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function returns a copy of str, translating all occurrences of each character in from to the corresponding character in to and returning the result.
If from and to are different lengths, the extra characters in the longer of the two are ignored.
Example 1. strtr() example
$addr = strtr( $addr, "äåö", "aao");
strtr() can be called with only two arguments.
If called with two arguments it behaves in a new way: from then has to be an array that contains string - string pairs that will be replaced in the source string. strtr() will always look for the longest possible match first and will *NOT* try to replace stuff that it has already worked on.
Examples:
$trans = array( "hello "= "hi", "hi" = "hello"); echo strtr("hi all, I said hello", $trans). "\n";
Note:
This optional to and from parameters were added in PHP 4.0.0
See also ereg_replace().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
substr_count() returns the number of times the needle substring occurs in the haystack string.
Example 1. substr_count() example
?php print substr_count( "This is a test", "is"); / / prints out 2?
See also count_chars(), strpos(), substr(), and strstr().
Prev
Home
Next
Up
PHP Manual
Prev
Next
substr() returns the portion of string specified by the start and length parameters.
If start is non-negative, the returned string will start at the start 'th position in string, counting from zero.
For instance, in the string 'abcdef', the character at position 0 is' a ', the character at position 2 is' c ', and so forth.
Basic substr() usage
If start is negative, the returned string will start at the start 'th character from the end of string.
Using a negative start
?php $rest = substr( "abcdef", -1); / / returns "f "$rest = substr("abcdef", -2); / / returns "ef" $rest = substr("abcdef", -3, 1); / / returns "d "?
If string is less than start characters long, FALSE will be returned.
If start denotes a position beyond this truncation, an empty string will be returned.
Using a negative length
?php $rest = substr( "abcdef", 0, -1); / / returns "abcde "$rest = substr("abcdef", 2, -1); / / returns "cde" $rest = substr("abcdef", 4, -4); / / returns "" $rest = substr("abcdef", -3, -1); / / returns "de "?
See also strrchr() and ereg().
Prev
Home
Next
Up
PHP Manual
Prev
Next
substr_replace() replaces a copy of string delimited by the start and (optionally) length parameters with the string given in replacement.
The result is returned.
If start is positive, the replacing will begin at the start 'th offset into string.
If start is negative, the replacing will begin at the start 'th character from the end of string.
If length is given and is positive, it represents the length of the portion of string which is to be replaced.
If it is negative, it represents the number of characters from the end of string at which to stop replacing.
If it is not given, then it will default to strlen( string); i.e. end the replacing at the end of string.
Example 1. substr_replace() example
?php $var = 'ABCDEFGH: / MNRPQR /'; echo "Original: $var hr \n"; / * These two examples replace all of $var with'bob'. * / echo substr_replace($var, 'bob', 0). "br \n"; echo substr_replace($var, 'bob', 0, strlen($var))." br \n"; / * Insert'bob 'right at the beginning of $var. * / echo substr_replace($var, 'bob', 0, 0). "br \n"; / * These next two replace'MNRPQR' in $var with'bob'. * / echo substr_replace($var, 'bob', 10, -1)." br \n"; echo substr_replace($var, 'bob', -7, -1). "br \n"; / * Delete'MNRPQR 'from $var. * / echo substr_replace($var, '', 10, -1)." br \n";?
See also str_replace() and substr().
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 13.
Functions
Next
PHP supports the concept of variable functions.
Among other things, this can be used to implement callbacks, function tables, and so forth.
You need to use your own wrapper function to utilize any of these constructs as variable functions.
Variable function example
You can also call an object 's method by using the variable functions feature.
Variable method example
See also call_user_func(), variable variables and function_exists().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Example 1. swfaction() example
Example 2. swfaction() example
Example 3. swfaction() example
Example 4. swfaction() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. swf_addbuttonrecord() function example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Note:
Example 1.
Example 2. swfbitmap() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Example 1. swfbutton() example
Example 2. swfbutton - addaction() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Example 1. swfdisplayitem - multcolor() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Example 1. swfdisplayitem - rotateto() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Example 1. swfdisplayitem - setname() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Example 1. swfgradient() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Example 1. swfmorph() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Example 1. swfmovie - streammp3() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Example 1. swfshape - addfill() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Example 1. swfshape() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Example 1. swfshape - setline() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Example 1. swfsprite() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
Miscellaneous functions
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Example 1. swftext() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
symlink() creates a symbolic link from the existing target with the specified name link.
See also link() to create hard links, and readlink() along with linkinfo().
Prev
Home
Next
Up
PHP Manual
Prev
Next
syslog() generates a log message that will be distributed by the system logger. priority is a combination of the facility and the level, values for which are given in the next section.
The remaining argument is the message to send, except that the two characters %m will be replaced by the error message string (strerror) corresponding to the present value of errno.
Table 1. syslog() Priorities (in descending order)
Constant
Description
system is unusable
action must be taken immediately
critical conditions
error conditions
warning conditions
normal, but significant, condition
informational message
debug-level message
Example 1.
Using syslog()
On Windows NT, the syslog service is emulated using the Event Log.
Use of LOG_LOCAL0 through LOG_LOCAL7 for the facility parameter of openlog() is not available in Windows.
See also define_syslog_variables(), openlog() and closelog().
Prev
Home
Next
Up
PHP Manual
Prev
Next
system() is just like the C version of the function in that it executes the given command and outputs the result.
If a variable is provided as the second argument, then the return status code of the executed command will be written to this variable.
Warning
If you are going to allow data coming from user input to be passed to this function, then you should be using escapeshellarg() or escapeshellcmd() to make sure that users cannot trick the system into executing arbitrary commands.
Note:
If you start a program using this function and want to leave it running in the background, you have to make sure that the output of that program is redirected to a file or some other output stream or else PHP will hang until the execution of the program ends.
The system() call also tries to automatically flush the web server's output buffer after each line of output if PHP is running as a server module.
Returns the last line of the command output on success, and FALSE on failure.
If you need to execute a command and have all the data from the command passed directly back without any interference, use the passthru() function.
See also exec(), passthru(), popen(), escapeshellcmd(), and the backtick operator.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Creates a file with a unique filename in the specified directory.
If the directory does not exist, tempnam() may generate a file in the system's temporary directory, and return the name of that.
Prior to PHP 4.0.6, the behaviour of the tempnam() function was system dependent.
On Windows the TMP environment variable will override the dir parameter, on Linux the TMPDIR environment variable has precedence, while SVR4 will always use your dir On Windows the TMP environment variable will override the dir parameter, on Linux the TMPDIR environment variable has precedence, while SVR4 will always use your dir parameter if the directory it points to exists.
Consult your system documentation on the tempnam( 3) function if in doubt.
Returns the new temporary filename, or the FALSE string on failure.
Example 1. tempnam() example
$tmpfname = tempnam ("/ tmp", "FOO"); $handle = fopen($tmpfname, "w"); fwrite($handle, "writing to tempfile"); fclose($handle); / / do here something unlink($tmpfname);
This function 's behavior changed in 4.0.3.
See also tmpfile() and unlink().
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function sets the domain to search within when calls are made to gettext(), usually the named after an application.
The previous default domain is returned.
Call it with NULL as parameter to get the current setting without changing it.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
The file is automatically removed when closed (using fclose()), or when the script ends.
Example 1. tmpfile() example
$temp = tmpfile(); fwrite($temp, "writing to tempfile"); fclose($temp); / / this removes the file
See also tempnam().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
If the option time is not given, uses the present time.
Note that the access time is always modified, regardless of the number of parameters.
If the file does not exist, it is created.
Returns TRUE on success or FALSE on failure.
Example 1. touch() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Without the second parameter, trim() will strip these characters:
You can also specify the characters you want to strip, by means of the charlist You can also specify the characters you want to strip, by means of the charlist parameter.
With.. you can specify a range of characters.
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function sorts an array such that array indices maintain their correlation with the array elements they are associated with.
This is used mainly when sorting associative arrays where the actual element order is significant.
The comparison function is user-defined.
Note:
Please see usort() and uksort() for examples of user-defined comparison functions.
See also usort(), uksort(), sort(), asort(), arsort(), ksort(), and rsort().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns a string with the first character of str capitalized, if that character is alphabetic.
Note that 'alphabetic' is determined by the current locale.
For instance, in the default "C" locale characters such as umlaut-a (ä) will not be converted.
Example 1. ucfirst() example
$foo = 'hello world !'; $foo = ucfirst($foo); / / Hello world! $bar = 'HELLO WORLD !'; $bar = ucfirst($bar); / / HELLO WORLD! $bar = ucfirst(strtolower($bar)); / / Hello world!
See also strtolower(), strtoupper(), and ucwords().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns a string with the first character of each word in str capitalized, if that character is alphabetic.
Example 1. ucwords() example
$foo = 'hello world !'; $foo = ucwords($foo); / / Hello World! $bar = 'HELLO WORLD !'; $bar = ucwords($bar); / / HELLO WORLD! $bar = ucwords(strtolower($bar)); / / Hello World!
Note:
The definition of a word is any string of characters that is immediately after a whitespace (These are: space, form-feed, newline, carriage return, horizontal tab, and vertical tab).
See also strtoupper(), strtolower() and ucfirst().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function will sort the keys of an array using a user-supplied comparison function.
If the array you wish to sort needs to be sorted by some non-trivial criteria, you should use this function.
Example 1. uksort() example
This example would display:
See also usort(), uasort(), sort(), asort(), arsort(), ksort(), natsort(), and rsort().
Prev
Home
Next
Up
PHP Manual
Prev
Next
umask() sets PHP's umask to mask 0777 and returns the old umask.
When PHP is being used as a server module, the umask is restored when each request is finished.
umask() without arguments simply returns the current umask.
Prev
Home
Next
Up
PHP Manual
Prev
Next
uniqid() returns a prefixed unique identifier based on the current time in microseconds.
The prefix can be useful for instance if you generate identifiers simultaneously on several hosts that might happen to generate the identifier at the same microsecond.
Prefix can be up to 114 characters long.
With an empty prefix, the returned string will be 13 characters long.
Note:
The lcg parameter is only available in PHP 4 and PHP 3.0.13 and later.
If you need a unique identifier or token and you intend to give out that token to the user via the network (i.e. session cookies), it is recommended that you use something along the lines of
$token = md5( uniqid("")); / / no prefix $better_token = md5(uniqid(rand(),1)); / / better, difficult to guess
This will create a 32 character identifier (a 128 bit hex number) that is extremely difficult to predict.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Return the Julian Day for a UNIX timestamp (seconds since 1.1.1970), or for the current day if no timestamp is given.
See also jdtounix().
Prev
Home
Next
Up
CCVS API Functions
PHP Manual
Prev
Next
Deletes filename.
Similar to the Unix C unlink() function.
Returns TRUE on success or FALSE on failure.
See also rmdir() for removing directories.
Prev
Home
Next
Up
PHP Manual
Prev
Next
unpack() from binary string into array according to format.
Returns array containing unpacked elements of binary string.
unpack() works slightly different from Perl as the unpacked data is stored in an associative array.
To accomplish this you have to name the different format codes and separate them by a slash /.
Example 1. unpack() format string
The resulting array will contain the entries "chars1", "chars2" and "int ".
For an explanation of the format codes see also: pack()
Note that PHP internally stores integral values as signed.
If you unpack a large unsigned long and it is of the same size as PHP internally stored values the result will be a negative number even though unsigned unpacking was specified.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
Gettext
PHP Manual
Prev
Next
Note:
Example 1. unserialize_callback_func example
Note:
Example 2. unserialize() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. unset() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Decodes any% ## encoding in the given string.
The decoded string is returned.
Example 1. urldecode() example
$a = explode( '', $QUERY_STRING); $i = 0; while ($i count($a)) {$b = split('=', $a[$i]); echo'Value for parameter ', htmlspecialchars(urldecode($b[0])),' is', htmlspecialchars(urldecode($b[1])), "br / \n"; $i++;}
See also urlencode(), rawurlencode(), rawurldecode().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Returns a string in which all non-alphanumeric characters except -_. have been replaced with a percent (%) sign followed by two hex digits and spaces encoded as plus (+) signs.
It is encoded the same way that the posted data from a WWW form is encoded, that is the same way as in application / x-www-form-urlencoded media type.
This differs from the RFC1738 encoding (see rawurlencode()) in that for historical reasons, spaces are encoded as plus (+) signs.
This function is convenient when encoding a string to be used in a query part of an URL, as a convenient way to pass variables to the next page:
Example 1. urlencode() example
echo 'a href="mycgi?foo=', urlencode($userinput),' "';
Be careful about variables that may match HTML entities.
Things like amp, copy and pound are parsed by the browser and the actual entity is used instead of the desired variable name.
This is an obvious hassle that the W3C has been telling people about for years.
The reference is here: http: / /www.w3.org / TR / html4 / appendix / notes.html#h-B.2.2 The reference is here: http: / /www.w3.org / TR / html4 / appendix / notes.html#h-B.2.2 PHP supports changing the argument separator to the W3C-suggested semi-colon through the arg_separator .ini directive.
Unfortunately most user agents do not send form data in this semi-colon separated format.
A more portable way around this is to use amp; instead of as the separator.
You don' t need to change PHP's arg_separator for this.
Leave it as, but simply encode your URLs using htmlentities() (urlencode($data)).
Example 2. urlencode / htmlentities() example
echo 'a href="mycgi?foo=', htmlentities(urlencode($userinput)),' "';
See also urldecode(), htmlentities(), rawurldecode(), rawurlencode().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
A microsecond is one millionth of a second.
See also sleep() and set_time_limit().
Note:
This function does not work on Windows systems.
Prev
Home
Next
Up
PHP Manual
Prev
Next
This function will sort an array by its values using a user-supplied comparison function.
If the array you wish to sort needs to be sorted by some non-trivial criteria, you should use this function.
Note:
Up to PHP 4.0.6 the user defined functions would keep the original order for those elements, but with the new sort algorithm intruduced with 4.1.0 this is no longer the case as there is no solution to do so in an efficient way.
Example 1. usort() example
This example would display:
Note:
Obviously in this trivial case the rsort() function would be more appropriate.
Example 2. usort() example using multi-dimensional array
function cmp ($a, $b) {return strcmp($a["fruit"], $b["fruit"]);} $fruits[0]["fruit"] = "lemons"; $fruits[1]["fruit"] = "apples"; $fruits[2]["fruit"] = "grapes"; usort($fruits, "cmp"); while (list ($key, $value) = each ($fruits)) {echo "\$fruits[$key]: ". $value["fruit"]. "\n";}
This example would display:
$fruits[ 0]: apples $fruits[1]: grapes $fruits[2]: lemons
This example would display:
See also uasort(), uksort(), sort(), asort(), arsort(), ksort(), natsort(), and rsort().
Prev
Home
Next
Up
Aspell functions [deprecated]
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
As with anything that outputs its result directly to the browser, you can use the output-control functions to capture the output of this function, and save it in a string (for example).
Example 1. var_dump() example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. version_compare() Example
Prev
Home
Next
Up
PHP Manual
Prev
Next
virtual() is an Apache-specific function which is equivalent to !--#include virtual...- - in mod_include.
It performs an Apache sub-request.
It is useful for including CGI scripts or .shtml files, or anything else that you would parse through Apache.
Note that for a CGI script, the script must generate valid CGI headers.
At the minimum that means it must generate a Content-type header.
To run the sub-request, all buffers are terminated and flushed to the browser, pending headers are sent too.
Prev
Home
Next
Up
Array Functions
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Returns TRUE on success or FALSE on failure.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
WDDX Functions
PHP Manual
Prev
Next
wddx_add_vars() is used to serialize passed variables and add the result to the packet specified by the packet_id.
The variables to be serialized are specified in exactly the same way as wddx_serialize_vars().
Prev
Home
Next
WDDX Functions
Up
PHP Manual
Prev
Next
wddx_deserialize() takes a packet string and deserializes it.
It returns the result which can be string, number, or array.
Note that structures are deserialized into associative arrays.
Prev
Home
Next
Up
PHP Manual
Prev
Next
wddx_packet_end() ends the WDDX packet specified by the packet_id and returns the string with the packet.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Use wddx_packet_start() to start a new WDDX packet for incremental addition of variables.
It takes an optional comment It takes an optional comment string and returns a packet ID for use in later functions.
It automatically creates a structure definition inside the packet to contain the variables.
Prev
Home
Next
Up
PHP Manual
Prev
Next
wddx_serialize_value() is used to create a WDDX packet from a single given value.
It takes the value contained in var, and an optional comment string that appears in the packet header, and returns the WDDX packet.
Prev
Home
Next
Up
PHP Manual
Prev
Next
wddx_serialize_vars() is used to create a WDDX packet with a structure that contains the serialized representation of the passed variables.
wddx_serialize_vars() takes a variable number of arguments, each of which can be either a string naming a variable or an array containing strings naming the variables or another array, etc.
Example 1. wddx_serialize_vars() example
The above example will produce:
Prev
Home
Next
Up
PHP Manual
Prev
Next
The line is broken using the (optional) break parameter.
wordwrap() will automatically wrap at column 75 and break using '\n '(newline) if width or break are not given.
If the cut is set to 1, the string is always wrapped at the specified width.
So if you have a word that is larger than the given width, it is broken apart. (See second example).
Note:
The optional cut parameter was added in PHP 4.0.3
Example 1. wordwrap() example
$text = "The quick brown fox jumped over the lazy dog ."; $newtext = wordwrap ($text, 20); echo "$newtext\n";
This example would display:
The quick brown fox jumped over the lazy dog.
Example 2. wordwrap() example
$text = "A very long woooooooooooord ."; $newtext = wordwrap ($text, 8, "\n", 1); echo "$newtext\n";
This example would display:
A very long wooooooo ooooord.
See also nl2br().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. moldb.xml - small database of molecular information
Example 2. parsemoldb.php - parses moldb.xml into and array of molecular objects
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
XSLT functions
PHP Manual
Prev
Next
Note:
Instead of a function name, an array containing an object reference and a method name can also be supplied.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Instead of a function name, an array containing an object reference and a method name can also be supplied.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Instead of a function name, an array containing an object reference and a method name can also be supplied.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Note:
Instead of a function name, an array containing an object reference and a method name can also be supplied.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Instead of a function name, an array containing an object reference and a method name can also be supplied.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Instead of a function name, an array containing an object reference and a method name can also be supplied.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Instead of a function name, an array containing an object reference and a method name can also be supplied.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Note:
Instead of a function name, an array containing an object reference and a method name can also be supplied.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Instead of a function name, an array containing an object reference and a method name can also be supplied.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is EXPERIMENTAL.
The behaviour of this function, the name of this function, and anything else documented about this function may change without notice in a future release of PHP.
Use this function at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Create and return a new XSLT processor resource for manipulation by the other XSLT functions.
Prev
Home
Next
XSLT functions
Up
PHP Manual
Prev
Next
Return an error code describing the last error that occured on the passed XSLT processor.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Handling errors using the xslt_error() and xslt_errno() functions.
?php $xh = xslt_create(); $result = xslt_process($xh, 'dog.xml', 'pets.xsl'); if (!$result) {die(sprintf("Cannot process XSLT document [%d]: %s", xslt_errno($xh), xslt_error($xh)));} print($result); xslt_free($xh);?
Prev
Home
Next
Up
PHP Manual
Prev
Next
Free the XSLT processor identified by the given handle.
Prev
Home
Next
Up
PHP Manual
Prev
Next
In these cases you 'll have the XML and / or XSLT data in a variable - - and in production applications the overhead of dumping these to file may be too much.
The following is an example of processing XML and XSLT into a result variable without the use of files at all.
Using the xslt_process() to transform a variable containing XML data and a variable containing XSL data into a variable containing the resulting XML data
Finally, the last argument to the xslt_process() function represents an array for any top-level parameters that you want to pass to the XSLT document.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
SAX handlers should be a two dimensional array with the format (all top level elements are optional):
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 1.
Example 1.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
YP / NIS Functions
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
YP / NIS Functions
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Prev
Home
Next
Up
PHP Manual
Prev
Next
See also yp_err_string().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1.
See also yp_errno().
Prev
Home
Next
Up
PHP Manual
Prev
Next
yp_first() returns the first key-value pair from the named map in the named domain, otherwise FALSE.
Example 1.
Example for the NIS first
?php $entry = yp_first( $domain, "passwd.byname"); $key = $entry ["key"]; $value = $entry ["value"]; echo "First entry in this map has key ". $key." and value ". $value;?
See also yp-get-default-domain()
Prev
Home
Next
Up
PHP Manual
Prev
Next
yp_get_default_domain() returns the default domain of the node or FALSE.
Can be used as the domain parameter for successive NIS calls.
A NIS domain can be described a group of NIS maps.
Every host that needs to look up information binds itself to a certain domain.
Refer to the documents mentioned at the beginning for more detailed information.
Example 1.
Example for the default domain
?php $domain = yp_get_default_domain(); echo "Default NIS domain is: ". $domain;?
Prev
Home
Next
Up
PHP Manual
Prev
Next
yp_master() returns the machine name of the master NIS server for a map.
Example 1.
Example for the NIS master
?php $number = yp_master ($domain, $mapname); echo "Master for this map is: ". $master;?
See also yp-get-default-domain().
Prev
Home
Next
Up
PHP Manual
Prev
Next
yp_match() returns the value associated with the passed key out of the specified map or FALSE.
This key must be exact.
Example 1.
Example for NIS match
?php $entry = yp_match ($domain, "passwd.byname", "joe"); echo "Matched entry is: ". $entry;?
In this case this could be: joe:##joe:11111:100:Joe User: / home / j/joe: / usr / local / bin / bash
See also yp-get-default-domain()
Prev
Home
Next
Up
PHP Manual
Prev
Next
yp_next() returns the next key-value pair in the named map after the specified key or FALSE.
Example 1.
Example for NIS next
?php $entry = yp_next ($domain, "passwd.byname", "joe"); if (!$entry) {echo "No more entries found\n"; !- - echo yp_errno(). ":". yp_err_string(); - -} $key = key ($entry); echo "The next entry after joe has key ". $key." and value ". $entry[$key];?
See also yp-get-default-domain().
Prev
Home
Next
Up
PHP Manual
Prev
Next
yp_order() returns the order number for a map or FALSE.
Example 1.
Example for the NIS order
?php $number = yp_order( $domain,$mapname); echo "Order number for this map is: ". $number;?
See also yp-get-default-domain().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
This functionality was added in PHP 4.0.0.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1. zend_version() Example
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Returns TRUE on success or FALSE on failure.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Preface
PHP Manual
Prev
Next
PHP has come a long way in the last few years.
Growing to be one of the most prominent languages powering the Web was not an easy task.
Those of you interested in briefly seeing how PHP grew out to what it is today, read on.
PHP succeeds an older product, named PHP / FI.
PHP / FI was created by Rasmus Lerdorf in 1995, initially as a simple set of Perl scripts for tracking accesses to his online resume.
He named this set of scripts' Personal Home Page Tools'.
As more functionality was required, Rasmus wrote a much larger C implementation, which was able to communicate with databases, and enabled users to develop simple dynamic Web applications.
Rasmus chose to release the source code for PHP / FI for everybody to see, so that anybody can use it, as well as fix bugs in it and improve the code.
PHP / FI, which stood for Personal Home Page / Forms Interpreter, included some of the basic functionality of PHP as we know it today.
It had Perl-like variables, automatic interpretation of form variables and HTML embedded syntax.
The syntax itself was similar to that of Perl, albeit much more limited, simple, and somewhat inconsistent.
By 1997, PHP / FI 2.0, the second write-up of the C implementation, had a cult of several thousand users around the world (estimated), with approximately 50,000 domains reporting as having it installed, accounting for about 1% of the domains on the Internet.
While there were several people contributing bits of code to this project, it was still at large a one-man project.
PHP / FI 2.0 was officially released only in November 1997, after spending most of its life in beta releases.
It was shortly afterwards succeeded by the first alphas of PHP 3.0.
PHP 3.0 was the first version that closely resembles PHP as we know it today.
It was created by Andi Gutmans and Zeev Suraski in 1997 as a complete rewrite, after they found PHP / FI 2.0 severely underpowered for developing their own eCommerce application.
In an effort to cooperate and start building upon PHP / FI 's existing user-base, Andi, Rasmus and Zeev decided to cooperate and announce PHP 3.0 as the official successor of PHP / FI 2.0, and development of PHP / FI 2.0 was mostly halted.
One of the biggest strengths of PHP 3.0 was its strong extensibility features.
In addition to providing end users with a solid infrastructure for lots of different databases, protocols and APIs, PHP 3.0 's extensibility features attracted dozens of developers to join in and submit new extension modules.
Arguably, this was the key to PHP 3.0 's tremendous success.
Other key features introduced in PHP 3.0 were the object oriented syntax support and the much more powerful and consistent language syntax.
The whole new language was released under a new name, that removed the implication of limited personal use that the PHP / FI 2.0 name held.
It was named plain 'PHP', with the meaning being a recursive acronym - PHP:
By the end of 1998, PHP grew to an install base of tens of thousands of users (estimated) and hundreds of thousands of Web sites reporting it installed.
At its peak, PHP 3.0 was installed on approximately 10% of the Web servers on the Internet.
PHP 3.0 was officially released in June 1998, after having spent about 9 months in public testing.
By the winter of 1998, shortly after PHP 3.0 was officially released, Andi Gutmans and Zeev Suraski had begun working on a rewrite of PHP 's core.
The design goals were to improve performance of complex applications, and improve the modularity of PHP 's code base.
Such applications were made possible by PHP 3.0 's new features and support for a wide variety of third party databases and APIs, but PHP 3.0 was not designed to handle such complex applications efficiently.
The new engine, dubbed 'Zend Engine' (comprised of their first names, Zeev and Andi), met these design goals successfully, and was first introduced in mid 1999.
PHP 4.0, based on this engine, and coupled with a wide range of additional new features, was officially released in May 2000, almost two years after its predecessor, PHP 3.0.
PHP 4 is currently the latest released version of PHP.
Work has already begun on modifying and improving the Zend Engine to integrate the features which were designed for PHP 5.0.
Today, PHP is being used by hundreds of thousands of developers (estimated), and several million sites report as having it installed, which accounts for over 20% of the domains on the Internet.
The future of PHP is mainly driven by it 's core, the Zend Engine.
To get more information on this engine, see it 's webpage.
Prev
Home
Next
Appendixes
Up
History of PHP related projects
PHP Manual
Prev
Appendix A.
History of PHP and related projects
Next
As PHP grew, it began to be recognized as a world-wide popular development platform.
One of the most interesting ways of seeing this trend was by observing the books about PHP that came out throughout the years.
Next month followed a German book authored by Egon Schmid, Christian Cartus and Richard Blume.
The first book in English about PHP was published shortly afterwards, and was' Core PHP Programming 'by Leon Atkinson.
Both of these books covered PHP 3.0.
While these books were the first of their kind - they were followed by a large number of books from a host of authors and publishers.
There are over 40 books in English, 50 books in German, and over 20 books in French!
In addition, you can find books about PHP in many other languages, including Spanish, Korean, Japanese and Hebrew.
Clearly, this large number of books, written by different authors, published by many publishers, and their availability in so many languages - are a strong testimony for PHP 's world-wide success.
Prev
Home
Next
History of PHP related projects
Up
Publications about PHP
PHP Manual
Prev
Appendix A.
History of PHP and related projects
Next
To the best of our knowledge, the first article about PHP in a hard-copy magazine was published in the Czech mutation of Computerworld in the spring of 1998, and covered PHP 3.0.
As with books, this was the first in a series of many articles published about PHP in various prominent magazines.
Articles about PHP appeared in Dr.
Articles about migrating ASP-based applications to PHP under Windows even appear on Microsoft 's very own MSDN!
Prev
Home
Next
Books about PHP
Up
Migrating from PHP 3 to PHP 4
PHP Manual
Prev
Appendix A.
History of PHP and related projects
Next
PEAR, the PHP Extension and Application Repository (originally, PHP Extension and Add-on Repository) is PHP's version of foundation classes, and may grow in the future to be one of the key ways to distribute both PHP and C-based PHP extensions among developers.
PEAR was born in discussions held in the PHP Developers' Meeting (PDM) held in January 2000 in Tel Aviv.
It was created by Stig S.
Bakken, and is dedicated to his first-born daughter, Malin Bakken.
Since early 2000, PEAR has grown to be a big, significant project with a large number of developers working on implementing common, reusable functionality for the benefit of the entire PHP community.
PEAR today includes a wide variety of infrastructure foundation classes for database access, content caching, mathematical calculations, eCommerce and much more.
The PHP Quality Assurance Initiative was set up in the summer of 2000 in response to criticism that PHP releases were not being tested well enough for production environments.
The team now consists of a core group of developers with a good understanding of the PHP code base.
These developers spend a lot of their time localizing and fixing bugs within PHP.
In addition there are many other team members who test and provide feedback on these fixes using a wide variety of platforms.
PHP-GTK is the PHP solution for writing client side GUI applications.
Andrei Zmievski remembers the planing and creation process of PHP-GTK:
GUI programming has always been of my interests, and I found that Gtk + is a very nice toolkit, except that programming with it in C is somewhat tedious.
After witnessing PyGtk and GTK-Perl implementations, I decided to see if PHP could be made to interface with Gtk+, even minimally.
Starting in August of 2000, I began to have a bit more free time so that is when I started experimenting.
My main guideline was the PyGtk implementation as it was fairly feature complete and had a nice object-oriented interface.
James Henstridge, the author of PyGtk, provided very helpful advice during those initial stages.
Hand-writing the interfaces to all the Gtk + functions was out of the question, so I seized upon the idea of code-generator, similar to how PyGtk did it.
The code generator is a PHP program that reads a set of .defs file containing the Gtk + classes, constants, and methods information and generates C code that interfaces PHP with them.
What cannot be generated automatically can be written by hand in .overrides file.
Working on the code generator and the infrastructure took some time, because I could spend little time on PHP-GTK during the fall of 2000.
After I showed PHP-GTK to Frank Kromann, he got interested and started helping me out with code generator work and Win32 implementation.
When we wrote the first Hello World program and fired it up, it was extremely exciting.
It took a couple more months to get the project to a presentable condition and the initial version was released on March 1, 2001.
The story promptly hit SlashDot.
Sensing that PHP-GTK might be extensive, I set up separate mailing lists and CVS repositories for it, as well as the gtk.php.net website with the help of Colin Viebrock.
The documentation would also need to be done and James Moore came in to help with that.
Since its release PHP-GTK has been gaining popularity.
We have our own documentation team, the manual keeps improving, people start writing extensions for PHP-GTK, and more and more exciting applications with it.
Prev
Home
Next
History of PHP and related projects
Up
Books about PHP
27-01-2003
Copyright © 1997, 1998, 1999, 2000, 2001, 2002, 2003 the PHP Documentation Group
Next
Preface
PHP Manual
Prev
Chapter 3.
Installation
Next
Warning
Note:
Example 3-6.
Note:
Warning
Example 3-7.
Example 3-8.
Note:
Warning
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 3.
Installation
Next
Example 3-5.
Note:
Note:
Warning
Note:
This is especially important if the ClearModuleList directive is defined.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 3.
Installation
Next
Example 3-9.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 3.
Installation
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 3.
Installation
Next
Note:
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 3.
Installation
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 3.
Installation
Next
Example 3-1.
Prev
Home
Next
Installation
Up
PHP Manual
Prev
Chapter 3.
Installation
Next
Warning
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 3.
Installation
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 3.
Installation
Next
Example 3-2.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 3.
Installation
Next
Example 3-10.
Example 3-11.
Example 3-12.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 3.
Installation
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 3.
Installation
Next
Example 3-3.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 3.
Installation
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 3.
Installation
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 3.
Installation
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 3.
Installation
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 3.
Installation
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 3.
Installation
Next
Example 3-4.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 3.
Installation
Next
Note:
Warning
Warning
Note:
Note:
Note:
Note:
Table 3-1.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 3.
Installation
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 1-1.
Prev
Home
Next
Getting Started
Up
PHP Manual
Prev
Chapter 1.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 14.
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 14.
Next
Caution
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 14.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Basic syntax
PHP Manual
Prev
Chapter 6.
Basic syntax
Next
PHP supports' C', 'C++ 'and Unix shell-style comments.
For example:
?php echo "This is a test"; / / This is a one-line c+ + style comment / * This is a multi line comment yet another line of comment * / echo "This is yet another test"; echo "One Final Test"; # This is shell-style style comment?
h1 This is an ?php # echo "simple";? example. / h1 p The header above will say'This is an example '.
?php / * echo "This is a test"; / * This comment will cause a problem * / * /?
This means that HTML code after / /?
WILL be printed:? skips out of the PHP mode and returns to HTML mode, and / / cannot influence that.
Prev
Home
Next
Instruction separation
Up
PHP Manual
Prev
Next
When PHP parses a file, it simply passes the text of the file through until it encounters one of the special tags which tell it to start interpreting the text as PHP code.
This is the mechanism which allows you to embed PHP code inside HTML: everything outside the PHP tags is left utterly alone, while everything inside is parsed as code.
While the short-form tags and ASP-style tags may be convenient, they are not as portable as the longer versions.
The tags supported by PHP are:
1. ?php echo( "if you want to serve XHTML or XML documents, do like this\n");?
This is a shortcut for "? echo expression?" 3. script language="php "echo ("some editors (like FrontPage) don't like processing instructions"); / script 4.% echo ("You may optionally use ASP-style tags");% %= $variable; # This is a shortcut for"% echo... "%
The second way is not available always.
This can be done via the short_tags() function (PHP 3 only), by enabling the short_open_tag configuration setting in the PHP config file, or by compiling PHP with the --enable-short-tags option to configure.
The fourth way is only available if ASP-style tags have been enabled using the asp_tags configuration setting.
Using short tags should be avoided when developing applications or libraries that are meant for redistribution, or deployment on PHP servers which are not under your control, because short tags may not be supported on the target server.
The closing tag for the block will include the immediately trailing newline if one is present.
PHP allows you to use structures like this:
?php if ($expression) {? strong This is true. / strong ?php} else {? strong This is false. / strong ?php}?
Prev
Home
Next
Language Reference
Up
Instruction separation
PHP Manual
Prev
Chapter 6.
Basic syntax
Next
Instructions are separated the same as in C or Perl - terminate each statement with a semicolon.
The closing tag (?) also implies the end of the statement, so the following are equivalent:
?php echo "This is a test";? ?php echo "This is a test"?
Prev
Home
Next
Basic syntax
Up
Comments
PHP Manual
Prev
Next
A constant is a identifier (name) for a simple value.
As the name suggests, that value cannot change during the execution of the script (except the magic constants As the name suggests, that value cannot change during the execution of the script (except the magic constants which aren't actually constants).
A constant is case-sensitive by default.
By convention constant identifiers are always uppercase.
A valid constant name starts with a letter or underscore, followed by any number of letters, numbers, or underscores.
Note:
For our purposes here, a letter is a-z, A-Z, and the ASCII characters from 127 through 255 (0x7f-0xff).
The scope of a constant is global--you can access it anywhere in your script without regard to scope.
You can define a constant by using the define() -function.
Once a constant is defined, it can never be changed or undefined.
Only scalar data (boolean, integer, float and string) can be contained in constants.
You can get the value of a constant by simply specifying its name.
Unlike with variables, you should not prepend a constant with a $.
You can also use the function constant(), to read a constant's value, if you are to obtain the constant's name dynamically.
Use get_defined_constants() to get a list of all defined constants.
Note:
Constants and (global) variables are in a different namespace.
This implies that for example TRUE and $TRUE are generally different.
If you use an undefined constant, PHP assumes that you mean the name of the constant itself.
A notice will be issued when this happens.
Use the defined() -function if you want to know if a constant is set.
These are the differences between constants and variables:
Constants do not have a dollar sign ($) before them;
Constants may only be defined using the define() function, not by simple assignment;
Constants may be defined and accessed anywhere without regard to variable scoping rules;
Constants may not be redefined or undefined once they have been set; and
Constants may only evaluate to scalar values.
Example 9-1.
Defining Constants
?php define( "CONSTANT", "Hello world ."); echo CONSTANT; / / outputs "Hello world. "echo Constant; / / outputs "Constant" and issues a notice.?
Prev
Home
Next
Variables from outside PHP
Up
Predefined constants
PHP Manual
Prev
Next
Expressions are the most important building stones of PHP.
In PHP, almost anything you write is an expression.
The simplest yet most accurate way to define an expression is "anything that has a value".
The most basic forms of expressions are constants and variables.
When you type "$a = 5", you're assigning '5 'into $a. '5', obviously, has the value 5, or in other words '5' is an expression with the value of 5 (in this case, '5 'is an integer constant).
After this assignment, you' d expect $a's value to be 5 as well, so if you wrote $b = $a, you'd expect it to behave just as if you wrote $b = 5.
In other words, $a is an expression with the value of 5 as well.
If everything works right, this is exactly what will happen.
Slightly more complex examples for expressions are functions.
For instance, consider the following function:
Assuming you' re familiar with the concept of functions (if you're not, take a look at the chapter about functions), you'd assume that typing $c = foo() is essentially just like writing $c = 5, and you're right.
Functions are expressions with the value of their return value.
Since foo() returns 5, the value of the expression'foo() 'is 5.
Usually functions don 't just return a static value but compute something.
Of course, values in PHP don' t have to be integers, and very often they aren't.
PHP supports three scalar value types: integer values, floating point values and string values (scalar values are values that you can't'break 'into smaller pieces, unlike arrays, for instance).
PHP also supports two composite (non-scalar) types: arrays and objects.
Each of these value types can be assigned into variables or returned from functions.
So far, users of PHP / FI 2 shouldn 't feel any change.
However, PHP takes expressions much further, in the same way many other languages do.
PHP is an expression-oriented language, in the sense that almost everything is an expression.
Consider the example we' ve already dealt with, '$a = 5 '.
It' s easy to see that there are two values involved here, the value of the integer constant '5 ', and the value of $a which is being updated to 5 as well.
But the truth is that there' s one additional value involved here, and that's the value of the assignment itself.
The assignment itself evaluates to the assigned value, in this case 5.
In practice, it means that '$a = 5', regardless of what it does, is an expression with the value 5.
Thus, writing something like '$b = ($a = 5)' is like writing '$a = 5; $b = 5; '(a semicolon marks the end of a statement).
Since assignments are parsed in a right to left order, you can also write '$b = $a = 5'.
Another good example of expression orientation is pre - and post-increment and decrement.
Users of PHP / FI 2 and many other languages may be familiar with the notation of variable+ + and variable--.
These are increment and decrement operators.
In PHP / FI 2, the statement '$a++' has no value (is not an expression), and thus you can't assign it or use it in any way.
PHP enhances the increment / decrement capabilities by making these expressions as well, like in C.
In PHP, like in C, there are two types of increment - pre-increment and post-increment.
Both pre-increment and post-increment essentially increment the variable, and the effect on the variable is idential.
The difference is with the value of the increment expression.
Pre-increment, which is written '++$variable', evaluates to the incremented value (PHP increments the variable before reading its value, thus the name'pre-increment').
Post-increment, which is written '$variable++' evaluates to the original value of $variable, before it was incremented (PHP increments the variable after reading its value, thus the name'post-increment').
A very common type of expressions are comparison expressions.
These expressions evaluate to either 0 or 1, meaning FALSE or TRUE (respectively).
PHP supports (bigger than), = (bigger than or equal to), == (equal), != (not equal), (smaller than) and = (smaller than or equal to).
These expressions are most commonly used inside conditional execution, such as if statements.
The last example of expressions we 'll deal with here is combined operator-assignment expressions.
You already know that if you want to increment $a by 1, you can simply write '$a++' or '++$a '.
But what if you want to add more than one to it, for instance 3?
You could write '$a++' multiple times, but this is obviously not a very efficient or comfortable way.
A much more common practice is to write '$a = $a + 3'. '$a + 3' evaluates to the value of $a plus 3, and is assigned back into $a, which results in incrementing $a by 3.
In PHP, as in several other languages like C, you can write this in a shorter way, which with time would become clearer and quicker to understand as well.
Adding 3 to the current value of $a can be written '$a += 3'.
This means exactly "take the value of $a, add 3 to it, and assign it back into $a".
In addition to being shorter and clearer, this also results in faster execution.
The value of '$a += 3', like the value of a regular assignment, is the assigned value.
Notice that it is NOT 3, but the combined value of $a plus 3 (this is the value that's assigned into $a).
Any two-place operator can be used in this operator-assignment mode, for example '$a -= 5' (subtract 5 from the value of $a), '$b *= 7 '(multiply the value of $b by 7), etc.
There is one more expression that may seem odd if you haven 't seen it in other languages, the ternary conditional operator:
$first? $second: $third
The following example should help you understand pre - and post-increment and expressions in general a bit better:
function double( $i) {return $i*2;} $b = $a = 5; / * assign the value five into the variable $a and $b * / $c = $a++; / * post-increment, assign original value of $a (5) to $c * / $e = $d = ++$b; / * pre-increment, assign the incremented value of $b (6) to $d and $e * / / * at this point, both $d and $e are equal to 6 * / $f = double($d++); / * assign twice the value of $d emphasis before / emphasis the increment, 2*6 = 12 to $f * / $g = double(++$e); / * assign twice the value of $e emphasis after / emphasis the increment, 2*7 = 14 to $g * / $h = $g += 10; / * first, $g is incremented by 10 and ends with the value of 24. the value of the assignment (24) is then assigned into $h, and $h ends with the value of 24 as well. * /
In the beginning of the chapter we said that we 'll be describing the various statement types, and as promised, expressions can be statements.
However, not every expression is a statement.
In this case, a statement has the form of 'expr' ';' that is, an expression followed by a semicolon.
In '$b=$a=5 ;', $a=5 is a valid expression, but it's not a statement by itself. '$b=$a=5;' however is a valid statement.
One last thing worth mentioning is the truth value of expressions.
In many events, mainly in conditional execution and loops, you 're not interested in the specific value of the expression, but only care about whether it means TRUE or FALSE.
The constants TRUE and FALSE The constants TRUE and FALSE (case-insensitive) are the two possible boolean values.
When necessary, an expression is automatically converted to boolean.
See the section about type-casting for details about how.
PHP provides a full and powerful implementation of expressions, and documenting it entirely goes beyond the scope of this manual.
The above examples should give you a good idea about what expressions are and how you can construct useful expressions.
Throughout the rest of this manual we 'll write expr to indicate any valid PHP expression.
Prev
Home
Next
Predefined constants
Up
Operators
PHP Manual
Prev
Chapter 14.
Next
Caution
Caution
Caution
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Caution
Note:
Note:
Prev
Home
Next
Variable functions
Up
PHP Manual
Prev
Chapter 14.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 14.
Next
Note:
Prev
Home
Next
Up
References Explained
PHP Manual
Prev
Chapter 14.
Next
Note:
Caution
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 11.
Operators
Next
The basic assignment operator is "=".
Your first inclination might be to think of this as "equal to".
Don 't.
It really means that the the left operand gets set to the value of the expression on the rights (that is, "gets set to").
The value of an assignment expression is the value assigned.
That is, the value of "$a = 3" is 3.
This allows you to do some tricky things:
$a = ($b = 4) + 5; / / $a is equal to 9 now, and $b has been set to 4.
In addition to the basic assignment operator, there are "combined operators" for all of the binary arithmetic and string operators that allow you to use a value in an expression and then set its value to the result of that expression.
For example:
$a = 3; $a += 5; / / sets $a to 8, as if we had said: $a = $a + 5; $b = "Hello "; $b .= "There !"; / / sets $b to "Hello There !", just like $b = $b. "There !";
Note that the assignment copies the original variable to the new one (assignment by value), so changes to one will not affect the other.
This may also have relevance if you need to copy something like a large array inside a tight loop.
PHP 4 supports assignment by reference, using the $var = $othervar; syntax, but this is not possible in PHP 3. 'Assignment by reference 'means that both variables end up pointing at the same data, and nothing is copied anywhere.
To learn more about references, please read References explained.
Prev
Home
Next
Arithmetic Operators
Up
Bitwise Operators
PHP Manual
Prev
Chapter 11.
Operators
Next
Bitwise operators allow you to turn specific bits within an integer on or off.
If both the left - and right-hand parameters are strings, the bitwise operator will operate on the characters in this string.
?php echo 12 ^ 9; / / Outputs '5 'echo "12 "^ "9"; / / Outputs the Backspace character (ascii 8) / / ('1' (ascii 49)) ^ ('9 '(ascii 57)) = #8 echo "hallo" ^ "hello"; / / Outputs the ascii values #0 #4 #0 #0 #0 / / 'a' ^ 'e '= #4?
Table 11-3.
Bitwise Operators
Example
Name
Result
And
Bits that are set in both $a and $b are set.
Or
Bits that are set in either $a or $b are set.
Xor
Bits that are set in $a or $b but not both are set.
Not
Bits that are set in $a are not set, and vice versa.
Shift left
Shift the bits of $a $b steps to the left (each step means "multiply by two")
Shift right
Shift the bits of $a $b steps to the right (each step means "divide by two")
Prev
Home
Next
Assignment Operators
Up
Comparison Operators
PHP Manual
Prev
Chapter 11.
Operators
Next
Comparison operators, as their name implies, allow you to compare two values.
Table 11-4.
Comparison Operators
Example
Name
Result
Equal
TRUE if $a is equal to $b.
Identical
TRUE if $a is equal to $b, and they are of the same type. (PHP 4 only)
Not equal
TRUE if $a is not equal to $b.
Not equal
TRUE if $a is not equal to $b.
Not identical
TRUE if $a is not equal to $b, or they are not of the same type. (PHP 4 only)
Less than
TRUE if $a is strictly less than $b.
Greater than
TRUE if $a is strictly greater than $b.
Less than or equal to
TRUE if $a is less than or equal to $b.
Greater than or equal to
TRUE if $a is greater than or equal to $b.
Another conditional operator is the "?:" (or ternary) operator, which operates as in C and many other languages.
Prev
Home
Next
Bitwise Operators
Up
Error Control Operators
PHP Manual
Prev
Chapter 11.
Operators
Next
PHP supports one error control operator: the at sign (@).
When prepended to an expression in PHP, any error messages that might be generated by that expression will be ignored.
If the track_errors feature is enabled, any error message generated by the expression will be saved in the variable $php_errormsg.
This variable will be overwritten on each error, so check early if you want to use it.
Note:
The @-operator works only on expressions.
A simple rule of thumb is: if you can take the value of something, you can prepend the @ operator to it.
For instance, you can prepend it to variables, function and include() calls, constants, and so forth.
You cannot prepend it to function or class definitions, or conditional structures such as if and foreach, and so forth.
See also error_reporting().
Note:
Warning
Among other things, this means that if you use "@" to suppress errors from a certain function and either it isn't available or has been mistyped, the script will die right there with no indication as to why.
Prev
Home
Next
Comparison Operators
Up
Execution Operators
PHP Manual
Prev
Chapter 11.
Operators
Next
PHP supports one execution operator: backticks (``).
Note that these are not single-quotes!
PHP will attempt to execute the contents of the backticks as a shell command; the output will be returned (i.e., it won't simply be dumped to output; it can be assigned to a variable).
Note:
The backtick operator is disabled when safe mode is enabled or shell_exec() is disabled.
See also escapeshellcmd(), exec(), passthru(), popen(), shell_exec(), and system().
Prev
Home
Next
Error Control Operators
Up
Incrementing / Decrementing Operators
PHP Manual
Prev
Next
For example, in the expression 1 + 5 * 3, the answer is 16 and not 18 because the multiplication ("*") operator has a higher precedence than the addition ("+") operator.
Parentheses may be used to force precedence, if necessary.
For instance: (1 + 5) * 3 evaluates to 18.
The following table lists the precedence of operators with the lowest-precedence operators listed first.
Operator Precedence
Operators
,
or
xor
and
print
= += -= *= / = .= %= = _BAR_ = ^= ~= = =
?:
_BAR_ _BAR_
left
left
left
== != === !==
= =
left
left
right
right
Although! has a higher precedence than =, PHP will still allow expressions similar to the following: if (!$a = foo()), in which case the output from foo() is put into $a.
Prev
Home
Next
Expressions
Up
Arithmetic Operators
PHP Manual
Prev
Chapter 11.
Operators
Next
PHP supports C-style pre - and post-increment and decrement operators.
Table 11-5.
Increment / decrement Operators
Example
Name
Effect
Pre-increment
Increments $a by one, then returns $a.
Post-increment
Returns $a, then increments $a by one.
Pre-decrement
Decrements $a by one, then returns $a.
Post-decrement
Returns $a, then decrements $a by one.
Here 's a simple example script:
?php echo "h3 Postincrement / h3"; $a = 5; echo "Should be 5: ". $a+ +." br / \n"; echo "Should be 6: ". $a." br / \n"; echo "h3 Preincrement / h3"; $a = 5; echo "Should be 6: ". ++$a." br / \n"; echo "Should be 6: ". $a." br / \n"; echo "h3 Postdecrement / h3"; $a = 5; echo "Should be 5: ". $a- -." br / \n"; echo "Should be 4: ". $a." br / \n"; echo "h3 Predecrement / h3"; $a = 5; echo "Should be 4: ". --$a." br / \n"; echo "Should be 4: ". $a." br / \n";?
Prev
Home
Next
Execution Operators
Up
Logical Operators
PHP Manual
Prev
Chapter 11.
Operators
Next
Table 11-6.
Logical Operators
Example
Name
Result
TRUE if both $a and $b are TRUE.
TRUE if either $a or $b is TRUE.
TRUE if either $a or $b is TRUE, but not both.
TRUE if $a is not TRUE.
TRUE if both $a and $b are TRUE.
TRUE if either $a or $b is TRUE.
The reason for the two different variations of "and" and "or "operators is that they operate at different precedences. (See Operator Precedence.)
Prev
Home
Next
Incrementing / Decrementing Operators
Up
String Operators
PHP Manual
Prev
Chapter 11.
Operators
Next
There are two string operators.
The first is the concatenation operator ('.'), which returns the concatenation of its right and left arguments.
The second is the concatenating assignment operator ('.='), which appends the argument on the right side to the argument on the left side.
Please read Assignment Operators for more information.
$a = "Hello"; $b = $a. "World !"; / / now $b contains "Hello World! "$a = "Hello"; $a .= "World !"; / / now $a contains "Hello World! "
Prev
Home
Next
Logical Operators
Up
Array Operators
PHP Manual
Prev
Chapter 7.
Next
Example 7-11.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 15.
References Explained
Next
As said before, references aren 't pointers.
That means, the following construct won 't do what you expect:
What happens is that $var in foo will be bound with $bar in caller, but then it will be re-bound with $GLOBALS[ "baz"].
There' s no way to bind $bar in the calling scope to something else using the reference mechanism, since $bar is not available in the function foo (it is represented by $var, but $var has only variable contents and not name-to-value binding in the calling symbol table).
Prev
Home
Next
What References Do
Up
Passing by Reference
PHP Manual
Prev
Next
References in PHP are a means to access the same variable content by different names.
They are not like C pointers, they are symbol table aliases.
Note that in PHP, variable name and variable content are different, so the same content can have different names.
The most close analogy is with Unix filenames and files - variable names are directory entries, while variable contents is the file itself.
References can be thought of as hardlinking in Unix filesystem.
Prev
Home
Next
Up
What References Do
PHP Manual
Prev
Chapter 15.
References Explained
Next
You can pass variable to function by reference, so that function could modify its arguments.
The syntax is as follows:
function foo ($var) {$var++;} $a=5; foo ($a); / / $a is 6 here
Following things can be passed by reference:
Variable, i.e. foo( $a)
New statement, i.e. foo( new foobar())
Reference, returned from a function, i.e.:
Any other expression should not be passed by reference, as the result is undefined.
For example, the following examples of passing by reference are invalid:
function bar() / / Note the missing {$a = 5; return $a;} foo(bar()); foo($a = 5) / / Expression, not variable foo(5) / / Constant, not variable
Prev
Home
Next
What References Are Not
Up
Returning References
PHP Manual
Prev
Chapter 15.
References Explained
Next
Returning by-reference is useful when you want to use a function to find which variable a reference should be bound to.
When returning references, use this syntax:
function find_var ($param) {...code... return $found_var;} $foo = find_var ($bar); $foo - x = 2;
Note:
Unlike parameter passing, here you have to use in both places - to indicate that you return by-reference, not a copy as usual, and to indicate that reference binding, rather than usual assignment, should be done for $foo.
Prev
Home
Next
Passing by Reference
Up
Unsetting References
PHP Manual
Prev
Chapter 15.
References Explained
Next
Many syntax constructs in PHP are implemented via referencing mechanisms, so everything told above about reference binding also apply to these constructs.
Some constructs, like passing and returning by-reference, are mentioned above.
Other constructs that use references are:
When you declare variable as global $var you are in fact creating reference to a global variable.
That means, this is the same as:
That means, for example, that unsetting $var won 't unset global variable.
In an object method, $this is always reference to the caller object.
Prev
Home
Next
Unsetting References
Up
Features
PHP Manual
Prev
Chapter 15.
References Explained
Next
When you unset the reference, you just break the binding between variable name and variable content.
This does not mean that variable content will be destroyed.
For example:
Again, it might be useful to think about this as analogous to Unix unlink call.
Prev
Home
Next
Returning References
Up
Spotting References
PHP Manual
Prev
Chapter 15.
References Explained
Next
PHP references allow you to make two variables to refer to the same content.
Meaning, when you do:
The same syntax can be used with functions, that return references, and with new operator (in PHP 4.0.4 and later):
Note:
Not using the operator causes a copy of the object to be made.
If you use $this in the class it will operate on the current instance of the class.
Usually you want to have a single instance to work with, due to performance and memory consumption issues.
While you can use the @ operator to mute any errors in the constructor when using it as @new, this does not work when using the new While you can use the @ operator to mute any errors in the constructor when using it as @new, this does not work when using the new statement.
This is a limitation of the Zend Engine and will therefore result in a parser error.
This is done by making a local variable in a function and a variable in the calling scope reference to the same content.
Example:
The third thing reference can do is return by reference.
Prev
Home
Next
References Explained
Up
What References Are Not
PHP Manual
Prev
Chapter 7.
Next
Note:
Note:
Example 7-4.
Example 7-5.
Example 7-6.
Example 7-7.
Example 7-8.
Example 7-9.
Example 7-10.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 7.
Next
Note:
Warning
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 7.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Note:
Prev
Home
Next
Comments
Up
PHP Manual
Prev
Chapter 7.
Next
Example 7-1.
Warning
Warning
Caution
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 7.
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 7.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 7.
Next
Note:
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 7.
Next
Note:
Note:
Note:
Table 7-1.
Warning
Example 7-2.
Note:
Note:
Example 7-3.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 7.
Next
Note:
Note:
Prev
Home
Next
Up
Variables
PHP Manual
Prev
Chapter 8.
Variables
Next
There are many ways to access this information, for example:
form action=" foo.php "method="post" Name: input type="text "name="username" br Email: input type="text "name="email" br input type="submit "name="submit" value="Submit me! "/ form
Some examples are:
Example 8-3.
Accessing data from a simple POST HTML form
?php / / Available since PHP 4.1.0 print $_POST[ 'username']; print $_REQUEST['username']; import_request_variables('p', 'p_'); print $p_username; / / Available since PHP 3. print $HTTP_POST_VARS['username']; / / Available if the PHP directive register_globals = on.
Using a GET form is similar except you 'll use the appropriate GET predefined variable instead.
Superglobal arrays, like $_POST and $_GET, became available in PHP 4.1.0
The PHP community is encouraging all to not rely on this directive as it' s preferred to assume it's off and code accordingly.
If turned on, value (It's "PHP !") will automagically become (It\'s \"PHP!\").
You can set cookies using the setcookie() function.
Cookies are part of the HTTP header, so the SetCookie function must be called before any output is sent to the browser.
This is the same restriction as for the header() function.
If you wish to assign multiple values to a single cookie variable, you may assign it as an array.
For example:
?php setcookie( "MyCookie[foo]", "Testing 1", time()+3600); setcookie("MyCookie[bar]", "Testing 2", time()+3600);?
That will create two seperate cookies although MyCookie will now be a single array in your script.
If you want to set just one cookie with multiple values, consider using serialize() or explode() on the value first.
So, for a shopping cart application you may want to keep a counter and pass this along. i.e.
A setcookie() example
?php $count++; setcookie("count", $count, time()+3600); setcookie("Cart[$count]", $item, time()+3600);?
?php $varname.ext; / * invalid variable name * /?
See also the chapter on Types.
Prev
Home
Next
Variable variables
Up
Constants
PHP Manual
Prev
Next
Variables in PHP are represented by a dollar sign followed by the name of the variable.
The variable name is case-sensitive.
Variable names follow the same rules as other labels in PHP.
A valid variable name starts with a letter or underscore, followed by any number of letters, numbers, or underscores.
As a regular expression, it would be expressed thus: '[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*'
Note:
For our purposes here, a letter is a-z, A-Z, and the ASCII characters from 127 through 255 (0x7f-0xff).
?php $var = "Bob"; $Var = "Joe"; echo "$var, $Var"; / / outputs "Bob, Joe" $4site = 'not yet'; / / invalid; starts with a number $_4site = 'not yet'; / / valid; starts with an underscore $täyte = 'mansikka'; / / valid; 'ä 'is ASCII 228.?
In PHP 3, variables are always assigned by value.
That is to say, when you assign an expression to a variable, the entire value of the original expression is copied into the destination variable.
This means, for instance, that after assigning one variable 's value to another, changing one of those variables will have no effect on the other.
For more information on this kind of assignment, see the chapter on Expressions.
PHP 4 offers another way to assign values to variables: assign by reference.
Changes to the new variable affect the original, and vice versa.
This also means that no copying is performed; thus, the assignment happens more quickly.
However, any speedup will likely be noticed only in tight loops or when assigning large arrays or objects.
For instance, the following code snippet outputs' My name is Bob 'twice:
?php $foo = 'Bob'; / / Assign the value'Bob' to $foo $bar = $foo; / / Reference $foo via $bar. $bar = "My name is $bar"; / / Alter $bar... echo $bar; echo $foo; / / $foo is altered too.?
One important thing to note is that only named variables may be assigned by reference.
PHP follows Perl' s convention when dealing with arithmetic operations on character variables and not C's.
Example 8-1.
?php $i = 'W'; for($n=0; $n 6; $n++) echo ++$i. "\n"; / * Produces the output similar to the following:
Prev
Home
Next
Up
Predefined variables
PHP Manual
Prev
Chapter 8.
Variables
Next
PHP provides a large number of predefined variables to any script which it runs.
Some of these variables will not be available when PHP is run on the command line.
Warning
In PHP 4.2.0 and later, the default value for the PHP directive register_globals is off.
This is a major change in PHP.
Having register_globals off affects the set of predefined variables available in the global scope.
For example, to get DOCUMENT_ROOT you' ll use $_SERVER['DOCUMENT_ROOT'] instead of $DOCUMENT_ROOT, or $_GET['id'] from the URL http: / /www.example.com / test.php?id=3 instead of $id, or $_ENV['HOME'] instead of $HOME.
For related information on this change, read the configuration entry for register_globals, the security chapter on Using Register Globals, as well as the PHP 4.1.0 and 4.2.0 Release Announcements.
Using the available PHP Reserved Predefined Variables, like the superglobal arrays, is preferred.
From version 4.1.0 onward, PHP provides an additional set of predefined arrays containing variables from the web server (if applicable), the environment, and user input.
These new arrays are rather special in that they are automatically global--i.e., automatically available in every scope.
Also, you' ll notice how the older predefined variables ($HTTP_*_VARS) still exist.
Superglobals cannot be used as variable variables.
If certain variables in variables_order are not set, their appropriate PHP predefined arrays are also left empty.
PHP Superglobals
Contains a reference to every variable which is currently available within the global scope of the script.
The keys of this array are the names of the global variables. $GLOBALS has existed since PHP 3.
Variables set by the web server or otherwise directly related to the execution environment of the current script.
Analogous to the old $HTTP_SERVER_VARS array (which is still available, but deprecated).
Variables provided to the script via HTTP GET.
Analogous to the old $HTTP_GET_VARS array (which is still available, but deprecated).
Variables provided to the script via HTTP POST.
Variables provided to the script via HTTP cookies.
Analogous to the old $HTTP_COOKIE_VARS array (which is still available, but deprecated).
Variables provided to the script via HTTP post file uploads.
Analogous to the old $HTTP_POST_FILES array (which is still available, but deprecated).
See POST method uploads for more information.
Variables provided to the script via the environment.
Analogous to the old $HTTP_ENV_VARS array (which is still available, but deprecated).
Variables provided to the script via any user input mechanism, and which therefore cannot be trusted.
The presence and order of variable inclusion in this array is defined according to the variables_order configuration directive.
See also import_request_variables().
When running on the command line, this will not include the argv and argc entries; these are present in the $_SERVER array.
Variables which are currently registered to a script 's session.
Analogous to the old $HTTP_SESSION_VARS array (which is still available, but deprecated).
See the Session handling functions section for more information.
Prev
Home
Next
Variables
Up
Variable scope
PHP Manual
Prev
Chapter 8.
Variables
Next
The scope of a variable is the context within which it is defined.
For the most part all PHP variables only have a single scope.
This single scope spans included and required files as well.
For example:
?php $a = 1; include "b.inc";?
Here the $a variable will be available within the included b.inc Here the $a variable will be available within the included b.inc script.
Any variable used inside a function is by default limited to the local function scope.
?php $a = 1; / * global scope * / function Test() {echo $a; / * reference to local scope variable * /} Test();?
This script will not produce any output because the echo statement refers to a local version of the $a variable, and it has not been assigned a value within this scope.
You may notice that this is a little bit different from the C language in that global variables in C are automatically available to functions unless specifically overridden by a local definition.
In PHP global variables must be declared global inside a function if they are going to be used in that function.
?php $a = 1; $b = 2; function Sum() {global $a, $b; $b = $a + $b;} Sum(); echo $b;?
By declaring $a and $b By declaring $a and $b global within the function, all references to either variable will refer to the global version.
There is no limit to the number of global variables that can be manipulated by a function.
A second way to access variables from the global scope is to use the special PHP-defined $GLOBALS array.
The previous example can be rewritten as:
The $GLOBALS array is an associative array with the name of the global variable being the key and the contents of that variable being the value of the array element.
Here 's an example demonstrating the power of superglobals:
?php function test_global() {/ / Most predefined variables aren't "super "and require / / 'global 'to be available to the functions local scope. global $HTTP_POST_VARS; print $HTTP_POST_VARS['name']; / / Superglobals are available in any scope and do / / not require'global'.
Superglobals are available / / as of PHP 4.1.0 print $_POST[ 'name'];}?
Another important feature of variable scoping is the static Another important feature of variable scoping is the static variable.
Consider the following example:
This function is quite useless since every time it is called it sets $a to 0 and prints "0".
To make a useful counting function which will not lose track of the current count, the $a variable is declared static:
Now, every time the Test() function is called it will print the value of $a and increment it.
A recursive function is one which calls itself.
You must make sure you have an adequate way of terminating the recursion.
?php function Test() {static $count = 0; $count++; echo $count; if ($count 10) {Test ();} $count--;}?
For example, a true global variable imported inside a function scope with the global statement actually creates a reference to the global variable.
This can lead to unexpected behaviour which the following example addresses:
?php function test_global_ref() {global $obj; $obj = new stdclass;} function test_global_noref() {global $obj; $obj = new stdclass;} test_global_ref(); var_dump($obj); test_global_noref(); var_dump($obj);?
NULL object( stdClass)(0) {}
References are not stored statically:
Executing this example will result in the following output:
NULL Static object:
NULL Static object: object( stdClass)(1) {["property"]= int(1)}
This example demonstrates that when assigning a reference to a static variable, it' s not remembered when you call the get_instance_ref() function a second time.
Prev
Home
Next
Predefined variables
Up
Variable variables
PHP Manual
Prev
Chapter 8.
Variables
Next
That is, a variable name which can be set and used dynamically.
A normal variable is set with a statement such as:
?php $a = "hello";?
A variable variable takes the value of a variable and treats that as the name of a variable.
In the above example, hello, can be used as the name of a variable by using two dollar signs. i.e.
?php $$a = "world";?
Therefore, this statement:
?php echo "$a ${$a}";?
produces the exact same output as:
i.e. they both produce: hello world.
In order to use variable variables with arrays, you have to resolve an ambiguity problem.
That is, if you write $$a[ 1] then the parser needs to know if you meant to use $a[1] as a variable, or if you wanted $$a as the variable and then the [1] index from that variable.
Warning
This means you cannot do things like ${$_GET}.
If you are looking for a way to handle availability of superglobals and the old HTTP_*_VARS, you might want to try referencing them.
Prev
Home
Next
Variable scope
Up
Variables from outside PHP
PHP Manual
Prev
Appendix B.
Migrating from PHP 3 to PHP 4
Next
The global configuration file, php3.ini, has changed its name to php.ini.
For the Apache configuration file, there are slightly more changes.
The MIME types recognized by the PHP module have changed.
You can make your configuration files work with both versions of PHP (depending on which one is currently compiled into the server), using the following syntax:
In addition, the PHP directive names for Apache have changed.
Starting with PHP 4.0, there are only four Apache directives that relate to PHP:
There are two differences between the Admin values and the non admin values:
Admin values (or flags) can only appear in the server-wide apache configuration files (e.g., httpd.conf).
Standard values (or flags) cannot control certain PHP directives, for example - safe mode (if you could override safe mode settings in .htaccess files, it would defeat safe-mode's purpose).
In contrast, Admin values can modify the value of any PHP directive.
To make the transition process easier, PHP 4 is bundled with scripts that automatically convert your Apache configuration and .htaccess files to work with both PHP 3 and PHP 4.
These scripts do NOT convert the mime type lines!
You have to convert these yourself.
To convert your Apache configuration files, run the apconf-conv.sh script (available in the scripts / apache / directory).
For example:
Your original configuration file will be saved in httpd.conf.orig.
To convert your .htaccess files, run the aphtaccess-conv.sh script (available in the scripts / apache / directory as well):
Likewise, your old .htaccess files will be saved with an .orig prefix.
The conversion scripts require awk to be installed.
Prev
Home
Next
Running PHP 3 and PHP 4 concurrently
Up
Parser behavior
PHP Manual
Prev
Appendix B.
Migrating from PHP 3 to PHP 4
Next
PHP 3 had the bad habit of setting cookies in the reverse order of the setcookie() calls in your code.
PHP 4 breaks with this habit and creates the cookie header lines in exactly the same order as you set the cookies in the code.
This might break some existing code, but the old behaviour was so strange to understand that it deserved a change to prevent further problems in the future.
Prev
Home
Next
Variable substitution in strings
Up
Handling of global variables
PHP Manual
Prev
Appendix B.
Migrating from PHP 3 to PHP 4
Next
A String containing only the character '0' (zero) is now considered empty while it wasn't in PHP 3.
This new behavior makes sense in web applications, with all input fields returning strings even if numeric input is requested, and with PHP 's capabilities of automatic type conversion.
But on the other hand it might break your code in a rather subtle way, leading to misbehavior that is hard to track down if you do not know about what to look for.
Prev
Home
Next
Initializers
Up
Missing functions
PHP Manual
Prev
Appendix B.
Migrating from PHP 3 to PHP 4
Next
With PHP 3 the error reporting level was set as a simple numeric value formed by summing up the numbers related to different error levels.
Usual values where 15 for reporting all errors and warnings or 7 for reporting everything but simple notice messages reporting bad style and things like that.
PHP 4 has a larger set of error and warning levels and comes with a configuration parser that now allows for symbolic constants to be used for setting the intended behavior.
Error reporting level should now be configured by explicitly taking away the warning levels you do not want to generate error messages by x-oring them from the symbolic constant E_ALL.
Sounds complicated?
Well, lets say you want the error reporting system to report all but the simple style warnings that are categorized by the symbolic constant E_NOTICE.
Then you' ll put the following into your php.ini: error_reporting = E_ALL ~ (E_NOTICE).
If you want to suppress warnings too you add up the appropriate constant within the braces using the binary or operator '_BAR_': error_reporting= E_ALL ~ (E_NOTICE _BAR_ E_WARNING).
Warning
When upgrading code or servers from PHP 3 to PHP 4 you should check these settings and calls to error_reporting() or you might disable reporting the new error types, especially E_COMPILE_ERROR.
Warning
This may lead to very strange behavior as scripts might no longer work without error messages showing up anywhere.
This has lead to a lot of unreproducible bug reports in the past where people reported script engine problems they were not capable to track down while the TRUE case was usually some missing '}' in a required file that the parser was not able to report due to a misconfigured error reporting system.
So checking your error reporting setup should be the first thing to do whenever your scripts silently die.
The Zend engine can be considered mature enough nowadays to not cause this kind of strange behavior.
A lot of existing PHP 3 code uses language constructs that should be considered as very bad style as this code, while doing the intended thing now, could easily be broken by changes in other places.
PHP 4 will output a lot of notice messages in such situations where PHP 3 didn 't.
The easy fix is to just turn off E_NOTICE messages, but it is usually a good idea to fix the code instead.
The most common case that will now produce notice messages is the use of unquoted string constants as array indices.
Both PHP 3 and 4 will fall back to interpret these as strings if no keyword or constant is known by that name, but whenever a constant by that name had been defined anywhere else in the code it might break your script.
This can even become a security risk if some intruder manages to redefine string constants in a way that makes your script give him access rights he wasn 't intended to have.
So PHP 4 will now warn you whenever you use unquoted string constants as for example in $_SERVER[ REQUEST_METHOD].
Changing it to $_SERVER[ 'REQUEST_METHOD'] will make the parser happy and greatly improve the style and security of your code.
Another thing PHP 4 will now tell you about is the use of uninitialized variables or array elements.
Prev
Home
Next
Parser behavior
Up
Initializers
PHP Manual
Prev
Appendix B.
Migrating from PHP 3 to PHP 4
Next
Extensions written for PHP 3 will not work with PHP 4, neither as binaries nor at the source level.
It is not difficult to port extensions to PHP 4 if you have access to the original source.
A detailed description of the actual porting process is not part of this text.
Prev
Home
Next
Missing functions
Up
Variable substitution in strings
PHP Manual
Prev
Next
PHP 4 and the integrated Zend engine have greatly improved PHP 's performance and capabilities, but great care has been taken to break as little existing code as possible.
So migrating your code from PHP 3 to 4 should be much easier than migrating from PHP / FI 2 to PHP 3.
A lot of existing PHP 3 code should be ready to run without changes, but you should still know about the few differences and take care to test your code before switching versions in production environments.
The following should give you some hints about what to look for.
Prev
Home
Next
Publications about PHP
Up
Running PHP 3 and PHP 4 concurrently
PHP Manual
Prev
Appendix B.
Migrating from PHP 3 to PHP 4
Next
Static variable and class member initializers only accept scalar values while in PHP 3 they accepted any valid expression.
This is, once again, due to the split between parsing and execution as no code has yet been executed when the parser sees the initializer.
For classes you should use constructors to initialize member variables instead.
For static variables anything but a simple static value rarely makes sense anyway.
Prev
Home
Next
Error reporting
Up
PHP Manual
Prev
Appendix B.
Migrating from PHP 3 to PHP 4
Next
While PHP 4 comes with a lot of new features, functions and extensions, you may still find some functions from version 3 missing.
A small number of core functions has vanished because they do not work with the new scheme of splitting parsing and execution as introduced into 4 with the Zend engine.
Other functions and even complete extensions have become obsolete as newer functions and extensions serve the same task better and / or in a more general way.
Some functions just simply haven 't been ported yet and finally some functions or extensions may be missing due to license conflicts.
As PHP 4 now separates parsing from execution it is no longer possible to change the behavior of the parser (now embedded in the Zend engine) at runtime as parsing already happened by then.
So the function short_tags() no longer exists.
You can still change the parsers behavior by setting appropriate values in the php.ini file.
Another feature of PHP 3 that is not a part of PHP 4 is the bundled debugging interface.
There are third-party add-ons for the Zend engine which add similar functionality.
The Adabas and Solid database extensions are no more.
Long live the unified ODBC extension instead.
unset(), although still available, is implemented as a language construct rather than a function.
This does not have any consequences on the behavior of unset(), but testing for "unset "using function_exists() will return FALSE as it would with other language constructs that look like functions such as echo().
Another more practical change is that it is no longer possible to call unset() indirectly, that is $func="unset"; $func($somevar) won't work anymore.
Prev
Home
Next
Up
PHP 3 extension
PHP Manual
Prev
Appendix B.
Migrating from PHP 3 to PHP 4
Next
Parsing and execution are now two completely separated steps, no execution of a files code will happen until the complete file and everything it requires has completely and successfully been parsed.
One of the new requirements introduced with this split is that required and included files now have to be syntactically complete.
You can no longer spread the different controlling parts of a control structure across file boundaries.
That is you cannot start a for or while loop, an if statement or a switch block in one file and have the end of loop, else, endif, case or break statements in a different file.
It still perfectly legal to include additional code within loops or other control structures, only the controlling keywords and corresponding curly braces {...} have to be within the same compile unit (file or eval() ed string).
This should not harm to much as spreading code like this should be considered as very bad style anyway.
Another thing no longer possible, though rarely seen in PHP 3 code is returning values from a required file.
Returning a value from an included file is still possible.
Prev
Home
Next
Migrating Configuration Files
Up
Error reporting
PHP Manual
Prev
Appendix B.
Migrating from PHP 3 to PHP 4
Next
Recent operating systems provide the ability to perform versioning and scoping.
This features make it possible to let PHP 3 and PHP 4 run as concurrent modules in one Apache server.
This feature is known to work on the following platforms:
Linux with recent binutils (binutils 2.9.1.0.25 tested)
Solaris 2.5 or better
FreeBSD (3.2, 4.0 tested)
To enable it, configure PHP3 and PHP4 to use APXS (--with-apxs) and the necessary link extensions (--enable-versioning).
Otherwise, all standard installations instructions apply.
For example:
Prev
Home
Next
Migrating from PHP 3 to PHP 4
Up
Migrating Configuration Files
PHP Manual
Prev
Appendix B.
Migrating from PHP 3 to PHP 4
Next
PHP 4 adds a new mechanism to variable substitution in strings.
You can now finally access object member variables and elements from multidimensional arrays within strings.
To do so you have to enclose your variables with curly braces with the dollar sign immediately following the opening brace: {$...}
To embed the value of an object member variable into a string you simply write "text {$obj - member} text" while in PHP 3 you had to use something like "text ".$obj - member. "text".
This should lead to more readable code, while it may break existing scripts written for PHP 3.
But you can easily check for this kind of problem by checking for the character combination {$in your code and by replacing it with\ {$with your favorite search-and-replace tool.
Prev
Home
Next
PHP 3 extension
Up
PHP Manual
Prev
Appendix B.
Migrating from PHP 3 to PHP 4
Next
While handling of global variables had the focus on to be easy in PHP 3 and early versions of PHP 4, the focus has changed to be more secure.
While in PHP 3 the following example worked fine, in PHP 4 it has to be unset( $GLOBALS["id"]);.
This is only one issue of global variable handling.
You should always have used $GLOBALS, with newer versions of PHP 4 you are forced to do so in most cases.
Read more on this subject in the global references section.
Example B-1.
Migration of global variables
?php $id = 1; function test() {global $id; unset($id);} test(); echo($id); / / This will print out 1 in PHP 4?
Prev
Home
Next
Up
Migrating from PHP / FI 2 to PHP 3
PHP Manual
Prev
Appendix C.
Migrating from PHP / FI 2 to PHP 3
Next
In PHP 3.0 boolean evaluation is short-circuited.
This means that in an expression like (1 _BAR_ _BAR_ test_me()), the function test_me() would not be executed since nothing can change the result of the expression after the 1.
This is a minor compatibility issue, but may cause unexpected side-effects.
Prev
Home
Next
Error messages have changed
Up
Function TRUE / FALSE return values
PHP Manual
Prev
Appendix C.
Migrating from PHP / FI 2 to PHP 3
Next
PHP 3.0' s error messages are usually more accurate than 2.0's were, but you no longer get to see the code fragment causing the error.
You will be supplied with a file name and a line number for the error, though.
Prev
Home
Next
Expression types
Up
Short-circuited boolean evaluation
PHP Manual
Prev
Appendix C.
Migrating from PHP / FI 2 to PHP 3
Next
PHP / FI 2.0 used the left side of expressions to determine what type the result should be.
PHP 3.0 takes both sides into account when determining result types, and this may cause 2.0 scripts to behave unexpectedly in 3.0.
Consider this example:
The fix for this is simple.
Replace the while statement with:
Prev
Home
Next
while syntax
Up
Error messages have changed
PHP Manual
Prev
Next
PHP 3.0 is rewritten from the ground up.
It has a proper parser that is much more robust and consistent than 2.0 's.
3.0 is also significantly faster, and uses less memory.
However, some of these improvements have not been possible without compatibility changes, both in syntax and functionality.
In addition, PHP' s developers have tried to clean up both PHP's syntax and semantics in version 3.0, and this has also caused some incompatibilities.
In the long run, we believe that these changes are for the better.
This chapter will try to guide you through the incompatibilities you might run into when going from PHP / FI 2.0 to PHP 3.0 and help you resolve them.
New features are not mentioned here unless necessary.
A conversion program that can automatically convert your old PHP / FI 2.0 scripts exists.
It can be found in the convertor subdirectory of the PHP 3.0 distribution.
This program only catches the syntax changes though, so you should read this chapter carefully anyway.
Prev
Home
Next
Handling of global variables
Up
Start / end tags
PHP Manual
Prev
Appendix C.
Migrating from PHP / FI 2 to PHP 3
Next
The `alternative' way to write if / elseif / else statements, using if(); elseif(); else; endif; cannot be efficiently implemented without adding a large amount of complexity to the 3.0 parser.
Because of this, the syntax has been changed:
Example C-5.
Migration: old if..endif syntax
Example C-6.
Migration: new if..endif syntax
Prev
Home
Next
Start / end tags
Up
while syntax
PHP Manual
Prev
Appendix C.
Migrating from PHP / FI 2 to PHP 3
Next
The first thing you probably will notice is that PHP 's start and end tags have changed.
The old? form has been replaced by three new possible forms:
Example C-1.
Migration: old start / end tags
? echo "This is PHP / FI 2.0 code.\n";?
Example C-2.
Migration: first new start / end tags
Example C-3.
Migration: second new start / end tags
Example C-4.
Migration: third new start / end tags
Prev
Home
Next
Migrating from PHP / FI 2 to PHP 3
Up
if..endif syntax
PHP Manual
Prev
Appendix C.
Migrating from PHP / FI 2 to PHP 3
Next
Most internal functions have been rewritten so they return TRUE when successful and FALSE when failing, as opposed to 0 and -1 in PHP / FI 2.0, respectively.
The new behaviour allows for more logical code, like $fp = fopen( "/ your / file") or fail("darn !");.
Because PHP / FI 2.0 had no clear rules for what functions should return when they failed, most such scripts will probably have to be checked manually after using the 2.0 to 3.0 convertor.
Example C-9.
Migration from 2.0: return values, old code
Example C-10.
Migration from 2.0: return values, new code
Prev
Home
Next
Short-circuited boolean evaluation
Up
Other incompatibilities
PHP Manual
Prev
Prev
Home
Translations
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Appendix E.
Next
Prev
Home
Next
Up
List of Function Aliases
PHP Manual
Prev
Next
Example E-1.
Example E-2.
Table E-1.
Warning
Example E-3.
Example E-4.
Example E-5.
Example E-6.
Example E-7.
Example E-8.
Example E-9.
Prev
Home
Next
Debugger Protocol
Up
PHP Manual
Prev
Next
PHP, which stands for "PHP:
Hypertext Preprocessor "is a widely-used Open Source general-purpose scripting language that is especially suited for Web development and can be embedded into HTML.
Its syntax draws upon C, Java, and Perl, and is easy to learn.
The main goal of the language is to allow web developers to write dynamically generated webpages quickly, but you can do much more with PHP.
This manual consists primarily of a function reference, but also contains a language reference, explanations of some of PHP 's major features, and other supplemental information.
You can download this manual in several formats at http: / /www.php.net / docs.php.
The downloads are updated as the content changes.
See also PHP History
Prev
Home
Next
PHP Manual
Getting Started
For PHP installation on Apache 1.x see the Apache section in the installation chapter.
Configuration settings from php.ini may be overridden by php_flag settings in the server configuration file or local .htaccess files.
php_flag engine off
last_modified
send PHP scripts modification date as Last-Modified: header for this request
parse files with executable bit set as PHP regardles of their file ending
This directive is really only useful in the Apache module version of PHP.
By putting engine off in the appropriate places in the httpd.conf file, PHP can be enabled or disabled.
PHP Manual
Prev
Next
Simple and multi-dimensional arrays are supported, and may be either user created or created by another function.
Please see the Arrays section of the manual for a detailed explanation of how arrays are implemented and used in PHP.
This extension has no configuration directives defined in php.ini.
CASE_LOWER is used with array_change_key_case() and is used to convert array keys to lower case.
CASE_UPPER is used with array_change_key_case() and is used to convert array keys to upper case.
Prev
Home
Next
Up
PHP Manual
Prev
Next
The aspell() functions allows you to check the spelling on a word and offer suggestions.
aspell works only with very old (up to .27.* or so) versions of aspell library.
Neither this module, nor those versions of aspell library are supported any longer.
If you want to use spell-checking capabilities in PHP, use pspell If you want to use spell-checking capabilities in PHP, use pspell instead.
It uses pspell library and works with newer versions of aspell.
See also pspell.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Since PHP 4.0.4, libbcmath is bundled with PHP.
Prev
Home
Next
Up
PHP Manual
Prev
Next
The bzip2 functions are used to transparently read and write bzip2 (.bz2) compressed files.
This module requires bzip2 / libbzip2 version = 1.0.x.
Bzip2 support in PHP is not enabled by default.
You will need to use the --with-bz2[ =DIR] configuration option when compiling PHP to enable bzip2 support.
This extension has no configuration directives defined in php.ini.
This extension defines one resource type: a file pointer identifying the bz2-file to work on.
This extension has no constants defined.
This example opens a temporary file and writes a test string to it, then prints out the contents of the file.
Example 1.
Small bzip2 Example
?php $filename = "/ tmp / testfile.bz2"; $str = "This is a test string.\n"; / / open file for writing $bz = bzopen($filename, "w"); / / write string to file bzwrite($bz, $str); / / close file bzclose($bz); / / open file for reading $bz = bzopen($filename, "r"); / / read 10 characters print bzread($bz, 10); / / output until end of the file (or the next 1024 char) and close it. print bzread($bz); bzclose($bz);?
Prev
Home
Next
Up
PHP Manual
Prev
Next
The intermediary or standard it is based on is the Julian Day Count.
The Julian Day Count is a count of days starting from January 1st, 4713 B.C.
Julian Day Count is very different from the Julian Calendar!
For more information on Julian Day Count, visit http: / /serendipity.magnet.ch / hermetic / cal_stud / jdn.htm.
Excerpts from this page are included in these instructions, and are in quotes.
The windows version of PHP The windows version of PHP has built in support for this extension.
This extension has no configuration directives defined in php.ini.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
The following constants are available since PHP 4.3.0:
Prev
Home
Next
Up
PHP Manual
Prev
Next
These functions interface the CCVS API, allowing you to work directly with CCVS from your PHP scripts.
CCVS is RedHat' s solution to the "middle-man "in credit card processing.
It lets you directly address the credit card clearing houses via your *nix box and a modem.
Using the CCVS module for PHP, you can process credit cards directly through CCVS via your PHP Scripts.
The following references will outline the process.
Note:
CCVS has been discontinued by Red Hat and there are no plans to issue further keys or support contracts.
Those looking for a replacement can consider MCVE by Main Street Softworks as a potential replacement.
It is similar in design and has documented PHP support!
If you use this option without specifying the path to your CCVS installation, PHP will attempt to look in the default CCVS Install location (/ usr / local / ccvs).
Please note that CCVS support requires that $ccvs_path / lib and $ccvs_path / include exist, and include cv_api.h under the include directory and libccvs.a under the lib directory.
You will also need to make sure the PHP Processes are running under the same user as your CCVS was installed as (e.g. if you installed CCVS as user'ccvs', your PHP processes must run as'ccvs' as well.)
Additional information about CCVS can be found at http: / /www.redhat.com / products / ccvs.
RedHat maintains slightly outdated but still useful documentation at http: / /www.redhat.com / products / ccvs / support / CCVS3.3docs / ProgPHP.html.
Prev
Home
Next
Up
PHP Manual
Prev
Next
These functions allow you to obtain information about classes and instance objects.
You can obtain the name of the class to which a object belongs, as well as its member properties and methods.
No external libraries are needed to build this extension.
This extension has no configuration directives defined in php.ini.
This extension has no constants defined.
The base class describes a general vegetable, whether it is edible or not and what is its color.
The subclass Spinach adds a method to cook it and another to find out if it is cooked.
?php / / base class with member properties and methods class Vegetable {var $edible; var $color; function Vegetable ($edible, $color="green ") {$this - edible = $edible; $this - color = $color;} function is_edible() {return $this - edible;} function what_color() {return $this - color;}} / / end of class Vegetable / / extends the base class class Spinach extends Vegetable {var $cooked = false; function Spinach() {$this - Vegetable (true, "green");} function cook_it() {$this - cooked = true;} function is_cooked() {return $this - cooked;}} / / end of class Spinach?
We then instantiate 2 objects from these classes and print out information about them, including their class parentage.
We also define some utility functions, mainly to have a nice printout of the variables.
Example 2. test_script.php
pre ?php include "classes.inc"; / / utility functions function print_vars($obj) {$arr = get_object_vars($obj); while (list($prop, $val) = each($arr)) echo "\t$prop = $val\n";} function print_methods($obj) {$arr = get_class_methods(get_class($obj)); foreach ($arr as $method) echo "\tfunction $method()\n";} function class_parentage($obj, $class) {global $$obj; if (is_subclass_of($$obj, $class)) {echo "Object $obj belongs to class ".get_class($$obj); echo" a subclass of $class\n";} else {echo "Object $obj does not belong to a subclass of $class\n";}} / / instantiate 2 objects $veggie = new Vegetable(true ,"blue"); $leafy = new Spinach(); / / print out information about objects echo "veggie:
CLASS ".get_class($veggie) ."\n"; echo "leafy:
CLASS ".get_class($leafy); echo", PARENT ".get_parent_class($leafy) ."\n"; / / show veggie properties echo "\nveggie:
Properties\n"; print_vars($veggie); / / and leafy methods echo "\nleafy:
Methods\n"; print_methods($leafy); echo "\nParentage:\n"; class_parentage("leafy", "Spinach"); class_parentage("leafy", "Vegetable");? / pre
One important thing to note in the example above is that the object $leafy is an instance of the class Spinach which is a subclass of Vegetable, therefore the last part of the script above will output:
[...] Parentage:
Object leafy does not belong to a subclass of Spinach Object leafy belongs to class spinach a subclass of Vegetable
Prev
Home
Next
Up
PHP Manual
Prev
Next
COM functions are only available on the Windows version of PHP.
For further information on COM read the COM specification or perhaps take a look at Don Box' s Yet Another COM Library (YACL)
Prev
Home
Next
Up
PHP Manual
Prev
Next
This extension has no configuration directives defined in php.ini.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Example 1.
Example 2. pdfclock example from pdflib 2.0 distribution
Prev
Home
Next
Up
PHP Manual
Prev
Next
The behaviour of these functions is affected by settings in php.ini.
Table 1.
This extension has no resource types defined.
This extension has no constants defined.
Example 1.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
The windows version of PHP The windows version of PHP has built in support for this extension.
You do not need to load any additional extension in order to use these functions.
Note:
This extension has no configuration directives defined in php.ini.
This extension has no resource types defined.
This extension has no constants defined.
Prev
Home
Next
Up
PHP Manual
Prev
Next
These functions have been added in PHP 4.0.2.
PHP requires that you use CURL 7.0.2-beta or higher.
PHP will not work with any version of CURL below version 7.0.2-beta.
From PHP version 4.2.3 you will atleast need CURL version 7.9.0 or higher.
To use PHP' s CURL support you must also compile PHP --with-curl[=DIR] where DIR is the location of the directory containing the lib and include directories.
There should be a file named libcurl.a located in the "lib" directory.
Beginning with PHP 4.3.0 you can configure PHP to use CURL for url streams --with-curlwrappers.
Note to Win32 Users:
In order to enable this module on a Windows environment, you must copy libeay32.dll and ssleay32.dll from the DLL folder of the PHP / Win32 binary package to the SYSTEM32 folder of your windows machine. (Ex:
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Once you 've compiled PHP with CURL support, you can begin using the CURL functions.
Here is an example that uses the CURL functions to fetch the example.com homepage into a file:
Using PHP 's CURL module to fetch the example.com homepage
?php $ch = curl_init ("http: / /www.example.com / "); $fp = fopen ("example_homepage.txt", "w"); curl_setopt ($ch, CURLOPT_FILE, $fp); curl_setopt ($ch, CURLOPT_HEADER, 0); curl_exec ($ch); curl_close ($ch); fclose ($fp);?
Prev
Home
Next
Up
PHP Manual
Prev
Next
This extension has been removed from PHP as of PHP 4.3.0, if you have questions as to why then you will find the following CyberCash Faq helpful.
See the above faq for details.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Note:
This extension is not available on Windows platforms.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This function is currently not documented; only the argument list is available.
Note:
This extension is not available on Windows platforms.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Prev
Home
Next
Up
PHP Manual
Prev
Next
These functions allow you to get the date and time from the server where your PHP scripts are running.
You can use these functions to format the date and time in many different ways.
Note:
Please keep in mind that these functions are dependent on the locale settings of your server.
Make sure to take daylight saving time and leap years into consideration when working with these functions.
No external libraries are needed to build this extension.
There is no installation needed to use these functions; they are part of the PHP core.
This extension has no configuration directives defined in php.ini.
This extension has no resource types defined.
This extension has no constants defined.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 1.
Table 2.
Note: db2 conflicts with db3 and db4.
Note: db3 conflicts with db2 and db4.
Note: db4 conflicts with db2 and db3.
Note:
Note:
Note:
Note:
This extension has no configuration directives defined in php.ini.
This extension has no constants defined.
Example 1.
Example 2.
Prev
Home
Next
Up
PHP Manual
Prev
Next
This extension has no configuration directives defined in php.ini.
This extension has no resource types defined.
This extension has no constants defined.
Prev
Home
Next
Up
PHP Manual
Prev
Next
To use this functions you have to compile PHP with support for an underlying database.
In addition you must ensure support for an underlying database or you can use some sytem libraries.
The function dbmopen() returns an database identifier which is used by the other dbm-functions.
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This extension is EXPERIMENTAL.
The behaviour of this extension - - including the names of its functions and anything else documented about this extension - - may change without notice in a future release of PHP.
Use this extension at your own risk.
This extension has no configuration directives defined in php.ini.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Table 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
The behaviour of these functions is affected by settings in php.ini.
Table 1.
Note:
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
This extension is not available on Windows platforms.
No external libraries are needed to build this extension.
This extension has no configuration directives defined in php.ini.
This extension has no constants defined.
Prev
Home
Next
Up
Prev
No external libraries are needed to build this extension.
There is no installation needed to use these functions; they are part of the PHP core.
This extension has no configuration directives defined in php.ini.
This extension has no constants defined.
For related functions such as dirname(), is_dir(), mkdir(), and rmdir(), see the Filesystem section.
dio_write
PHP Manual
Prev
Next
Therefore, if you want to read an XML file and write a modified version, use DomDocument_create_element(), DomDocument_create_text_node(), set_attribute(), etc. and finally the DomDocument_dump_mem() function.
Download and install this library.
Download and install these libraries if you plan to use (enhanced XSLT features.
Add --with-dom-exslt[ =DIR] to include DOM EXSLT support, where DIR is the libexslt install directory.
In order to enable this module on a Windows environment, you must copy libxml2.dll from the DLL folder of the PHP / Win32 binary package to the SYSTEM32 folder of your windows machine. (Ex:
There are quite a few functions that do not fit into the DOM standard and should no longer be used.
The function DomNode_append_child() The function DomNode_append_child() has changed its behaviour.
If this breaks your application, use the non-DOM function DomNode_append_sibling().
Old function
DomDocument_dump_mem_file
DomDocument_create_element() followed by DomNode_append_child()
DomDocument_children
DomDocument_imported_node
DomDocument_create_element() und add it with DomNode_append_child().
DomDocument_create_element() and add it with DomNode_append_child().
DomNode_get_content
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
XML_COMMENT_NODE (integer)
XML_ATTRIBUTE_DECL_NODE (integer)
XML_ATTRIBUTE_ENTITY (integer)
XML_ATTRIBUTE_NOTATION (integer)
It is a good idea to have the DOM standard available when using this module.
First, all class attributes are implemented as functions with the same name.
Classes with an equivalent in the DOM standard are named DOMxxx.
DomDocument_create_processing_instruction()
DomNode_remove_child()
DomProcessingInstruction class (DomProcessingInstruction:
Instead of repeating this string in every example, it will be put into a file which will be included by each example.
Alternatively, you could create an XML document and read it with DomDocument_open_file().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This extension is EXPERIMENTAL.
The behaviour of this extension - - including the names of its functions and anything else documented about this extension - - may change without notice in a future release of PHP.
Use this extension at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
No external libraries are needed to build this extension.
There is no installation needed to use these functions; they are part of the PHP core.
The behaviour of these functions is affected by settings in php.ini.
Table 1.
Note:
Note:
Note:
The constants below are always available as part of the PHP core.
Note:
Table 2.
Example 1.
Prev
Home
Next
Up
Prev
Those functions provides means to executes commands on the system itself, and means secure such commands.
No external libraries are needed to build this extension.
This extension has no configuration directives defined in php.ini.
This extension has no constants defined.
Also, while in Safe Mode you must consider the safe_mode_exec_dir directive.
pcntl_wtermsig
PHP Manual
Prev
Next
The behaviour of these functions is affected by settings in php.ini.
Table 1.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
This extension has no configuration directives defined in php.ini.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
filePro is a registered trademark of fP Technologies, Inc.
filePro support in PHP is not enabled by default.
To enable the bundled read-only filePro support you need to use the --enable-filepro configuration option when compiling PHP.
Prev
Home
Next
Up
The behaviour of these functions is affected by settings in php.ini.
This option enables the URL-aware fopen wrappers that enable accessing URL object like files.
Note:
For versions up to and including 4.0.3 you can only disable this feature at compile time by using the configuration switch --disable-url-fopen-wrapper.
Define the user agent for PHP to send.
Define the anonymous ftp password (your email address).
This extension has no constants defined.
PHP Manual
Prev
Next
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Prev
Home
Next
Up
PHP Manual
Prev
Next
No external libraries are needed to build this extension.
The windows version of PHP The windows version of PHP has built in support for this extension.
You do not need to load any additional extension in order to use these functions.
This extension has no configuration directives defined in php.ini.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
This extension has no configuration directives defined in php.ini.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Please see the gettext documentation for your system for a thorough explanation of these functions or view the docs at http: / /www.gnu.org / manual / gettext / index.html.
To include GNU gettext support in your PHP build you must add the option --with-gettext[ =DIR] where DIR is the gettext install directory, defaults to / usr / local.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Warning
Note:
This extension is not available on Windows platforms.
This extension has no configuration directives defined in php.ini.
This extension has no resource types defined.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
No external libraries are needed to build this extension.
Prev
Home
Next
Up
PHP Manual
Prev
Next
The behaviour of these functions is affected by settings in php.ini.
Table 1.
This extension has no resource types defined.
This extension has no constants defined.
Prev
Home
Next
Up
PHP Manual
Prev
Next
The behaviour of these functions is affected by settings in php.ini.
Table 1.
This extension has no resource types defined.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
The behaviour of these functions is affected by settings in php.ini.
Table 1.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Prev
Home
Next
Up
PHP Manual
Prev
Next
The behaviour of these functions is affected by settings in php.ini.
Table 1.
This extension has no resource types defined.
Table 2. iconv constants
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
The behaviour of these functions is affected by settings in php.ini.
Note:
Table 1.
This extension has no constants defined.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Note:
Table 1.
Table 2.
Note:
Table 3.
Table 4.
The behaviour of these functions is affected by settings in php.ini.
Table 5.
This extension has no resource types defined.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Note:
Warning
This extension has no configuration directives defined in php.ini.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Prev
Home
Next
Up
You 'll also find functions to set options for your running PHP.
The behaviour of these functions is affected by settings in php.ini.
If enabled, no errors are shown (implicit error_reporting(0)) while evaluation.
You can turn dynamic loading of PHP extensions with dl() on and off per virtual server or per directory.
This helps prevent poorly written scripts from tying up the server.
When magic_quotes are on, all '(single-quote), "(double quote),\ (backslash) and NUL's are escaped with a backslash automatically.
If magic_quotes_sybase is also on, a single-quote is escaped with a single-quote instead of a backslash.
PHP Manual
Prev
Next
Note:
Warning
This extension is EXPERIMENTAL.
The behaviour of this extension - - including the names of its functions and anything else documented about this extension - - may change without notice in a future release of PHP.
Use this extension at your own risk.
The behaviour of these functions is affected by settings in php.ini.
Table 1.
This extension has no resource types defined.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Prev
Home
Next
Up
PHP Manual
Prev
Next
This extension has no configuration directives defined in php.ini.
This extension has no constants defined.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This extension is EXPERIMENTAL.
The behaviour of this extension - - including the names of its functions and anything else documented about this extension - - may change without notice in a future release of PHP.
Use this extension at your own risk.
The behaviour of these functions is affected by settings in php.ini.
Table 1.
This extension has no resource types defined.
This extension has no constants defined.
Example 1.
Example 2.
Prev
Home
Next
Up
PHP Manual
Prev
Next
The behaviour of these functions is affected by settings in php.ini.
Table 1.
This extension has no resource types defined.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Systems not using sendmail should set this directive to the sendmail wrapper / replacement their mail system offers, if any.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This extension is EXPERIMENTAL.
The behaviour of this extension - - including the names of its functions and anything else documented about this extension - - may change without notice in a future release of PHP.
Use this extension at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
No external libraries are needed to build this extension.
There is no installation needed to use these functions; they are part of the PHP core.
This extension has no configuration directives defined in php.ini.
This extension has no resource types defined.
The constants below are always available as part of the PHP core.
Table 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Note:
Note:
Note:
The behaviour of these functions is affected by settings in php.ini.
Table 1.
Example 1. php.ini setting example
Example 2. php.ini setting for EUC-JP users
Example 3. php.ini setting for SJIS users
This extension has no resource types defined.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Example 4.
Note:
Example 5. php.ini setting example
Example 6.
Note: "Supported character encoding" does not mean that it works as internal character code.
Table 2.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Note:
This extension is not available on Windows platforms.
This extension has no configuration directives defined in php.ini.
This extension has no resource types defined.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Prev
Home
Next
Up
PHP Manual
Prev
Next
The behaviour of these functions is affected by settings in php.ini.
Table 1.
This extension has no resource types defined.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Example 1.
Example 2.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Note:
This extension is not available on Windows platforms.
Prev
Home
Next
Up
PHP Manual
Prev
Next
These functions are intended to work with mhash.
This is an interface to the mhash library. mhash supports a wide variety of hash algorithms such as MD5, SHA1, GOST, and many others.
The general rule is that you can access the hash algorithm from PHP with MHASH_HASHNAME.
For example, to access TIGER you use the PHP constant MHASH_TIGER.
You need to compile PHP with the --with-mhash[ =DIR] parameter to enable this extension.
DIR is the mhash install directory.
Here is a list of hashes which are currently supported by mhash.
MHASH_MD5
Prev
Home
Next
Up
PHP Manual
Prev
Next
No external libraries are needed to build this extension.
The behaviour of these functions is affected by settings in php.ini.
Table 1.
This extension has no resource types defined.
This extension has no constants defined.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This extension is EXPERIMENTAL.
The behaviour of this extension - - including the names of its functions and anything else documented about this extension - - may change without notice in a future release of PHP.
Use this extension at your own risk.
Example 1. built into php (unix)
This extension has no configuration directives defined in php.ini.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
The classes below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Prev
Home
Next
Up
PHP Manual
Prev
Next
See also ignore_user_abort().
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
This extension is not available on Windows platforms.
Note:
This extension has no configuration directives defined in php.ini.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
This extension is not available on Windows platforms.
Prev
Home
Next
Up
PHP Manual
Prev
Next
The behaviour of these functions is affected by settings in php.ini.
Table 1. mSQL configuration options
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Prev
Home
Next
Up
PHP Manual
Prev
Next
The behaviour of these functions is affected by settings in php.ini.
Table 1.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This extension is EXPERIMENTAL.
The behaviour of this extension - - including the names of its functions and anything else documented about this extension - - may change without notice in a future release of PHP.
Use this extension at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
These functions allow you to access MySQL database servers.
More information about MySQL can be found at http: / /www.mysql.com /.
Documentation for MySQL can be found at http: / /www.mysql.com / documentation /.
In order to have these functions available, you must compile PHP with MySQL support.
By using the --with-mysql[ =DIR] configuration option you enable PHP to access MySQL databases.
If you use this option without specifying the path to MySQL, PHP will use the built-in MySQL client libraries.
With PHP 4 MySQL support is always enabled; if you don't specify the configure option, the bundled libraries are used.
This will force PHP to use the client libraries installed by MySQL, avoiding any conflicts.
You do not need to load any additional extension in order to use these functions.
Crashes and startup problems of PHP may be encountered when loading this extension in conjunction with the recode extension.
See the recode extension for more information.
The behaviour of these functions is affected by settings in php.ini.
Table 1.
MySQL Configuration Options
Default
"0"
Here is a short explanation of the configuration directives.
The maximum number of persistent MySQL connections per process.
The maximum number of MySQL connections per process, including persistent connections.
The default TCP port number to use when connecting to the database server if no other port is specified.
If no default is specified, the port will be obtained from the MYSQL_TCP_PORT environment variable, the mysql-tcp entry in / etc / services or the compile-time MYSQL_PORT constant, in that order.
Win32 will only use the MYSQL_PORT constant.
The default socket name to use when connecting to a local database server if no other socket name is specified.
Doesn 't apply in safe mode.
The default user name to use when connecting to the database server if no other name is specified.
The default password to use when connecting to the database server if no other password is specified.
Connect timeout in seconds.
On Linux this timeout is also used for waiting for the first answer from the server.
There are two resource types used in the MySQL module.
The first one is the link identifier for a database connection, the second a resource which holds the result of a query.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Since PHP 4.3.0 it is possible to specify additional client flags for the mysql_connect() and mysql_pconnect() functions.
The following constants are defined:
Table 2.
MySQL client constants
constant
description
MYSQL_CLIENT_IGNORE_SPACE
Allow interactive_timeout seconds (instead of wait_timeout) of inactivity before closing the connection.
The following constants are defined:
MySQL fetch constants
description
Columns are returned into the array having the fieldname as the array index.
MYSQL_BOTH
MYSQL_NUM
This index starts with 0, the first field in the result.
Example 1.
?php / * Connecting, selecting database * / $link = mysql_connect( "mysql_host", "mysql_user", "mysql_password") or die("Could not connect"); print "Connected successfully"; mysql_select_db("my_database") or die("Could not select database"); / * Performing SQL query * / $query = "SELECT * FROM my_table"; $result = mysql_query($query) or die("Query failed"); / * Printing results in HTML * / print "table \n"; while ($line = mysql_fetch_array($result, MYSQL_ASSOC)) {print "\t tr \n"; foreach ($line as $col_value) {print "\t\t td $col_value / td \n";} print "\t / tr \n";} print" / table \n"; / * Free resultset * / mysql_free_result($result); / * Closing connection * / mysql_close($link);?
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This extension is EXPERIMENTAL.
The behaviour of this extension - - including the names of its functions and anything else documented about this extension - - may change without notice in a future release of PHP.
Use this extension at your own risk.
The behaviour of these functions is affected by settings in php.ini.
Table 1.
This extension has no resource types defined.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Table 2. ncurses color constants
Table 3. ncurses key constants
Table 4. mouse constants
Prev
Home
Next
Up
The behaviour of these functions is affected by settings in php.ini.
Whether or not to define the various syslog variables (e.g. $LOG_PID, $LOG_CRON, etc.).
At runtime, you can define these variables by calling define_syslog_variables().
The constants below are always available as part of the PHP core.
LOG_NDELAY
(default) delay opening the connection until the first message is logged
Host Info Resource (See RFC 1010 for the meaning of these values)
PHP Manual
Prev
Next
For more information refer to the NIS manpage and The Linux NIS( YP) / NYS / NIS + HOWTO.
Note:
To get these functions to work, you have to configure PHP with --enable-yp.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This extension is EXPERIMENTAL.
The behaviour of this extension - - including the names of its functions and anything else documented about this extension - - may change without notice in a future release of PHP.
Use this extension at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This extension is EXPERIMENTAL.
The behaviour of this extension - - including the names of its functions and anything else documented about this extension - - may change without notice in a future release of PHP.
Use this extension at your own risk.
Example 1.
Example 2.
Example 3. storage_classes.inc
Example 4. test_aggregation.php
Prev
Home
Next
Up
PHP Manual
Prev
Next
This extension has no configuration directives defined in php.ini.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Example 1.
Example 2.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
The windows version of PHP The windows version of PHP has built in support for this extension.
You do not need to load any additional extension in order to use these functions.
The behaviour of these functions is affected by settings in php.ini.
Table 1.
Note:
This extension has no resource types defined.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Prev
Home
Next
Up
PHP Manual
Prev
Next
If you are using PHP 4.2.0 or later and are missing the file, you can obtain it from the OpenSSL home page or by downloading the PHP 4.3.0 release and using the configuration file from there.
When calling a function that will verify a signature / certificate, the cainfo parameter is an array containing file and directory names that specify the locations of trusted CA files.
The S / MIME functions make use of flags which are specified using a bitfield which can include one or more of the following values:
If decrypting or verifying, it strips those headers from the output - if the decrypted or verified message is not of MIME type text / plain then an error will occur.
When this options is present, no translation occurs.
With this option only the certificates specified in the extracerts parameter of openssl_pkcs7_verify() are used.
This will reduce the size of the signed message but the verifier must have a copy of the signers certificate available locally (passed using the extracerts to openssl_pkcs7_verify() for example.
If you turn this option off, the message will be signed using opaque signing, which is more resistant to translation by mail relays but cannot be read by mail agents that do not support S / MIME.
Prev
Home
Next
Up
PHP Manual
Prev
Next
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Prev
Home
Next
Up
PHP Manual
Prev
Next
The Output Control functions do not affect headers sent using header() or setcookie(), only functions such as echo() and data between blocks of PHP code.
If you wish to limit the size of the buffer to a certain size - you can use a maximum number of bytes instead of 'On', as a value for this directive (e.g., output_buffering=4096).
For example, if you set output_handler to mb_output_handler(), character encoding will be transparently converted to the specified encoding.
Note:
FALSE by default.
This value defaults to TRUE when operating under the CLI SAPI.
In the above example, the output from echo() would be stored in the output buffer until ob_end_flush() was called.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This extension is EXPERIMENTAL.
The behaviour of this extension - - including the names of its functions and anything else documented about this extension - - may change without notice in a future release of PHP.
Use this extension at your own risk.
No external libraries are needed to build this extension.
The windows version of PHP The windows version of PHP has built in support for this extension.
You do not need to load any additional extension in order to use these functions.
Note:
This extension has no configuration directives defined in php.ini.
This extension has no resource types defined.
This extension has no constants defined.
Example 1.
Warning
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
This extension is not available on Windows platforms.
This extension has no configuration directives defined in php.ini.
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
This extension is not available on Windows platforms.
No external libraries are needed to build this extension.
Note:
This extension has no configuration directives defined in php.ini.
This extension has no resource types defined.
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
The windows version of PHP The windows version of PHP has built in support for this extension.
You do not need to load any additional extension in order to use these functions.
This extension has no configuration directives defined in php.ini.
This extension has no resource types defined.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Table 1.
Example 1.
Example 2.
Prev
Home
Next
Up
PHP Manual
Prev
Next
The documentation in this section is only meant to be an overview of the available functions in the PDFlib library and should not be considered an exhaustive reference.
Please consult the documentation included in the source distribution of PDFlib for the full and detailed explanation of each function here.
It provides a very good overview of what PDFlib is capable of doing and contains the most up-to-date documentation of all functions.
All of the functions in PDFlib and the PHP module have identical function names and parameters.
You will need to understand some of the basic concepts of PDF and PostScript to efficiently use this extension.
All lengths and coordinates are measured in PostScript points.
There are generally 72 PostScript points to an inch, but this depends on the output resolution.
Please see the PDFlib documentation included with the source distribution of PDFlib for a more thorough explanation of the coordinate system used.
Please note that most of the PDF functions require a pdf object as its first parameter.
Please see the examples below for more information.
PDFlib is available for download at http: / /www.pdflib.com / pdflib / index.html, but requires that you purchase a license for commercial use.
The JPEG and TIFF libraries are required to compile this extension.
Any version of PHP 4 after March 9, 2000 does not support versions of PDFlib older than 3.0.
PDFlib 3.0 or greater is supported by PHP 3.0.19 and later.
To get these functions to work, you have to compile PHP with --with-pdflib[ =DIR].
DIR is the PDFlib base install directory, defaults to / usr / local.
To do so add to your configure line the options --with-jpeg-dir[ =DIR] --with-png-dir[=DIR] --with-tiff-dir[=DIR].
When using version 3.x of PDFlib, you should configure PDFlib with the option --enable-shared-pdflib.
This extension has no configuration directives defined in php.ini.
Starting with PHP 4.0.5, the PHP extension for PDFlib is officially supported by PDFlib GmbH.
This means that all the functions described in the PDFlib manual (V3.00 or greater) are supported by PHP 4 with exactly the same meaning and the same parameters.
Only the return values may differ from the PDFlib manual, because the PHP convention of returning FALSE was adopted.
For compatibility reasons, this binding for PDFlib still supports the old functions, but they should be replaced by their new versions.
PDFlib GmbH will not support any problems arising from the use of these deprecated functions.
Deprecated functions and their replacements
pdf_put_image()
Not needed anymore.
pdf_get_bookmark() using the same parameters.
pdf_get_value() passing "font "as the second parameter.
pdf_get_value() passing "fontsize "as the second parameter.
pdf_get_parameter() passing "fontname "as the second parameter.
pdf_set_info() passing "Creator "as the second parameter.
pdf_set_info() passing "Title "as the second parameter.
pdf_set_info() passing "Subject "as the second parameter.
pdf_set_info() passing "Author "as the second parameter.
pdf_set_info() passing "Keywords "as the second parameter.
pdf_set_value() passing "leading "as the second parameter.
pdf_set_value() passing "textrendering "as the second parameter.
pdf_set_value() passing "textrise "as the second parameter.
pdf_set_value() passing "horizscaling "as the second parameter.
Not available anymore
pdf_set_char_spacing()
pdf_set_value() passing "charspacing "as the second parameter.
pdf_set_word_spacing()
pdf_set_value() passing "wordspacing "as the second parameter.
pdf_set_transition()
pdf_set_parameter() passing "transition "as the second parameter.
pdf_new() plus an subsequent call of pdf_open_file()
pdf_set_font()
pdf_set_duration()
pdf_set_value() passing "duration "as the second parameter.
pdf_open_image_file() passing "gif "as the second parameter.
pdf_open_image_file() passing "jpeg "as the second parameter.
pdf_open_tiff()
pdf_open_image_file() passing "tiff "as the second parameter.
pdf_open_png()
pdf_open_image_file() passing "png "as the second parameter.
pdf_get_image_width()
pdf_get_value() passing "imagewidth "as the second parameter and the image as the third parameter.
pdf_get_image_height()
pdf_get_value() passing "imageheight "as the second parameter and the image as the third parameter.
Most of the functions are fairly easy to use.
The most difficult part is probably creating your first PDF document.
The following example should help to get you started.
It creates test.pdf It creates test.pdf with one page.
The page contains the text "Times Roman outlined" in an outlined, 30pt font.
The text is also underlined.
Example 1.
Creating a PDF document with PDFlib
?php $pdf = pdf_new(); pdf_open_file($pdf, "test.pdf"); pdf_set_info($pdf, "Author", "Uwe Steinmann"); pdf_set_info($pdf, "Title", "Test for PHP wrapper of PDFlib 2.0"); pdf_set_info($pdf, "Creator", "See Author"); pdf_set_info($pdf, "Subject", "Testing"); pdf_begin_page($pdf, 595, 842); pdf_add_outline($pdf, "Page 1"); $font = pdf_findfont($pdf, "Times New Roman", "winansi", 1); pdf_setfont($pdf, $font, 10); pdf_set_value($pdf, "textrendering", 1); pdf_show_xy($pdf, "Times Roman outlined", 50, 750); pdf_moveto($pdf, 50, 740); pdf_lineto($pdf, 330, 740); pdf_stroke($pdf); pdf_end_page($pdf); pdf_close($pdf); pdf_delete($pdf); echo "A HREF=getpdf.php finished / A";?
The script getpdf.php just returns the pdf document.
?php $len = filesize( $filename); header("Content-type: application / pdf"); header("Content-Length: $len"); header("Content-Disposition: inline; filename=foo.pdf"); readfile($filename);?
Here we use the in-memory creation feature of PDFlib to alleviate the need to use temporary files.
The example was converted to PHP from the PDFlib example. (The same example is available in the CLibPDF documentation.)
Example 2. pdfclock example from PDFlib distribution
Note:
An alternative PHP module for PDF document creation based on FastIO' s An alternative PHP module for PDF document creation based on FastIO's ClibPDF is available.
Note that ClibPDF has a slightly different API than PDFlib.
Prev
Home
Next
Up
PHP Manual
Prev
Next
When using these functions, you may omit calls to pfpro_init() and pfpro_cleanup() as this extension will do so automatically if required.
You may perform any number of transactions using pfpro_process() between the two.
Be sure to read the Payflow Pro Developers Guide for full details of the required parameters.
You will require the appropriate SDK for your platform, which may be downloaded from within the manager interface once you have registered.
Once you have downloaded the SDK you should copy the files from the lib Once you have downloaded the SDK you should copy the files from the lib directory of the distribution.
These functions are only available if PHP has been compiled with the --with-pfpro[ =DIR] option.
Table 1.
Name
"test.signio.com"
"test-payflow.verisign.com"
This extension has no constants defined.
Prev
Home
Next
Up
PHP Manual
Prev
Next
The behaviour of these functions is affected by settings in php.ini.
Table 1.
Warning
Warning
Table 2.
Table 3.
Example 1.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Example 2.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
Note:
This extension is not available on Windows platforms.
Prev
Home
Next
Up
PHP Manual
Prev
Next
The behaviour of these functions is affected by settings in php.ini.
Table 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
This extension is not available on Windows platforms.
This extension has no configuration directives defined in php.ini.
This extension has no resource types defined.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This extension is EXPERIMENTAL.
The behaviour of this extension - - including the names of its functions and anything else documented about this extension - - may change without notice in a future release of PHP.
Use this extension at your own risk.
Note:
This extension is not available on Windows platforms.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Because of the interactive nature of this library, it will be of little use for writing Web applications, but may be useful when writing scripts meant using PHP from the command line.
To use the readline functions, you need to install libreadline.
It' s maintained by Chet Ramey, who's also the author of Bash.
The libedit library is BSD licensend and available for download from http: / /sourceforge.net / projects / libedit /.
You need to configure PHP --with-readline[ =DIR].
This extension has no configuration directives defined in php.ini.
Prev
Home
Next
Up
PHP Manual
Prev
Next
The GNU Recode library converts files between various coded character sets and surface encodings.
The library recognises or produces nearly 150 different character sets and is able to convert files between almost any pair.
You must have GNU Recode 3.5 or higher installed on your system.
To be able to use the functions defined in this module you must compile your PHP interpreter using the --with-recode[ =DIR] option.
Crashes and startup problems of PHP may be encountered when loading the recode as extension after loading any extension of mysql or imap.
This is due a technical problem that both the c-client library used by imap and recode have their own hash_lookup() function and both mysql and recode have their own hash_insert function.
This is due to the fact that they both share the same internal symbol.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Warning
No external libraries are needed to build this extension.
Note:
The windows version of PHP The windows version of PHP has built in support for this extension.
You do not need to load any additional extension in order to use these functions.
This extension has no configuration directives defined in php.ini.
This extension has no resource types defined.
This extension has no constants defined.
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
It includes semaphores, shared memory and inter-process messaging (IPC).
This module provides also shared memory functions using System V shared memory.
Different httpd-daemons and even other programs (such as Perl, C,...) are able to access this data to provide a global data-exchange.
Use semaphores for synchronization.
Limits of Shared Memory by the Unix OS
max size of shared memory, normally 131072 bytes
minimum size of shared memory, normally 1 byte
max amount of shared memory segments on a system, normally 100
max amount of shared memory segments per process, normally 6
They provide a simple and effective means of exchanging data between processes, without the need for setting up an alternative using unix domain sockets.
Support for this functions are not enabled by default.
To enable the System V messages support compile PHP with the option --enable-sysvmsg.
Name
"42"
sysvmsg.string
This extension has no constants defined.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
The behaviour of these functions is affected by settings in php.ini.
Table 1.
Table 2.
Table 3.
Example 1.
Example 2.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Note:
No external libraries are needed to build this extension.
Note:
The windows version of PHP The windows version of PHP has built in support for this extension.
You do not need to load any additional extension in order to use these functions.
The behaviour of these functions is affected by settings in php.ini.
Table 1.
Warning
Note:
Note:
Note:
Note:
This extension has no resource types defined.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Note:
Example 1.
Example 2.
Example 3.
Caution
Example 4.
Note:
Example 5.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
These functions will not typically work on Windows, as it does not support shared memory.
As of Windows 2000 though, enabling the php_shmop.dll in your php.ini will enable this functionality though.
In PHP 4.0.3, these functions were prefixed by shm rather than shmop.
No external libraries are needed to build this extension.
This extension has no configuration directives defined in php.ini.
This extension has no constants defined.
Example 1.
?php / / Create 100 byte shared memory block with system id if 0xff3 $shm_id = shmop_open( 0xff3, "c", 0644, 100); if(!$shm_id) {echo "Couldn't create shared memory segment\n";} / / Get shared memory block's size $shm_size = shmop_size($shm_id); echo "SHM Block Size: ".$shm_size. "has been created.\n"; / / Lets write a test string into shared memory $shm_bytes_written = shmop_write($shm_id, "my shared memory block", 0); if($shm_bytes_written != strlen("my shared memory block")) {echo "Couldn't write the entire length of data\n";} / / Now lets read the string back $my_string = shmop_read($shm_id, 0, $shm_size); if(!$my_string) {echo "Couldn't read from shared memory block\n";} echo "The data inside shared memory was: ".$my_string ."\n"; / /Now lets delete the block and close the shared memory segment if(!shmop_delete($shm_id)) {echo "Couldn't mark shared memory block for deletion .";} shmop_close($shm_id);?
Prev
Home
Next
Up
PHP Manual
Prev
Next
This extension has no configuration directives defined in php.ini.
This extension has no constants defined.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This extension is EXPERIMENTAL.
The behaviour of this extension - - including the names of its functions and anything else documented about this extension - - may change without notice in a future release of PHP.
Use this extension at your own risk.
No external libraries are needed to build this extension.
This extension has no configuration directives defined in php.ini.
This extension has no resource types defined.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Note:
Example 1.
Example 2.
Prev
Home
Next
Up
PHP Manual
Prev
Next
There are many wrappers built into PHP by default (See Appendix I), and additional, custom wrappers may be added either within a PHP script using stream_register_wrapper(), or directly from an extension using the API Reference in Chapter 43.
Custom filters can be defined in a PHP script using stream_register_filter() or in an extension using the API Reference in Chapter 43.
See Appendix I for a list of PHP builtin wrappers.
Again, see Appendix I for a description of targets for builtin streams.
No external libraries are needed to build this extension.
This extension has no configuration directives defined in php.ini.
Example 1.
Example 2.
Example 3.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Some more specialized sections can be found in the regular expression and URL handling sections.
For information on how strings behave, especially with regard to usage of single quotes, double quotes, and escape sequences, see the Strings entry in the Types section of the manual.
There is no installation needed to use these functions; they are part of the PHP core.
For even more powerful string handling and manipulating functions take a look at the POSIX regular expression functions and the Perl compatible regular expression functions.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
This extension has no configuration directives defined in php.ini.
This extension has no resource types defined.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
The behaviour of these functions is affected by settings in php.ini.
Table 1.
Note:
Table 2.
This extension has no constants defined.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This extension is EXPERIMENTAL.
The behaviour of this extension - - including the names of its functions and anything else documented about this extension - - may change without notice in a future release of PHP.
Use this extension at your own risk.
No external libraries are needed to build this extension.
The windows version of PHP The windows version of PHP has built in support for this extension.
You do not need to load any additional extension in order to use these functions.
Note:
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Prev
Home
Next
Up
Prev
Dealing with URL strings: encoding, decoding and parsing.
No external libraries are needed to build this extension.
This extension has no configuration directives defined in php.ini.
This extension has no resource types defined.
This extension has no constants defined.
token_name
PHP Manual
Prev
Next
No external libraries are needed to build this extension.
There is no installation needed to use these functions; they are part of the PHP core.
The behaviour of these functions is affected by settings in php.ini.
Table 1.
This extension has no resource types defined.
This extension has no constants defined.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This extension is EXPERIMENTAL.
The behaviour of this extension - - including the names of its functions and anything else documented about this extension - - may change without notice in a future release of PHP.
Use this extension at your own risk.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This extension is EXPERIMENTAL.
The behaviour of this extension - - including the names of its functions and anything else documented about this extension - - may change without notice in a future release of PHP.
Use this extension at your own risk.
There is no installation needed to use these functions; they are part of the PHP core.
This extension has no configuration directives defined in php.ini.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
These functions are intended for work with WDDX.
After installing expat compile PHP with --enable-wddx.
You do not need to load any additional extension in order to use these functions.
This extension has no resource types defined.
This extension has no constants defined.
If the first element has string key, then it is serialized into a structure, otherwise, into an array.
Example 1.
This example will produce:
Example 2.
This example will produce:
Prev
Home
Next
Up
PHP Manual
Prev
Next
The windows version of PHP The windows version of PHP has built in support for this extension.
You do not need to load any additional extension in order to use these functions.
This extension has no configuration directives defined in php.ini.
This extension has no resource types defined.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Table 1.
Example 1.
Example 2.
Example 3.
Example 4. xmltest.xml
Example 5. xmltest2.xml
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
This extension is EXPERIMENTAL.
The behaviour of this extension - - including the names of its functions and anything else documented about this extension - - may change without notice in a future release of PHP.
Use this extension at your own risk.
No external libraries are needed to build this extension.
The behaviour of these functions is affected by settings in php.ini.
Table 1.
This extension has no resource types defined.
This extension has no constants defined.
Prev
Home
Next
Up
PHP Manual
Prev
Next
This PHP extension provides a processor independent API to XSLT transformations.
Support is planned for other libraries, such as the Xalan library or the libxslt library.
It is a standard defined by The World Wide Web Consortium (W3C).
Note:
If you need support for the old extension, please ask your questions on the PHP mailing lists.
Binaries are provided as well as source.
Make sure you have the same libraries linked to the Sablotron library as those, which are linked with PHP.
When asking for support, always mention these directives, and whether there are other versions of those libraries installed on your system somewhere.
If you compiled Sablotron with JavaScript support, you must specify the option: --with-sablot-js=DIR.
C:\WINNT\SYSTEM32 or C:\WINDOWS\SYSTEM32)
This extension has no resource types defined.
Drop all logging and error reporting.
Consider unresolved documents (the document() function) non-lethal.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Warning
The behaviour of these functions is affected by settings in php.ini.
Table 1.
This extension has no resource types defined.
This extension has no constants defined.
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
This extension has no configuration directives defined in php.ini.
This extension has no resource types defined.
This extension has no constants defined.
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
The windows version of PHP The windows version of PHP has built in support for this extension.
You do not need to load any additional extension in order to use these functions.
Note:
The behaviour of these functions is affected by settings in php.ini.
Table 1.
This extension has no resource types defined.
The constants below are defined by this extension, and will only be available when the extension has either been compiled into PHP or dynamically loaded at runtime.
Example 1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
The following is a listing of predefined identifiers in PHP.
None of the identifiers listed here should be used as identifiers in a your scripts.
These lists include keywords and predefined variable, constant, and class names.
These lists are neither exhaustive or complete.
These words have special meaning in PHP.
Some of them represent things which look like functions, some look like constants, and so on--but they 're not, really: they are language constructs.
You cannot use any of the following words as constants, class names, or function names.
Using them as variable names is generally OK, but could lead to confusion.
Table G-1.
and
__FILE__
array()
echo()
empty()
endforeach
endif
endwhile
eval
extends
for
function
list()
var
__FUNCTION__
__CLASS__
Prev
Home
Next
List of Function Aliases
Up
Predefined Variables
PHP Manual
Prev
Next
Table H-1.
Prev
Home
Next
Standard Predefined Constants
Up
PHP Manual
Prev
Chapter 5.
Next
By using open_basedir By using open_basedir you can control and restrict what directories are allowed to be used for PHP.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 5.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 5.
Next
Prev
Home
Next
Up
Language Reference
PHP Manual
Prev
Chapter 5.
Next
Example 5-5.
Example 5-6.
Note:
Example 5-7.
Example 5-8.
Example 5-9.
Note:
Example 5-10.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 5.
Next
Example 5-11.
Example 5-12.
Example 5-13.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 5.
Next
Example 5-1.
Example 5-2....
Example 5-3.
Example 5-4.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 5.
Next
Example 5-18.
Example 5-19.
Example 5-20.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 5.
Next
Example 5-14.
Example 5-15.
Example 5-16.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 5.
Next
Example 5-17.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 43.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 43.
Next
Example 43-1. simple stream example that displays the PHP home page
Table 43-1.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 43.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 43.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 43.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
Frequently Asked Questions
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Table 43-1.
Table 43-2.
Note:
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 43-1.
Note:
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table 43-1. php_stream_make_seekable() return values
Note:
Note:
Note:
Note:
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 43.
Next
Example 43-2.
Example 43-3.
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 43.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 43.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Table J-1.
Prev
Home
Next
Up
About the manual
PHP Manual
Prev
Chapter 2.
Next
Example 2-1.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 2.
Next
Example 2-6.
Example 2-7.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 2.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 2.
Next
Example 2-2.
Example 2-3.
Example 2-4.
Example 2-5.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 2.
Next
Prev
Home
Next
Up
Installation
PHP Manual
Prev
Appendix I.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Appendix I.
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Appendix I.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
A set of macros was introduced into Zend' s API that simplify access to zval containers (see Table 42-1).
Table 42-1.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 32.
Next
To work around this, you have to use a set of API functions to force a type conversion on every argument that' s being passed (see Table 32-1).
Table 32-1.
Note:
Figure 32-2 shows the output.
Figure 32-2.
Example 32-2.
For a description of both structures, see Table 32-2, Table 32-3 and Table 32-4.
Table 32-2.
See Table 32-3 for a description.
For a list of available types, see Table 32-4.
Table 32-3.
Table 32-4.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 32.
Next
Examples are given in in Example 32-3.
Example 32-3.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 32.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Figure 32-1.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 32.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 32.
Next
A very clever implementation of this can be found in the code handling PHP' s fsockopen() located in ext / standard / fsock.c, as shown in Example 32-1.
Example 32-1.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 32.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
The default config.m4 shown in Example 27-1 is a bit more complex:
Example 27-1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 38-1 shows a small demonstration of calling a user function.
Example 38-1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
PHP defines a set of macros that can be used in this process, the most useful of which are described in Table 41-1.
Table 41-1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 28-1 shows the source.
Example 28-1.
Note:
The module shown earlier in Example 28-1 can be enabled with --enable-first_module or --enable-first_module=yes.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
PHP Manual
Prev
Next
Access to initialization entries can also be handled with the macros shown in Table 39-1.
Table 39-1.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 26.
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 26.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 26.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 26.
Next
Warning
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 26.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
This might sound a bit confusing at first, but it' s not that complicated (see Figure 24-1).
Figure 24-1.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 25.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 25.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
As shown in Figure 24-1 As shown in Figure 24-1 above, PHP can be extended primarily at three points: external modules, built-in modules, and the Zend engine.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 36.
Next
For examples of these functions, see Example 36-2.
Example 36-2.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 36.
Next
Example 36-1 Example 36-1 shows a source example and its output.
Example 36-1.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 36.
Next
Table 36-1.
Figure 36-1.
Prev
Home
Next
Up
PHP Manual
Prev
Next
These macros automatically set the correspondent type and value, as described in Table 35-1 and Table 35-2.
Note:
The macros in Table 35-1 automatically return from your function, those in Table 35-2 only set the return value; they don't return from your function.
Table 35-1.
Table 35-2.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 31.
Next
The parameter list of this declaration is very important; you should keep these parameters in mind (see Table 31-1 for descriptions).
Table 31-1.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 31.
Next
Internally, zend_function_entry is defined as shown in Example 31-1.
Example 31-1.
Note:
Table 31-2 shows a list of all the macros that you can use to define functions.
Table 31-2.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 31.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 31.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 31.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 31.
Next
You can see the internal definition of this module in Example 31-2.
Example 31-2.
For reference purposes, you can find a list of the macros involved in declared startup and shutdown functions in Table 31-3.
Table 31-3.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 31.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
For a simple test procedure, you can copy it to your htdocs directory and try it with the source in Example 29-1.
Warning
Example 29-1.
Calling this PHP file in your Web browser should give you the output shown in Figure 29-1.
Figure 29-1.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 33.
Next
Table 33-1, Table 33-2 and Table 33-3 describe these functions.
Table 33-1.
Table 33-2.
Table 33-3.
This is done using zend_hash_update( )() for associative arrays (see Example 33-3) and zend_hash_index_update() for indexed arrays (see Example 33-4):
Example 33-3.
Example 33-4.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 33.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 33.
Next
To create your own constants, you can use the macros in Table 33-6.
Table 33-6.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 33.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 33.
Next
This is somewhat bad practice, but Table Table 33-5 describes macros that do exactly this task.
Table 33-5.
Prev
Home
Next
Up
PHP Manual
Prev
Next
Example 33-1.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 33.
Next
The corresponding type value for longs is IS_LONG (see Example 33-2).
Example 33-2.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 33.
Next
Table 33-4.
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 33.
Next
Note:
Note:
Note:
Prev
Home
Next
Up
PHP Manual
Prev
Chapter 33.
Next
Prev
Home
Next
Up
PHP Manual
Prev
Next
Prev
Home
Next
Up
